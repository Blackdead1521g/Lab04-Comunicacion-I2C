

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Aug 11 09:25:26 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    43                           	dabs	1,0x7E,2
    44     0000                     
    45                           ; Version 2.40
    46                           ; Generated 17/11/2021 GMT
    47                           ; 
    48                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F887 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80     0000                     	;# 
    81     0001                     	;# 
    82     0002                     	;# 
    83     0003                     	;# 
    84     0004                     	;# 
    85     0005                     	;# 
    86     0006                     	;# 
    87     0007                     	;# 
    88     0008                     	;# 
    89     0009                     	;# 
    90     000A                     	;# 
    91     000B                     	;# 
    92     000C                     	;# 
    93     000D                     	;# 
    94     000E                     	;# 
    95     000E                     	;# 
    96     000F                     	;# 
    97     0010                     	;# 
    98     0011                     	;# 
    99     0012                     	;# 
   100     0013                     	;# 
   101     0014                     	;# 
   102     0015                     	;# 
   103     0015                     	;# 
   104     0016                     	;# 
   105     0017                     	;# 
   106     0018                     	;# 
   107     0019                     	;# 
   108     001A                     	;# 
   109     001B                     	;# 
   110     001B                     	;# 
   111     001C                     	;# 
   112     001D                     	;# 
   113     001E                     	;# 
   114     001F                     	;# 
   115     0081                     	;# 
   116     0085                     	;# 
   117     0086                     	;# 
   118     0087                     	;# 
   119     0088                     	;# 
   120     0089                     	;# 
   121     008C                     	;# 
   122     008D                     	;# 
   123     008E                     	;# 
   124     008F                     	;# 
   125     0090                     	;# 
   126     0091                     	;# 
   127     0092                     	;# 
   128     0093                     	;# 
   129     0093                     	;# 
   130     0093                     	;# 
   131     0094                     	;# 
   132     0095                     	;# 
   133     0096                     	;# 
   134     0097                     	;# 
   135     0098                     	;# 
   136     0099                     	;# 
   137     009A                     	;# 
   138     009B                     	;# 
   139     009C                     	;# 
   140     009D                     	;# 
   141     009E                     	;# 
   142     009F                     	;# 
   143     0105                     	;# 
   144     0107                     	;# 
   145     0108                     	;# 
   146     0109                     	;# 
   147     010C                     	;# 
   148     010C                     	;# 
   149     010D                     	;# 
   150     010E                     	;# 
   151     010F                     	;# 
   152     0185                     	;# 
   153     0187                     	;# 
   154     0188                     	;# 
   155     0189                     	;# 
   156     018C                     	;# 
   157     018D                     	;# 
   158     0000                     	;# 
   159     0001                     	;# 
   160     0002                     	;# 
   161     0003                     	;# 
   162     0004                     	;# 
   163     0005                     	;# 
   164     0006                     	;# 
   165     0007                     	;# 
   166     0008                     	;# 
   167     0009                     	;# 
   168     000A                     	;# 
   169     000B                     	;# 
   170     000C                     	;# 
   171     000D                     	;# 
   172     000E                     	;# 
   173     000E                     	;# 
   174     000F                     	;# 
   175     0010                     	;# 
   176     0011                     	;# 
   177     0012                     	;# 
   178     0013                     	;# 
   179     0014                     	;# 
   180     0015                     	;# 
   181     0015                     	;# 
   182     0016                     	;# 
   183     0017                     	;# 
   184     0018                     	;# 
   185     0019                     	;# 
   186     001A                     	;# 
   187     001B                     	;# 
   188     001B                     	;# 
   189     001C                     	;# 
   190     001D                     	;# 
   191     001E                     	;# 
   192     001F                     	;# 
   193     0081                     	;# 
   194     0085                     	;# 
   195     0086                     	;# 
   196     0087                     	;# 
   197     0088                     	;# 
   198     0089                     	;# 
   199     008C                     	;# 
   200     008D                     	;# 
   201     008E                     	;# 
   202     008F                     	;# 
   203     0090                     	;# 
   204     0091                     	;# 
   205     0092                     	;# 
   206     0093                     	;# 
   207     0093                     	;# 
   208     0093                     	;# 
   209     0094                     	;# 
   210     0095                     	;# 
   211     0096                     	;# 
   212     0097                     	;# 
   213     0098                     	;# 
   214     0099                     	;# 
   215     009A                     	;# 
   216     009B                     	;# 
   217     009C                     	;# 
   218     009D                     	;# 
   219     009E                     	;# 
   220     009F                     	;# 
   221     0105                     	;# 
   222     0107                     	;# 
   223     0108                     	;# 
   224     0109                     	;# 
   225     010C                     	;# 
   226     010C                     	;# 
   227     010D                     	;# 
   228     010E                     	;# 
   229     010F                     	;# 
   230     0185                     	;# 
   231     0187                     	;# 
   232     0188                     	;# 
   233     0189                     	;# 
   234     018C                     	;# 
   235     018D                     	;# 
   236     0000                     	;# 
   237     0001                     	;# 
   238     0002                     	;# 
   239     0003                     	;# 
   240     0004                     	;# 
   241     0005                     	;# 
   242     0006                     	;# 
   243     0007                     	;# 
   244     0008                     	;# 
   245     0009                     	;# 
   246     000A                     	;# 
   247     000B                     	;# 
   248     000C                     	;# 
   249     000D                     	;# 
   250     000E                     	;# 
   251     000E                     	;# 
   252     000F                     	;# 
   253     0010                     	;# 
   254     0011                     	;# 
   255     0012                     	;# 
   256     0013                     	;# 
   257     0014                     	;# 
   258     0015                     	;# 
   259     0015                     	;# 
   260     0016                     	;# 
   261     0017                     	;# 
   262     0018                     	;# 
   263     0019                     	;# 
   264     001A                     	;# 
   265     001B                     	;# 
   266     001B                     	;# 
   267     001C                     	;# 
   268     001D                     	;# 
   269     001E                     	;# 
   270     001F                     	;# 
   271     0081                     	;# 
   272     0085                     	;# 
   273     0086                     	;# 
   274     0087                     	;# 
   275     0088                     	;# 
   276     0089                     	;# 
   277     008C                     	;# 
   278     008D                     	;# 
   279     008E                     	;# 
   280     008F                     	;# 
   281     0090                     	;# 
   282     0091                     	;# 
   283     0092                     	;# 
   284     0093                     	;# 
   285     0093                     	;# 
   286     0093                     	;# 
   287     0094                     	;# 
   288     0095                     	;# 
   289     0096                     	;# 
   290     0097                     	;# 
   291     0098                     	;# 
   292     0099                     	;# 
   293     009A                     	;# 
   294     009B                     	;# 
   295     009C                     	;# 
   296     009D                     	;# 
   297     009E                     	;# 
   298     009F                     	;# 
   299     0105                     	;# 
   300     0107                     	;# 
   301     0108                     	;# 
   302     0109                     	;# 
   303     010C                     	;# 
   304     010C                     	;# 
   305     010D                     	;# 
   306     010E                     	;# 
   307     010F                     	;# 
   308     0185                     	;# 
   309     0187                     	;# 
   310     0188                     	;# 
   311     0189                     	;# 
   312     018C                     	;# 
   313     018D                     	;# 
   314     0000                     	;# 
   315     0001                     	;# 
   316     0002                     	;# 
   317     0003                     	;# 
   318     0004                     	;# 
   319     0005                     	;# 
   320     0006                     	;# 
   321     0007                     	;# 
   322     0008                     	;# 
   323     0009                     	;# 
   324     000A                     	;# 
   325     000B                     	;# 
   326     000C                     	;# 
   327     000D                     	;# 
   328     000E                     	;# 
   329     000E                     	;# 
   330     000F                     	;# 
   331     0010                     	;# 
   332     0011                     	;# 
   333     0012                     	;# 
   334     0013                     	;# 
   335     0014                     	;# 
   336     0015                     	;# 
   337     0015                     	;# 
   338     0016                     	;# 
   339     0017                     	;# 
   340     0018                     	;# 
   341     0019                     	;# 
   342     001A                     	;# 
   343     001B                     	;# 
   344     001B                     	;# 
   345     001C                     	;# 
   346     001D                     	;# 
   347     001E                     	;# 
   348     001F                     	;# 
   349     0081                     	;# 
   350     0085                     	;# 
   351     0086                     	;# 
   352     0087                     	;# 
   353     0088                     	;# 
   354     0089                     	;# 
   355     008C                     	;# 
   356     008D                     	;# 
   357     008E                     	;# 
   358     008F                     	;# 
   359     0090                     	;# 
   360     0091                     	;# 
   361     0092                     	;# 
   362     0093                     	;# 
   363     0093                     	;# 
   364     0093                     	;# 
   365     0094                     	;# 
   366     0095                     	;# 
   367     0096                     	;# 
   368     0097                     	;# 
   369     0098                     	;# 
   370     0099                     	;# 
   371     009A                     	;# 
   372     009B                     	;# 
   373     009C                     	;# 
   374     009D                     	;# 
   375     009E                     	;# 
   376     009F                     	;# 
   377     0105                     	;# 
   378     0107                     	;# 
   379     0108                     	;# 
   380     0109                     	;# 
   381     010C                     	;# 
   382     010C                     	;# 
   383     010D                     	;# 
   384     010E                     	;# 
   385     010F                     	;# 
   386     0185                     	;# 
   387     0187                     	;# 
   388     0188                     	;# 
   389     0189                     	;# 
   390     018C                     	;# 
   391     018D                     	;# 
   392                           
   393                           	psect	idataBANK0
   394     0E19                     __pidataBANK0:
   395                           
   396                           ;initializer for _ds3231_direccion_biciestos
   397     0E19  3406               	retlw	6
   398                           
   399                           ;initializer for _ds3231_direccion_meses
   400     0E1A  3405               	retlw	5
   401                           
   402                           ;initializer for _ds3231_direccion_dias
   403     0E1B  3404               	retlw	4
   404                           
   405                           ;initializer for _ds3231_direccion_horas
   406     0E1C  3402               	retlw	2
   407                           
   408                           ;initializer for _ds3231_direccion_minutos
   409     0E1D  3401               	retlw	1
   410                           
   411                           ;initializer for _ds3231_direccion
   412     0E1E  3468               	retlw	104
   413                           
   414                           	psect	strings
   415     0800                     __pstrings:
   416     0800                     stringtab:
   417     0800                     __stringtab:
   418                           
   419                           ;	String table - string pointers are 1 byte each
   420     0800  1BFF               	btfsc	btemp+1,7
   421     0801  280A               	ljmp	stringcode
   422     0802  1383               	bcf	3,7
   423     0803  187F               	btfsc	btemp+1,0
   424     0804  1783               	bsf	3,7
   425     0805  0800               	movf	0,w
   426     0806  0A84               	incf	4,f
   427     0807  1903               	skipnz
   428     0808  0AFF               	incf	btemp+1,f
   429     0809  0008               	return
   430     080A                     stringcode:
   431     080A                     stringdir:
   432     080A  3008               	movlw	high stringdir
   433     080B  008A               	movwf	10
   434     080C  0804               	movf	4,w
   435     080D  0A84               	incf	4,f
   436     080E  0782               	addwf	2,f
   437     080F                     __stringbase:
   438     080F  3400               	retlw	0
   439     0810                     __end_of__stringtab:
   440     0810                     _dpowers:
   441     0810  3401               	retlw	1
   442     0811  3400               	retlw	0
   443     0812  340A               	retlw	10
   444     0813  3400               	retlw	0
   445     0814  3464               	retlw	100
   446     0815  3400               	retlw	0
   447     0816  34E8               	retlw	232
   448     0817  3403               	retlw	3
   449     0818  3410               	retlw	16
   450     0819  3427               	retlw	39
   451     081A                     __end_of_dpowers:
   452     0009                     _PORTEbits	set	9
   453     0009                     _PORTE	set	9
   454     0008                     _PORTD	set	8
   455     0006                     _PORTB	set	6
   456     0005                     _PORTA	set	5
   457     0006                     _PORTBbits	set	6
   458     000B                     _INTCONbits	set	11
   459     0013                     _SSPBUF	set	19
   460     0014                     _SSPCON	set	20
   461     0063                     _SSPIF	set	99
   462     005E                     _PEIE	set	94
   463     005F                     _GIE	set	95
   464     008F                     _OSCCONbits	set	143
   465     0096                     _IOCB	set	150
   466     0081                     _OPTION_REGbits	set	129
   467     0089                     _TRISE	set	137
   468     0088                     _TRISD	set	136
   469     0086                     _TRISB	set	134
   470     0085                     _TRISA	set	133
   471     0091                     _SSPCON2bits	set	145
   472     0087                     _TRISCbits	set	135
   473     0094                     _SSPSTAT	set	148
   474     0093                     _SSPADD	set	147
   475     0091                     _SSPCON2	set	145
   476     0463                     _SSPIE	set	1123
   477     043C                     _TRISC4	set	1084
   478     043B                     _TRISC3	set	1083
   479     0189                     _ANSELH	set	393
   480     0188                     _ANSEL	set	392
   481     081A                     STR_9:
   482     081A  3432               	retlw	50	;'2'
   483     081B  3430               	retlw	48	;'0'
   484     081C  3430               	retlw	48	;'0'
   485     081D  3400               	retlw	0
   486     081E                     STR_8:
   487     081E  3441               	retlw	65	;'A'
   488     081F  3444               	retlw	68	;'D'
   489     0820  3443               	retlw	67	;'C'
   490     0821  3400               	retlw	0
   491     0822                     STR_10:
   492     0822  3432               	retlw	50	;'2'
   493     0823  3430               	retlw	48	;'0'
   494     0824  3400               	retlw	0
   495     0825                     STR_1:
   496     0825  3425               	retlw	37	;'%'
   497     0826  3464               	retlw	100	;'d'
   498     0827  3400               	retlw	0
   499     0828                     STR_11:
   500     0828  342F               	retlw	47	;'/'
   501     0829  3400               	retlw	0
   502     082A                     STR_16:
   503     082A  343A               	retlw	58	;':'
   504     082B  3400               	retlw	0
   505     0828                     
   506                           	psect	cinit
   507     000F                     start_initialization:	
   508                           ; #config settings
   509                           
   510     000F                     __initialization:
   511                           
   512                           ; Initialize objects allocated to BANK0
   513     000F  120A  158A  2619  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   514     0014  00E9               	movwf	__pdataBANK0& (0+127)
   515     0015  120A  158A  261A  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   516     001A  00EA               	movwf	(__pdataBANK0+1)& (0+127)
   517     001B  120A  158A  261B  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   518     0020  00EB               	movwf	(__pdataBANK0+2)& (0+127)
   519     0021  120A  158A  261C  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   520     0026  00EC               	movwf	(__pdataBANK0+3)& (0+127)
   521     0027  120A  158A  261D  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   522     002C  00ED               	movwf	(__pdataBANK0+4)& (0+127)
   523     002D  120A  158A  261E  120A  118A  	fcall	__pidataBANK0+5	;fetch initializer
   524     0032  00EE               	movwf	(__pdataBANK0+5)& (0+127)
   525                           
   526                           ; Clear objects allocated to BANK0
   527     0033  1383               	bcf	3,7	;select IRP bank0
   528     0034  3020               	movlw	low __pbssBANK0
   529     0035  0084               	movwf	4
   530     0036  3052               	movlw	low (__pbssBANK0+50)
   531     0037  120A  158A  261F  120A  118A  	fcall	clear_ram0
   532                           
   533                           ; Clear objects allocated to COMMON
   534     003C  01FA               	clrf	__pbssCOMMON& (0+127)
   535     003D                     end_of_initialization:	
   536                           ;End of C runtime variable initialization code
   537                           
   538     003D                     __end_of__initialization:
   539     003D  0183               	clrf	3
   540     003E  120A  118A  2841   	ljmp	_main	;jump to C main() function
   541                           
   542                           	psect	bssCOMMON
   543     007A                     __pbssCOMMON:
   544     007A                     _ds3231_leer:
   545     007A                     	ds	1
   546                           
   547                           	psect	bssBANK0
   548     0020                     __pbssBANK0:
   549     0020                     _biciestos:
   550     0020                     	ds	1
   551     0021                     _meses:
   552     0021                     	ds	1
   553     0022                     _dias:
   554     0022                     	ds	1
   555     0023                     _horas:
   556     0023                     	ds	1
   557     0024                     _minutos:
   558     0024                     	ds	1
   559     0025                     _ADC:
   560     0025                     	ds	1
   561     0026                     _contador:
   562     0026                     	ds	1
   563     0027                     _biciesto_decimal:
   564     0027                     	ds	1
   565     0028                     _meses_decimal:
   566     0028                     	ds	1
   567     0029                     _dia_decimal:
   568     0029                     	ds	1
   569     002A                     _horas_decimal:
   570     002A                     	ds	1
   571     002B                     _minutos_decimal:
   572     002B                     	ds	1
   573     002C                     _segundos_decimal:
   574     002C                     	ds	1
   575     002D                     _ds3231_direccion_segundos:
   576     002D                     	ds	1
   577     002E                     _ds3231_escribir:
   578     002E                     	ds	1
   579     002F                     _Biciesto:
   580     002F                     	ds	5
   581     0034                     _Mes:
   582     0034                     	ds	5
   583     0039                     _Dia:
   584     0039                     	ds	5
   585     003E                     _Hora:
   586     003E                     	ds	5
   587     0043                     _Minuto:
   588     0043                     	ds	5
   589     0048                     _Segundo:
   590     0048                     	ds	5
   591     004D                     _CadADC:
   592     004D                     	ds	5
   593                           
   594                           	psect	dataBANK0
   595     0069                     __pdataBANK0:
   596     0069                     _ds3231_direccion_biciestos:
   597     0069                     	ds	1
   598     006A                     _ds3231_direccion_meses:
   599     006A                     	ds	1
   600     006B                     _ds3231_direccion_dias:
   601     006B                     	ds	1
   602     006C                     _ds3231_direccion_horas:
   603     006C                     	ds	1
   604     006D                     _ds3231_direccion_minutos:
   605     006D                     	ds	1
   606     006E                     _ds3231_direccion:
   607     006E                     	ds	1
   608                           
   609                           	psect	clrtext
   610     0E1F                     clear_ram0:	
   611                           ;	Called with FSR containing the base address, and
   612                           ;	W with the last address+1
   613                           
   614     0E1F  0064               	clrwdt	;clear the watchdog before getting into this loop
   615     0E20                     clrloop0:
   616     0E20  0180               	clrf	0	;clear RAM location pointed to by FSR
   617     0E21  0A84               	incf	4,f	;increment pointer
   618     0E22  0604               	xorwf	4,w	;XOR with final address
   619     0E23  1903               	btfsc	3,2	;have we reached the end yet?
   620     0E24  3400               	retlw	0	;all done for this memory range, return
   621     0E25  0604               	xorwf	4,w	;XOR again to restore value
   622     0E26  2E20               	goto	clrloop0	;do the next byte
   623                           
   624                           	psect	cstackCOMMON
   625     0070                     __pcstackCOMMON:
   626     0070                     ?_setup:
   627     0070                     ?_Lcd_Init8:	
   628                           ; 1 bytes @ 0x0
   629                           
   630     0070                     ?_Lcd_Clear8:	
   631                           ; 1 bytes @ 0x0
   632                           
   633     0070                     ?_bcd_a_decimal:	
   634                           ; 1 bytes @ 0x0
   635                           
   636     0070                     ?_I2C_Master_Wait:	
   637                           ; 1 bytes @ 0x0
   638                           
   639     0070                     ?_I2C_Master_Start:	
   640                           ; 1 bytes @ 0x0
   641                           
   642     0070                     ?_I2C_Master_RepeatedStart:	
   643                           ; 1 bytes @ 0x0
   644                           
   645     0070                     ?_I2C_Master_Stop:	
   646                           ; 1 bytes @ 0x0
   647                           
   648     0070                     ?_isr:	
   649                           ; 1 bytes @ 0x0
   650                           
   651     0070                     ??_isr:	
   652                           ; 1 bytes @ 0x0
   653                           
   654     0070                     ?_main:	
   655                           ; 1 bytes @ 0x0
   656                           
   657     0070                     ?_Lcd_Port8:	
   658                           ; 1 bytes @ 0x0
   659                           
   660     0070                     ?_Lcd_Cmd8:	
   661                           ; 1 bytes @ 0x0
   662                           
   663     0070                     ?_Lcd_Write_Char8:	
   664                           ; 1 bytes @ 0x0
   665                           
   666                           
   667                           ; 1 bytes @ 0x0
   668     0070                     	ds	3
   669     0073                     ??_I2C_Master_Wait:
   670     0073                     ??_I2C_Master_Start:	
   671                           ; 1 bytes @ 0x3
   672                           
   673     0073                     ??_I2C_Master_RepeatedStart:	
   674                           ; 1 bytes @ 0x3
   675                           
   676     0073                     ??_I2C_Master_Stop:	
   677                           ; 1 bytes @ 0x3
   678                           
   679     0073                     ?_I2C_Master_Write:	
   680                           ; 1 bytes @ 0x3
   681                           
   682     0073                     ??_Lcd_Port8:	
   683                           ; 1 bytes @ 0x3
   684                           
   685     0073                     ?___bmul:	
   686                           ; 1 bytes @ 0x3
   687                           
   688     0073                     ??___lldiv:	
   689                           ; 1 bytes @ 0x3
   690                           
   691     0073                     ?_I2C_Master_Read:	
   692                           ; 1 bytes @ 0x3
   693                           
   694     0073                     ?___wmul:	
   695                           ; 2 bytes @ 0x3
   696                           
   697     0073                     ?___lwdiv:	
   698                           ; 2 bytes @ 0x3
   699                           
   700     0073                     Lcd_Port8@a:	
   701                           ; 2 bytes @ 0x3
   702                           
   703     0073                     ___bmul@multiplicand:	
   704                           ; 1 bytes @ 0x3
   705                           
   706     0073                     I2C_Master_Write@d:	
   707                           ; 1 bytes @ 0x3
   708                           
   709     0073                     I2C_Master_Read@a:	
   710                           ; 2 bytes @ 0x3
   711                           
   712     0073                     ___wmul@multiplier:	
   713                           ; 2 bytes @ 0x3
   714                           
   715     0073                     ___lwdiv@divisor:	
   716                           ; 2 bytes @ 0x3
   717                           
   718                           
   719                           ; 2 bytes @ 0x3
   720     0073                     	ds	1
   721     0074                     ??_Lcd_Cmd8:
   722     0074                     ??_Lcd_Write_Char8:	
   723                           ; 1 bytes @ 0x4
   724                           
   725     0074                     ??___bmul:	
   726                           ; 1 bytes @ 0x4
   727                           
   728     0074                     ___lldiv@quotient:	
   729                           ; 1 bytes @ 0x4
   730                           
   731                           
   732                           ; 4 bytes @ 0x4
   733     0074                     	ds	1
   734     0075                     ??_I2C_Master_Write:
   735     0075                     ??_I2C_Master_Read:	
   736                           ; 1 bytes @ 0x5
   737                           
   738     0075                     Lcd_Write_Char8@y:	
   739                           ; 1 bytes @ 0x5
   740                           
   741     0075                     ___bmul@product:	
   742                           ; 1 bytes @ 0x5
   743                           
   744     0075                     ___wmul@multiplicand:	
   745                           ; 1 bytes @ 0x5
   746                           
   747     0075                     ___lwdiv@dividend:	
   748                           ; 2 bytes @ 0x5
   749                           
   750                           
   751                           ; 2 bytes @ 0x5
   752     0075                     	ds	1
   753     0076                     Lcd_Cmd8@a:
   754     0076                     Lcd_Write_Char8@a:	
   755                           ; 1 bytes @ 0x6
   756                           
   757     0076                     ___bmul@multiplier:	
   758                           ; 1 bytes @ 0x6
   759                           
   760                           
   761                           ; 1 bytes @ 0x6
   762     0076                     	ds	1
   763     0077                     ??_Lcd_Init8:
   764     0077                     ??_Lcd_Clear8:	
   765                           ; 1 bytes @ 0x7
   766                           
   767     0077                     ??_bcd_a_decimal:	
   768                           ; 1 bytes @ 0x7
   769                           
   770     0077                     ?_Lcd_Set_Cursor8:	
   771                           ; 1 bytes @ 0x7
   772                           
   773     0077                     ?_Lcd_Write_String8:	
   774                           ; 1 bytes @ 0x7
   775                           
   776     0077                     ??___wmul:	
   777                           ; 1 bytes @ 0x7
   778                           
   779     0077                     ??___lwdiv:	
   780                           ; 1 bytes @ 0x7
   781                           
   782     0077                     Lcd_Set_Cursor8@b:	
   783                           ; 1 bytes @ 0x7
   784                           
   785     0077                     I2C_Master_Read@temp:	
   786                           ; 1 bytes @ 0x7
   787                           
   788     0077                     Lcd_Write_String8@a:	
   789                           ; 2 bytes @ 0x7
   790                           
   791     0077                     ___wmul@product:	
   792                           ; 2 bytes @ 0x7
   793                           
   794                           
   795                           ; 2 bytes @ 0x7
   796     0077                     	ds	1
   797     0078                     ??_Lcd_Set_Cursor8:
   798     0078                     ??___lwmod:	
   799                           ; 1 bytes @ 0x8
   800                           
   801     0078                     Lcd_Set_Cursor8@a:	
   802                           ; 1 bytes @ 0x8
   803                           
   804     0078                     ___lldiv@counter:	
   805                           ; 1 bytes @ 0x8
   806                           
   807                           
   808                           ; 1 bytes @ 0x8
   809     0078                     	ds	1
   810     0079                     ??_setup:
   811     0079                     bcd_a_decimal@bcd:	
   812                           ; 1 bytes @ 0x9
   813                           
   814     0079                     Lcd_Set_Cursor8@temp:	
   815                           ; 1 bytes @ 0x9
   816                           
   817     0079                     ___lwmod@counter:	
   818                           ; 1 bytes @ 0x9
   819                           
   820                           
   821                           ; 1 bytes @ 0x9
   822     0079                     	ds	1
   823     007A                     ??_int_a_bcd:
   824                           
   825                           	psect	cstackBANK0
   826     0052                     __pcstackBANK0:	
   827                           ; 1 bytes @ 0xA
   828                           
   829     0052                     ??_Lcd_Write_String8:
   830     0052                     ?_leer_reloj:	
   831                           ; 1 bytes @ 0x0
   832                           
   833     0052                     ?___lldiv:	
   834                           ; 2 bytes @ 0x0
   835                           
   836     0052                     ___lwdiv@counter:	
   837                           ; 4 bytes @ 0x0
   838                           
   839     0052                     ___lldiv@divisor:	
   840                           ; 1 bytes @ 0x0
   841                           
   842                           
   843                           ; 4 bytes @ 0x0
   844     0052                     	ds	1
   845     0053                     ___lwdiv@quotient:
   846                           
   847                           ; 2 bytes @ 0x1
   848     0053                     	ds	1
   849     0054                     ??_leer_reloj:
   850                           
   851                           ; 1 bytes @ 0x2
   852     0054                     	ds	1
   853     0055                     ?___lwmod:
   854     0055                     Lcd_Write_String8@i:	
   855                           ; 2 bytes @ 0x3
   856                           
   857     0055                     ___lwmod@divisor:	
   858                           ; 2 bytes @ 0x3
   859                           
   860                           
   861                           ; 2 bytes @ 0x3
   862     0055                     	ds	1
   863     0056                     leer_reloj@direccion:
   864     0056                     ___lldiv@dividend:	
   865                           ; 1 bytes @ 0x4
   866                           
   867                           
   868                           ; 4 bytes @ 0x4
   869     0056                     	ds	1
   870     0057                     leer_reloj@bcd:
   871     0057                     ___lwmod@dividend:	
   872                           ; 2 bytes @ 0x5
   873                           
   874                           
   875                           ; 2 bytes @ 0x5
   876     0057                     	ds	2
   877     0059                     ?_int_a_bcd:
   878     0059                     ?_sprintf:	
   879                           ; 2 bytes @ 0x7
   880                           
   881     0059                     sprintf@f:	
   882                           ; 2 bytes @ 0x7
   883                           
   884     0059                     int_a_bcd@value:	
   885                           ; 1 bytes @ 0x7
   886                           
   887                           
   888                           ; 2 bytes @ 0x7
   889     0059                     	ds	1
   890     005A                     ?_I2C_Master_Init:
   891     005A                     I2C_Master_Init@c:	
   892                           ; 1 bytes @ 0x8
   893                           
   894                           
   895                           ; 4 bytes @ 0x8
   896     005A                     	ds	1
   897     005B                     int_a_bcd@digit:
   898                           
   899                           ; 2 bytes @ 0x9
   900     005B                     	ds	1
   901     005C                     ??_sprintf:
   902                           
   903                           ; 1 bytes @ 0xA
   904     005C                     	ds	1
   905     005D                     int_a_bcd@bcd:
   906                           
   907                           ; 2 bytes @ 0xB
   908     005D                     	ds	1
   909     005E                     ??_I2C_Master_Init:
   910                           
   911                           ; 1 bytes @ 0xC
   912     005E                     	ds	1
   913     005F                     sprintf@ap:
   914     005F                     int_a_bcd@multiplier:	
   915                           ; 1 bytes @ 0xD
   916                           
   917                           
   918                           ; 2 bytes @ 0xD
   919     005F                     	ds	1
   920     0060                     sprintf@flag:
   921                           
   922                           ; 1 bytes @ 0xE
   923     0060                     	ds	1
   924     0061                     ?_escribir_reloj:
   925     0061                     sprintf@prec:	
   926                           ; 1 bytes @ 0xF
   927                           
   928     0061                     escribir_reloj@valor:	
   929                           ; 1 bytes @ 0xF
   930                           
   931                           
   932                           ; 2 bytes @ 0xF
   933     0061                     	ds	1
   934     0062                     sprintf@val:
   935                           
   936                           ; 2 bytes @ 0x10
   937     0062                     	ds	1
   938     0063                     ??_escribir_reloj:
   939                           
   940                           ; 1 bytes @ 0x11
   941     0063                     	ds	1
   942     0064                     sprintf@sp:
   943                           
   944                           ; 1 bytes @ 0x12
   945     0064                     	ds	1
   946     0065                     escribir_reloj@direccion:
   947     0065                     sprintf@c:	
   948                           ; 1 bytes @ 0x13
   949                           
   950                           
   951                           ; 1 bytes @ 0x13
   952     0065                     	ds	1
   953     0066                     ??_main:
   954                           
   955                           ; 1 bytes @ 0x14
   956     0066                     	ds	3
   957                           
   958                           	psect	maintext
   959     0041                     __pmaintext:	
   960 ;;
   961 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   962 ;;
   963 ;; *************** function _main *****************
   964 ;; Defined at:
   965 ;;		line 127 in file "Master.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;		None
   968 ;; Auto vars:     Size  Location     Type
   969 ;;		None
   970 ;; Return value:  Size  Location     Type
   971 ;;                  1    wreg      void 
   972 ;; Registers used:
   973 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   974 ;; Tracked objects:
   975 ;;		On entry : B00/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   979 ;;      Params:         0       0       0       0       0
   980 ;;      Locals:         0       0       0       0       0
   981 ;;      Temps:          0       3       0       0       0
   982 ;;      Totals:         0       3       0       0       0
   983 ;;Total ram usage:        3 bytes
   984 ;; Hardware stack levels required when called: 4
   985 ;; This function calls:
   986 ;;		_I2C_Master_Read
   987 ;;		_I2C_Master_Start
   988 ;;		_I2C_Master_Stop
   989 ;;		_I2C_Master_Write
   990 ;;		_Lcd_Clear8
   991 ;;		_Lcd_Init8
   992 ;;		_Lcd_Set_Cursor8
   993 ;;		_Lcd_Write_String8
   994 ;;		_bcd_a_decimal
   995 ;;		_escribir_reloj
   996 ;;		_int_a_bcd
   997 ;;		_leer_reloj
   998 ;;		_setup
   999 ;;		_sprintf
  1000 ;; This function is called by:
  1001 ;;		Startup code after reset
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005     0041                     _main:	
  1006                           ;psect for function _main
  1007                           
  1008     0041                     l2413:	
  1009                           ;incstack = 0
  1010                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1011                           
  1012                           
  1013                           ;Master.c: 128:     setup();
  1014     0041  120A  158A  26F0  120A  118A  	fcall	_setup
  1015                           
  1016                           ;Master.c: 129:     Lcd_Init8();
  1017     0046  120A  118A  2710  120A  118A  	fcall	_Lcd_Init8
  1018                           
  1019                           ;Master.c: 130:     Lcd_Clear8();
  1020     004B  120A  158A  264C  120A  118A  	fcall	_Lcd_Clear8
  1021     0050                     l2415:
  1022                           
  1023                           ;Master.c: 131:     ds3231_escribir = (ds3231_direccion<<1);
  1024     0050  30D0               	movlw	208
  1025     0051  1283               	bcf	3,5	;RP0=0, select bank0
  1026     0052  1303               	bcf	3,6	;RP1=0, select bank0
  1027     0053  00AE               	movwf	_ds3231_escribir
  1028     0054                     l2417:
  1029                           
  1030                           ;Master.c: 132:     ds3231_leer = (ds3231_direccion<<1) | (1<<0);
  1031     0054  30D1               	movlw	209
  1032     0055  00FA               	movwf	_ds3231_leer
  1033     0056                     l212:	
  1034                           ;Master.c: 133:     while(1){
  1035                           
  1036                           
  1037                           ;Master.c: 134:         I2C_Master_Start();
  1038     0056  120A  158A  2627  120A  118A  	fcall	_I2C_Master_Start
  1039                           
  1040                           ;Master.c: 135:         I2C_Master_Write(0x50);
  1041     005B  3050               	movlw	80
  1042     005C  00F3               	movwf	I2C_Master_Write@d
  1043     005D  3000               	movlw	0
  1044     005E  00F4               	movwf	I2C_Master_Write@d+1
  1045     005F  120A  158A  2642  120A  118A  	fcall	_I2C_Master_Write
  1046                           
  1047                           ;Master.c: 136:         I2C_Master_Write(contador);
  1048     0064  1283               	bcf	3,5	;RP0=0, select bank0
  1049     0065  1303               	bcf	3,6	;RP1=0, select bank0
  1050     0066  0826               	movf	_contador,w
  1051     0067  00E6               	movwf	??_main
  1052     0068  01E7               	clrf	??_main+1
  1053     0069  0866               	movf	??_main,w
  1054     006A  00F3               	movwf	I2C_Master_Write@d
  1055     006B  0867               	movf	??_main+1,w
  1056     006C  00F4               	movwf	I2C_Master_Write@d+1
  1057     006D  120A  158A  2642  120A  118A  	fcall	_I2C_Master_Write
  1058                           
  1059                           ;Master.c: 137:         I2C_Master_Stop();
  1060     0072  120A  158A  2630  120A  118A  	fcall	_I2C_Master_Stop
  1061     0077                     l2419:
  1062                           
  1063                           ;Master.c: 138:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1064     0077  3082               	movlw	130
  1065     0078  1283               	bcf	3,5	;RP0=0, select bank0
  1066     0079  1303               	bcf	3,6	;RP1=0, select bank0
  1067     007A  00E7               	movwf	??_main+1
  1068     007B  30DD               	movlw	221
  1069     007C  00E6               	movwf	??_main
  1070     007D                     u2237:
  1071     007D  0BE6               	decfsz	??_main,f
  1072     007E  287D               	goto	u2237
  1073     007F  0BE7               	decfsz	??_main+1,f
  1074     0080  287D               	goto	u2237
  1075     0081                     l2421:
  1076                           
  1077                           ;Master.c: 140:         I2C_Master_Start();
  1078     0081  120A  158A  2627  120A  118A  	fcall	_I2C_Master_Start
  1079     0086                     l2423:
  1080                           
  1081                           ;Master.c: 141:         I2C_Master_Write(0x51);
  1082     0086  3051               	movlw	81
  1083     0087  00F3               	movwf	I2C_Master_Write@d
  1084     0088  3000               	movlw	0
  1085     0089  00F4               	movwf	I2C_Master_Write@d+1
  1086     008A  120A  158A  2642  120A  118A  	fcall	_I2C_Master_Write
  1087     008F                     l2425:
  1088                           
  1089                           ;Master.c: 142:         ADC = I2C_Master_Read(0);
  1090     008F  3000               	movlw	0
  1091     0090  00F3               	movwf	I2C_Master_Read@a
  1092     0091  00F4               	movwf	I2C_Master_Read@a+1
  1093     0092  120A  158A  271D  120A  118A  	fcall	_I2C_Master_Read
  1094     0097  0873               	movf	?_I2C_Master_Read,w
  1095     0098  1283               	bcf	3,5	;RP0=0, select bank0
  1096     0099  1303               	bcf	3,6	;RP1=0, select bank0
  1097     009A  00A5               	movwf	_ADC
  1098     009B                     l2427:
  1099                           
  1100                           ;Master.c: 143:         I2C_Master_Stop();
  1101     009B  120A  158A  2630  120A  118A  	fcall	_I2C_Master_Stop
  1102     00A0                     l2429:
  1103                           
  1104                           ;Master.c: 144:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1105     00A0  3082               	movlw	130
  1106     00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1107     00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1108     00A3  00E7               	movwf	??_main+1
  1109     00A4  30DD               	movlw	221
  1110     00A5  00E6               	movwf	??_main
  1111     00A6                     u2247:
  1112     00A6  0BE6               	decfsz	??_main,f
  1113     00A7  28A6               	goto	u2247
  1114     00A8  0BE7               	decfsz	??_main+1,f
  1115     00A9  28A6               	goto	u2247
  1116                           
  1117                           ;Master.c: 147:         escribir_reloj(ds3231_direccion_minutos, int_a_bcd(minutos));
  1118     00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1119     00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1120     00AC  0824               	movf	_minutos,w
  1121     00AD  00E6               	movwf	??_main
  1122     00AE  01E7               	clrf	??_main+1
  1123     00AF  0866               	movf	??_main,w
  1124     00B0  00D9               	movwf	int_a_bcd@value
  1125     00B1  0867               	movf	??_main+1,w
  1126     00B2  00DA               	movwf	int_a_bcd@value+1
  1127     00B3  120A  118A  261A  120A  118A  	fcall	_int_a_bcd
  1128     00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1129     00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1130     00BA  085A               	movf	?_int_a_bcd+1,w
  1131     00BB  00E2               	movwf	escribir_reloj@valor+1
  1132     00BC  0859               	movf	?_int_a_bcd,w
  1133     00BD  00E1               	movwf	escribir_reloj@valor
  1134     00BE  3001               	movlw	1
  1135     00BF  120A  158A  27C1  120A  118A  	fcall	_escribir_reloj
  1136                           
  1137                           ;Master.c: 148:         escribir_reloj(ds3231_direccion_horas, int_a_bcd(horas));
  1138     00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1139     00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1140     00C6  0823               	movf	_horas,w
  1141     00C7  00E6               	movwf	??_main
  1142     00C8  01E7               	clrf	??_main+1
  1143     00C9  0866               	movf	??_main,w
  1144     00CA  00D9               	movwf	int_a_bcd@value
  1145     00CB  0867               	movf	??_main+1,w
  1146     00CC  00DA               	movwf	int_a_bcd@value+1
  1147     00CD  120A  118A  261A  120A  118A  	fcall	_int_a_bcd
  1148     00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1149     00D3  1303               	bcf	3,6	;RP1=0, select bank0
  1150     00D4  085A               	movf	?_int_a_bcd+1,w
  1151     00D5  00E2               	movwf	escribir_reloj@valor+1
  1152     00D6  0859               	movf	?_int_a_bcd,w
  1153     00D7  00E1               	movwf	escribir_reloj@valor
  1154     00D8  3002               	movlw	2
  1155     00D9  120A  158A  27C1  120A  118A  	fcall	_escribir_reloj
  1156                           
  1157                           ;Master.c: 149:         escribir_reloj(ds3231_direccion_dias, int_a_bcd(dias));
  1158     00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1159     00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1160     00E0  0822               	movf	_dias,w
  1161     00E1  00E6               	movwf	??_main
  1162     00E2  01E7               	clrf	??_main+1
  1163     00E3  0866               	movf	??_main,w
  1164     00E4  00D9               	movwf	int_a_bcd@value
  1165     00E5  0867               	movf	??_main+1,w
  1166     00E6  00DA               	movwf	int_a_bcd@value+1
  1167     00E7  120A  118A  261A  120A  118A  	fcall	_int_a_bcd
  1168     00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1169     00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1170     00EE  085A               	movf	?_int_a_bcd+1,w
  1171     00EF  00E2               	movwf	escribir_reloj@valor+1
  1172     00F0  0859               	movf	?_int_a_bcd,w
  1173     00F1  00E1               	movwf	escribir_reloj@valor
  1174     00F2  3004               	movlw	4
  1175     00F3  120A  158A  27C1  120A  118A  	fcall	_escribir_reloj
  1176                           
  1177                           ;Master.c: 150:         escribir_reloj(ds3231_direccion_meses, int_a_bcd(meses));
  1178     00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1179     00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1180     00FA  0821               	movf	_meses,w
  1181     00FB  00E6               	movwf	??_main
  1182     00FC  01E7               	clrf	??_main+1
  1183     00FD  0866               	movf	??_main,w
  1184     00FE  00D9               	movwf	int_a_bcd@value
  1185     00FF  0867               	movf	??_main+1,w
  1186     0100  00DA               	movwf	int_a_bcd@value+1
  1187     0101  120A  118A  261A  120A  118A  	fcall	_int_a_bcd
  1188     0106  1283               	bcf	3,5	;RP0=0, select bank0
  1189     0107  1303               	bcf	3,6	;RP1=0, select bank0
  1190     0108  085A               	movf	?_int_a_bcd+1,w
  1191     0109  00E2               	movwf	escribir_reloj@valor+1
  1192     010A  0859               	movf	?_int_a_bcd,w
  1193     010B  00E1               	movwf	escribir_reloj@valor
  1194     010C  3005               	movlw	5
  1195     010D  120A  158A  27C1  120A  118A  	fcall	_escribir_reloj
  1196                           
  1197                           ;Master.c: 151:         escribir_reloj(ds3231_direccion_biciestos, int_a_bcd(biciestos))
      +                          ;
  1198     0112  1283               	bcf	3,5	;RP0=0, select bank0
  1199     0113  1303               	bcf	3,6	;RP1=0, select bank0
  1200     0114  0820               	movf	_biciestos,w
  1201     0115  00E6               	movwf	??_main
  1202     0116  01E7               	clrf	??_main+1
  1203     0117  0866               	movf	??_main,w
  1204     0118  00D9               	movwf	int_a_bcd@value
  1205     0119  0867               	movf	??_main+1,w
  1206     011A  00DA               	movwf	int_a_bcd@value+1
  1207     011B  120A  118A  261A  120A  118A  	fcall	_int_a_bcd
  1208     0120  1283               	bcf	3,5	;RP0=0, select bank0
  1209     0121  1303               	bcf	3,6	;RP1=0, select bank0
  1210     0122  085A               	movf	?_int_a_bcd+1,w
  1211     0123  00E2               	movwf	escribir_reloj@valor+1
  1212     0124  0859               	movf	?_int_a_bcd,w
  1213     0125  00E1               	movwf	escribir_reloj@valor
  1214     0126  3006               	movlw	6
  1215     0127  120A  158A  27C1  120A  118A  	fcall	_escribir_reloj
  1216                           
  1217                           ;Master.c: 154:         segundos_decimal = bcd_a_decimal(leer_reloj(ds3231_direccion_seg
      +                          undos));
  1218     012C  3000               	movlw	0
  1219     012D  120A  118A  2670  120A  118A  	fcall	_leer_reloj
  1220     0132  1283               	bcf	3,5	;RP0=0, select bank0
  1221     0133  1303               	bcf	3,6	;RP1=0, select bank0
  1222     0134  0852               	movf	?_leer_reloj,w
  1223     0135  120A  158A  267B  120A  118A  	fcall	_bcd_a_decimal
  1224     013A  1283               	bcf	3,5	;RP0=0, select bank0
  1225     013B  1303               	bcf	3,6	;RP1=0, select bank0
  1226     013C  00AC               	movwf	_segundos_decimal
  1227     013D                     l2431:
  1228                           
  1229                           ;Master.c: 155:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1230     013D  3082               	movlw	130
  1231     013E  1283               	bcf	3,5	;RP0=0, select bank0
  1232     013F  1303               	bcf	3,6	;RP1=0, select bank0
  1233     0140  00E7               	movwf	??_main+1
  1234     0141  30DD               	movlw	221
  1235     0142  00E6               	movwf	??_main
  1236     0143                     u2257:
  1237     0143  0BE6               	decfsz	??_main,f
  1238     0144  2943               	goto	u2257
  1239     0145  0BE7               	decfsz	??_main+1,f
  1240     0146  2943               	goto	u2257
  1241     0147                     l2433:
  1242                           
  1243                           ;Master.c: 156:         minutos_decimal = bcd_a_decimal(leer_reloj(ds3231_direccion_minu
      +                          tos));
  1244     0147  3001               	movlw	1
  1245     0148  120A  118A  2670  120A  118A  	fcall	_leer_reloj
  1246     014D  1283               	bcf	3,5	;RP0=0, select bank0
  1247     014E  1303               	bcf	3,6	;RP1=0, select bank0
  1248     014F  0852               	movf	?_leer_reloj,w
  1249     0150  120A  158A  267B  120A  118A  	fcall	_bcd_a_decimal
  1250     0155  1283               	bcf	3,5	;RP0=0, select bank0
  1251     0156  1303               	bcf	3,6	;RP1=0, select bank0
  1252     0157  00AB               	movwf	_minutos_decimal
  1253                           
  1254                           ;Master.c: 157:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1255     0158  3082               	movlw	130
  1256     0159  1283               	bcf	3,5	;RP0=0, select bank0
  1257     015A  1303               	bcf	3,6	;RP1=0, select bank0
  1258     015B  00E7               	movwf	??_main+1
  1259     015C  30DD               	movlw	221
  1260     015D  00E6               	movwf	??_main
  1261     015E                     u2267:
  1262     015E  0BE6               	decfsz	??_main,f
  1263     015F  295E               	goto	u2267
  1264     0160  0BE7               	decfsz	??_main+1,f
  1265     0161  295E               	goto	u2267
  1266     0162                     l2435:
  1267                           
  1268                           ;Master.c: 158:         horas_decimal = bcd_a_decimal(leer_reloj(ds3231_direccion_horas)
      +                          );
  1269     0162  3002               	movlw	2
  1270     0163  120A  118A  2670  120A  118A  	fcall	_leer_reloj
  1271     0168  1283               	bcf	3,5	;RP0=0, select bank0
  1272     0169  1303               	bcf	3,6	;RP1=0, select bank0
  1273     016A  0852               	movf	?_leer_reloj,w
  1274     016B  120A  158A  267B  120A  118A  	fcall	_bcd_a_decimal
  1275     0170  1283               	bcf	3,5	;RP0=0, select bank0
  1276     0171  1303               	bcf	3,6	;RP1=0, select bank0
  1277     0172  00AA               	movwf	_horas_decimal
  1278     0173                     l2437:
  1279                           
  1280                           ;Master.c: 159:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1281     0173  3082               	movlw	130
  1282     0174  1283               	bcf	3,5	;RP0=0, select bank0
  1283     0175  1303               	bcf	3,6	;RP1=0, select bank0
  1284     0176  00E7               	movwf	??_main+1
  1285     0177  30DD               	movlw	221
  1286     0178  00E6               	movwf	??_main
  1287     0179                     u2277:
  1288     0179  0BE6               	decfsz	??_main,f
  1289     017A  2979               	goto	u2277
  1290     017B  0BE7               	decfsz	??_main+1,f
  1291     017C  2979               	goto	u2277
  1292                           
  1293                           ;Master.c: 160:         dia_decimal = bcd_a_decimal(leer_reloj(ds3231_direccion_dias));
  1294     017D  3004               	movlw	4
  1295     017E  120A  118A  2670  120A  118A  	fcall	_leer_reloj
  1296     0183  1283               	bcf	3,5	;RP0=0, select bank0
  1297     0184  1303               	bcf	3,6	;RP1=0, select bank0
  1298     0185  0852               	movf	?_leer_reloj,w
  1299     0186  120A  158A  267B  120A  118A  	fcall	_bcd_a_decimal
  1300     018B  1283               	bcf	3,5	;RP0=0, select bank0
  1301     018C  1303               	bcf	3,6	;RP1=0, select bank0
  1302     018D  00A9               	movwf	_dia_decimal
  1303     018E                     l2439:
  1304                           
  1305                           ;Master.c: 161:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1306     018E  3082               	movlw	130
  1307     018F  1283               	bcf	3,5	;RP0=0, select bank0
  1308     0190  1303               	bcf	3,6	;RP1=0, select bank0
  1309     0191  00E7               	movwf	??_main+1
  1310     0192  30DD               	movlw	221
  1311     0193  00E6               	movwf	??_main
  1312     0194                     u2287:
  1313     0194  0BE6               	decfsz	??_main,f
  1314     0195  2994               	goto	u2287
  1315     0196  0BE7               	decfsz	??_main+1,f
  1316     0197  2994               	goto	u2287
  1317     0198                     l2441:
  1318                           
  1319                           ;Master.c: 162:         meses_decimal = bcd_a_decimal(leer_reloj(ds3231_direccion_meses)
      +                          );
  1320     0198  3005               	movlw	5
  1321     0199  120A  118A  2670  120A  118A  	fcall	_leer_reloj
  1322     019E  1283               	bcf	3,5	;RP0=0, select bank0
  1323     019F  1303               	bcf	3,6	;RP1=0, select bank0
  1324     01A0  0852               	movf	?_leer_reloj,w
  1325     01A1  120A  158A  267B  120A  118A  	fcall	_bcd_a_decimal
  1326     01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1327     01A7  1303               	bcf	3,6	;RP1=0, select bank0
  1328     01A8  00A8               	movwf	_meses_decimal
  1329                           
  1330                           ;Master.c: 163:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1331     01A9  3082               	movlw	130
  1332     01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1333     01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1334     01AC  00E7               	movwf	??_main+1
  1335     01AD  30DD               	movlw	221
  1336     01AE  00E6               	movwf	??_main
  1337     01AF                     u2297:
  1338     01AF  0BE6               	decfsz	??_main,f
  1339     01B0  29AF               	goto	u2297
  1340     01B1  0BE7               	decfsz	??_main+1,f
  1341     01B2  29AF               	goto	u2297
  1342     01B3                     l2443:
  1343                           
  1344                           ;Master.c: 164:         biciesto_decimal = bcd_a_decimal(leer_reloj(ds3231_direccion_bic
      +                          iestos));
  1345     01B3  3006               	movlw	6
  1346     01B4  120A  118A  2670  120A  118A  	fcall	_leer_reloj
  1347     01B9  1283               	bcf	3,5	;RP0=0, select bank0
  1348     01BA  1303               	bcf	3,6	;RP1=0, select bank0
  1349     01BB  0852               	movf	?_leer_reloj,w
  1350     01BC  120A  158A  267B  120A  118A  	fcall	_bcd_a_decimal
  1351     01C1  1283               	bcf	3,5	;RP0=0, select bank0
  1352     01C2  1303               	bcf	3,6	;RP1=0, select bank0
  1353     01C3  00A7               	movwf	_biciesto_decimal
  1354     01C4                     l2445:
  1355                           
  1356                           ;Master.c: 165:         _delay((unsigned long)((50)*(8000000/4000.0)));
  1357     01C4  3082               	movlw	130
  1358     01C5  1283               	bcf	3,5	;RP0=0, select bank0
  1359     01C6  1303               	bcf	3,6	;RP1=0, select bank0
  1360     01C7  00E7               	movwf	??_main+1
  1361     01C8  30DD               	movlw	221
  1362     01C9  00E6               	movwf	??_main
  1363     01CA                     u2307:
  1364     01CA  0BE6               	decfsz	??_main,f
  1365     01CB  29CA               	goto	u2307
  1366     01CC  0BE7               	decfsz	??_main+1,f
  1367     01CD  29CA               	goto	u2307
  1368     01CE                     l2447:
  1369                           
  1370                           ;Master.c: 168:         sprintf(CadADC, "%d", ADC);
  1371     01CE  3016               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1372     01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1373     01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1374     01D1  00D9               	movwf	sprintf@f
  1375     01D2  0825               	movf	_ADC,w
  1376     01D3  00E6               	movwf	??_main
  1377     01D4  01E7               	clrf	??_main+1
  1378     01D5  0866               	movf	??_main,w
  1379     01D6  00DA               	movwf	?_sprintf+1
  1380     01D7  0867               	movf	??_main+1,w
  1381     01D8  00DB               	movwf	?_sprintf+2
  1382     01D9  304D               	movlw	(low (_CadADC| 0))& (0+255)
  1383     01DA  120A  118A  24D6  120A  118A  	fcall	_sprintf
  1384     01DF                     l2449:
  1385                           
  1386                           ;Master.c: 169:         sprintf(Segundo, "%d", segundos_decimal);
  1387     01DF  3016               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1388     01E0  1283               	bcf	3,5	;RP0=0, select bank0
  1389     01E1  1303               	bcf	3,6	;RP1=0, select bank0
  1390     01E2  00D9               	movwf	sprintf@f
  1391     01E3  082C               	movf	_segundos_decimal,w
  1392     01E4  00E6               	movwf	??_main
  1393     01E5  01E7               	clrf	??_main+1
  1394     01E6  0866               	movf	??_main,w
  1395     01E7  00DA               	movwf	?_sprintf+1
  1396     01E8  0867               	movf	??_main+1,w
  1397     01E9  00DB               	movwf	?_sprintf+2
  1398     01EA  3048               	movlw	(low (_Segundo| 0))& (0+255)
  1399     01EB  120A  118A  24D6  120A  118A  	fcall	_sprintf
  1400     01F0                     l2451:
  1401                           
  1402                           ;Master.c: 170:         sprintf(Minuto, "%d", minutos_decimal);
  1403     01F0  3016               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1404     01F1  1283               	bcf	3,5	;RP0=0, select bank0
  1405     01F2  1303               	bcf	3,6	;RP1=0, select bank0
  1406     01F3  00D9               	movwf	sprintf@f
  1407     01F4  082B               	movf	_minutos_decimal,w
  1408     01F5  00E6               	movwf	??_main
  1409     01F6  01E7               	clrf	??_main+1
  1410     01F7  0866               	movf	??_main,w
  1411     01F8  00DA               	movwf	?_sprintf+1
  1412     01F9  0867               	movf	??_main+1,w
  1413     01FA  00DB               	movwf	?_sprintf+2
  1414     01FB  3043               	movlw	(low (_Minuto| 0))& (0+255)
  1415     01FC  120A  118A  24D6  120A  118A  	fcall	_sprintf
  1416     0201                     l2453:
  1417                           
  1418                           ;Master.c: 171:         sprintf(Hora, "%d", horas_decimal);
  1419     0201  3016               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1420     0202  1283               	bcf	3,5	;RP0=0, select bank0
  1421     0203  1303               	bcf	3,6	;RP1=0, select bank0
  1422     0204  00D9               	movwf	sprintf@f
  1423     0205  082A               	movf	_horas_decimal,w
  1424     0206  00E6               	movwf	??_main
  1425     0207  01E7               	clrf	??_main+1
  1426     0208  0866               	movf	??_main,w
  1427     0209  00DA               	movwf	?_sprintf+1
  1428     020A  0867               	movf	??_main+1,w
  1429     020B  00DB               	movwf	?_sprintf+2
  1430     020C  303E               	movlw	(low (_Hora| 0))& (0+255)
  1431     020D  120A  118A  24D6  120A  118A  	fcall	_sprintf
  1432     0212                     l2455:
  1433                           
  1434                           ;Master.c: 172:         sprintf(Dia, "%d", dia_decimal);
  1435     0212  3016               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1436     0213  1283               	bcf	3,5	;RP0=0, select bank0
  1437     0214  1303               	bcf	3,6	;RP1=0, select bank0
  1438     0215  00D9               	movwf	sprintf@f
  1439     0216  0829               	movf	_dia_decimal,w
  1440     0217  00E6               	movwf	??_main
  1441     0218  01E7               	clrf	??_main+1
  1442     0219  0866               	movf	??_main,w
  1443     021A  00DA               	movwf	?_sprintf+1
  1444     021B  0867               	movf	??_main+1,w
  1445     021C  00DB               	movwf	?_sprintf+2
  1446     021D  3039               	movlw	(low (_Dia| 0))& (0+255)
  1447     021E  120A  118A  24D6  120A  118A  	fcall	_sprintf
  1448     0223                     l2457:
  1449                           
  1450                           ;Master.c: 173:         sprintf(Mes, "%d", meses_decimal);
  1451     0223  3016               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1452     0224  1283               	bcf	3,5	;RP0=0, select bank0
  1453     0225  1303               	bcf	3,6	;RP1=0, select bank0
  1454     0226  00D9               	movwf	sprintf@f
  1455     0227  0828               	movf	_meses_decimal,w
  1456     0228  00E6               	movwf	??_main
  1457     0229  01E7               	clrf	??_main+1
  1458     022A  0866               	movf	??_main,w
  1459     022B  00DA               	movwf	?_sprintf+1
  1460     022C  0867               	movf	??_main+1,w
  1461     022D  00DB               	movwf	?_sprintf+2
  1462     022E  3034               	movlw	(low (_Mes| 0))& (0+255)
  1463     022F  120A  118A  24D6  120A  118A  	fcall	_sprintf
  1464     0234                     l2459:
  1465                           
  1466                           ;Master.c: 174:         sprintf(Biciesto, "%d", biciesto_decimal);
  1467     0234  3016               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1468     0235  1283               	bcf	3,5	;RP0=0, select bank0
  1469     0236  1303               	bcf	3,6	;RP1=0, select bank0
  1470     0237  00D9               	movwf	sprintf@f
  1471     0238  0827               	movf	_biciesto_decimal,w
  1472     0239  00E6               	movwf	??_main
  1473     023A  01E7               	clrf	??_main+1
  1474     023B  0866               	movf	??_main,w
  1475     023C  00DA               	movwf	?_sprintf+1
  1476     023D  0867               	movf	??_main+1,w
  1477     023E  00DB               	movwf	?_sprintf+2
  1478     023F  302F               	movlw	(low (_Biciesto| 0))& (0+255)
  1479     0240  120A  118A  24D6  120A  118A  	fcall	_sprintf
  1480     0245                     l2461:
  1481                           
  1482                           ;Master.c: 176:         Lcd_Clear8();
  1483     0245  120A  158A  264C  120A  118A  	fcall	_Lcd_Clear8
  1484     024A                     l2463:
  1485                           
  1486                           ;Master.c: 177:         Lcd_Set_Cursor8(1,1);
  1487     024A  01F7               	clrf	Lcd_Set_Cursor8@b
  1488     024B  0AF7               	incf	Lcd_Set_Cursor8@b,f
  1489     024C  3001               	movlw	1
  1490     024D  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor8
  1491     0252                     l2465:
  1492                           
  1493                           ;Master.c: 178:         Lcd_Write_String8("ADC");
  1494     0252  300F               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1495     0253  00F7               	movwf	Lcd_Write_String8@a
  1496     0254  3080               	movlw	128
  1497     0255  00F8               	movwf	Lcd_Write_String8@a+1
  1498     0256  120A  118A  27A1  120A  118A  	fcall	_Lcd_Write_String8
  1499                           
  1500                           ;Master.c: 180:         Lcd_Set_Cursor8(2,1);
  1501     025B  01F7               	clrf	Lcd_Set_Cursor8@b
  1502     025C  0AF7               	incf	Lcd_Set_Cursor8@b,f
  1503     025D  3002               	movlw	2
  1504     025E  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor8
  1505     0263                     l2467:
  1506                           
  1507                           ;Master.c: 181:         Lcd_Write_String8(CadADC);
  1508     0263  304D               	movlw	(low (_CadADC| 0))& (0+255)
  1509     0264  00F7               	movwf	Lcd_Write_String8@a
  1510     0265  3000               	movlw	0
  1511     0266  00F8               	movwf	Lcd_Write_String8@a+1
  1512     0267  120A  118A  27A1  120A  118A  	fcall	_Lcd_Write_String8
  1513     026C                     l2469:
  1514                           
  1515                           ;Master.c: 183:         if(biciesto_decimal <= 9){
  1516     026C  300A               	movlw	10
  1517     026D  1283               	bcf	3,5	;RP0=0, select bank0
  1518     026E  1303               	bcf	3,6	;RP1=0, select bank0
  1519     026F  0227               	subwf	_biciesto_decimal,w
  1520     0270  1803               	skipnc
  1521     0271  2A73               	goto	u1981
  1522     0272  2A74               	goto	u1980
  1523     0273                     u1981:
  1524     0273  2A97               	goto	l2477
  1525     0274                     u1980:
  1526     0274                     l2471:
  1527                           
  1528                           ;Master.c: 184:             Lcd_Set_Cursor8(2,13);
  1529     0274  300D               	movlw	13
  1530     0275  00F7               	movwf	Lcd_Set_Cursor8@b
  1531     0276  3002               	movlw	2
  1532     0277  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor8
  1533     027C                     l2473:
  1534                           
  1535                           ;Master.c: 185:             Lcd_Write_String8("200");
  1536     027C  300B               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1537     027D  00F7               	movwf	Lcd_Write_String8@a
  1538     027E  3080               	movlw	128
  1539     027F  00F8               	movwf	Lcd_Write_String8@a+1
  1540     0280  120A  118A  27A1  120A  118A  	fcall	_Lcd_Write_String8
  1541     0285                     l2475:
  1542                           
  1543                           ;Master.c: 186:             Lcd_Set_Cursor8(2,16);
  1544     0285  3010               	movlw	16
  1545     0286  00F7               	movwf	Lcd_Set_Cursor8@b
  1546     0287  3002               	movlw	2
  1547     0288  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor8
  1548                           
  1549                           ;Master.c: 187:             Lcd_Write_String8(Biciesto);
  1550     028D  302F               	movlw	(low (_Biciesto| 0))& (0+255)
  1551     028E  00F7               	movwf	Lcd_Write_String8@a
  1552     028F  3000               	movlw	0
  1553     0290  00F8               	movwf	Lcd_Write_String8@a+1
  1554     0291  120A  118A  27A1  120A  118A  	fcall	_Lcd_Write_String8
  1555                           
  1556                           ;Master.c: 188:         }
  1557     0296  2AB9               	goto	l2483
  1558     0297                     l2477:
  1559                           
  1560                           ;Master.c: 190:             Lcd_Set_Cursor8(2,13);
  1561     0297  300D               	movlw	13
  1562     0298  00F7               	movwf	Lcd_Set_Cursor8@b
  1563     0299  3002               	movlw	2
  1564     029A  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor8
  1565     029F                     l2479:
  1566                           
  1567                           ;Master.c: 191:             Lcd_Write_String8("20");
  1568     029F  3013               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1569     02A0  00F7               	movwf	Lcd_Write_String8@a
  1570     02A1  3080               	movlw	128
  1571     02A2  00F8               	movwf	Lcd_Write_String8@a+1
  1572     02A3  120A  118A  27A1  120A  118A  	fcall	_Lcd_Write_String8
  1573     02A8                     l2481:
  1574                           
  1575                           ;Master.c: 192:             Lcd_Set_Cursor8(2,15);
  1576     02A8  300F               	movlw	15
  1577     02A9  00F7               	movwf	Lcd_Set_Cursor8@b
  1578     02AA  3002               	movlw	2
  1579     02AB  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor8
  1580                           
  1581                           ;Master.c: 193:             Lcd_Write_String8(Biciesto);
  1582     02B0  302F               	movlw	(low (_Biciesto| 0))& (0+255)
  1583     02B1  00F7               	movwf	Lcd_Write_String8@a
  1584     02B2  3000               	movlw	0
  1585     02B3  00F8               	movwf	Lcd_Write_String8@a+1
  1586     02B4  120A  118A  27A1  120A  118A  	fcall	_Lcd_Write_String8
  1587     02B9                     l2483:
  1588                           
  1589                           ;Master.c: 197:         Lcd_Set_Cursor8(2,12);
  1590     02B9  300C               	movlw	12
  1591     02BA  00F7               	movwf	Lcd_Set_Cursor8@b
  1592     02BB  3002               	movlw	2
  1593     02BC  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor8
  1594     02C1                     l2485:
  1595                           
  1596                           ;Master.c: 198:         Lcd_Write_String8("/");
  1597     02C1  3019               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1598     02C2  00F7               	movwf	Lcd_Write_String8@a
  1599     02C3  3080               	movlw	128
  1600     02C4  00F8               	movwf	Lcd_Write_String8@a+1
  1601     02C5  120A  118A  27A1  120A  118A  	fcall	_Lcd_Write_String8
  1602     02CA                     l2487:
  1603                           
  1604                           ;Master.c: 201:         if(meses_decimal <= 9){
  1605     02CA  300A               	movlw	10
  1606     02CB  1283               	bcf	3,5	;RP0=0, select bank0
  1607     02CC  1303               	bcf	3,6	;RP1=0, select bank0
  1608     02CD  0228               	subwf	_meses_decimal,w
  1609     02CE  1803               	skipnc
  1610     02CF  2AD1               	goto	u1991
  1611     02D0  2AD2               	goto	u1990
  1612     02D1                     u1991:
  1613     02D1  2AF5               	goto	l2495
  1614     02D2                     u1990:
  1615     02D2                     l2489:
  1616                           
  1617                           ;Master.c: 202:             Lcd_Set_Cursor8(2,10);
  1618     02D2  300A               	movlw	10
  1619     02D3  00F7               	movwf	Lcd_Set_Cursor8@b
  1620     02D4  3002               	movlw	2
  1621     02D5  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor8
  1622     02DA                     l2491:
  1623                           
  1624                           ;Master.c: 203:             Lcd_Write_String8("0");
  1625     02DA  300D               	movlw	(low (((STR_9+2)-__stringbase)| (0+32768)))& (0+255)
  1626     02DB  00F7               	movwf	Lcd_Write_String8@a
  1627     02DC  3080               	movlw	128
  1628     02DD  00F8               	movwf	Lcd_Write_String8@a+1
  1629     02DE  120A  118A  27A1  120A  118A  	fcall	_Lcd_Write_String8
  1630     02E3                     l2493:
  1631                           
  1632                           ;Master.c: 204:             Lcd_Set_Cursor8(2,11);
  1633     02E3  300B               	movlw	11
  1634     02E4  00F7               	movwf	Lcd_Set_Cursor8@b
  1635     02E5  3002               	movlw	2
  1636     02E6  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor8
  1637                           
  1638                           ;Master.c: 205:             Lcd_Write_String8(Mes);
  1639     02EB  3034               	movlw	(low (_Mes| 0))& (0+255)
  1640     02EC  00F7               	movwf	Lcd_Write_String8@a
  1641     02ED  3000               	movlw	0
  1642     02EE  00F8               	movwf	Lcd_Write_String8@a+1
  1643     02EF  120A  118A  27A1  120A  118A  	fcall	_Lcd_Write_String8
  1644                           
  1645                           ;Master.c: 206:         }
  1646     02F4  2B06               	goto	l2499
  1647     02F5                     l2495:
  1648                           
  1649                           ;Master.c: 208:             Lcd_Set_Cursor8(2,10);
  1650     02F5  300A               	movlw	10
  1651     02F6  00F7               	movwf	Lcd_Set_Cursor8@b
  1652     02F7  3002               	movlw	2
  1653     02F8  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor8
  1654     02FD                     l2497:
  1655                           
  1656                           ;Master.c: 209:             Lcd_Write_String8(Mes);
  1657     02FD  3034               	movlw	(low (_Mes| 0))& (0+255)
  1658     02FE  00F7               	movwf	Lcd_Write_String8@a
  1659     02FF  3000               	movlw	0
  1660     0300  00F8               	movwf	Lcd_Write_String8@a+1
  1661     0301  120A  118A  27A1  120A  118A  	fcall	_Lcd_Write_String8
  1662     0306                     l2499:
  1663                           
  1664                           ;Master.c: 213:         Lcd_Set_Cursor8(2,9);
  1665     0306  3009               	movlw	9
  1666     0307  00F7               	movwf	Lcd_Set_Cursor8@b
  1667     0308  3002               	movlw	2
  1668     0309  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor8
  1669                           
  1670                           ;Master.c: 214:         Lcd_Write_String8("/");
  1671     030E  3019               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1672     030F  00F7               	movwf	Lcd_Write_String8@a
  1673     0310  3080               	movlw	128
  1674     0311  00F8               	movwf	Lcd_Write_String8@a+1
  1675     0312  120A  118A  27A1  120A  118A  	fcall	_Lcd_Write_String8
  1676     0317                     l2501:
  1677                           
  1678                           ;Master.c: 217:         if(dia_decimal <= 9){
  1679     0317  300A               	movlw	10
  1680     0318  1283               	bcf	3,5	;RP0=0, select bank0
  1681     0319  1303               	bcf	3,6	;RP1=0, select bank0
  1682     031A  0229               	subwf	_dia_decimal,w
  1683     031B  1803               	skipnc
  1684     031C  2B1E               	goto	u2001
  1685     031D  2B1F               	goto	u2000
  1686     031E                     u2001:
  1687     031E  2B42               	goto	l2509
  1688     031F                     u2000:
  1689     031F                     l2503:
  1690                           
  1691                           ;Master.c: 218:             Lcd_Set_Cursor8(2,7);
  1692     031F  3007               	movlw	7
  1693     0320  00F7               	movwf	Lcd_Set_Cursor8@b
  1694     0321  3002               	movlw	2
  1695     0322  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor8
  1696     0327                     l2505:
  1697                           
  1698                           ;Master.c: 219:             Lcd_Write_String8("0");
  1699     0327  300D               	movlw	(low (((STR_9+2)-__stringbase)| (0+32768)))& (0+255)
  1700     0328  00F7               	movwf	Lcd_Write_String8@a
  1701     0329  3080               	movlw	128
  1702     032A  00F8               	movwf	Lcd_Write_String8@a+1
  1703     032B  120A  118A  27A1  120A  118A  	fcall	_Lcd_Write_String8
  1704     0330                     l2507:
  1705                           
  1706                           ;Master.c: 220:             Lcd_Set_Cursor8(2,8);
  1707     0330  3008               	movlw	8
  1708     0331  00F7               	movwf	Lcd_Set_Cursor8@b
  1709     0332  3002               	movlw	2
  1710     0333  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor8
  1711                           
  1712                           ;Master.c: 221:             Lcd_Write_String8(Dia);
  1713     0338  3039               	movlw	(low (_Dia| 0))& (0+255)
  1714     0339  00F7               	movwf	Lcd_Write_String8@a
  1715     033A  3000               	movlw	0
  1716     033B  00F8               	movwf	Lcd_Write_String8@a+1
  1717     033C  120A  118A  27A1  120A  118A  	fcall	_Lcd_Write_String8
  1718                           
  1719                           ;Master.c: 222:         }
  1720     0341  2B53               	goto	l2513
  1721     0342                     l2509:
  1722                           
  1723                           ;Master.c: 224:             Lcd_Set_Cursor8(2,7);
  1724     0342  3007               	movlw	7
  1725     0343  00F7               	movwf	Lcd_Set_Cursor8@b
  1726     0344  3002               	movlw	2
  1727     0345  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor8
  1728     034A                     l2511:
  1729                           
  1730                           ;Master.c: 225:             Lcd_Write_String8(Dia);
  1731     034A  3039               	movlw	(low (_Dia| 0))& (0+255)
  1732     034B  00F7               	movwf	Lcd_Write_String8@a
  1733     034C  3000               	movlw	0
  1734     034D  00F8               	movwf	Lcd_Write_String8@a+1
  1735     034E  120A  118A  27A1  120A  118A  	fcall	_Lcd_Write_String8
  1736     0353                     l2513:
  1737                           
  1738                           ;Master.c: 229:         if(horas_decimal <= 9){
  1739     0353  300A               	movlw	10
  1740     0354  1283               	bcf	3,5	;RP0=0, select bank0
  1741     0355  1303               	bcf	3,6	;RP1=0, select bank0
  1742     0356  022A               	subwf	_horas_decimal,w
  1743     0357  1803               	skipnc
  1744     0358  2B5A               	goto	u2011
  1745     0359  2B5B               	goto	u2010
  1746     035A                     u2011:
  1747     035A  2B7E               	goto	l2521
  1748     035B                     u2010:
  1749     035B                     l2515:
  1750                           
  1751                           ;Master.c: 230:             Lcd_Set_Cursor8(1,9);
  1752     035B  3009               	movlw	9
  1753     035C  00F7               	movwf	Lcd_Set_Cursor8@b
  1754     035D  3001               	movlw	1
  1755     035E  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor8
  1756     0363                     l2517:
  1757                           
  1758                           ;Master.c: 231:             Lcd_Write_String8("0");
  1759     0363  300D               	movlw	(low (((STR_9+2)-__stringbase)| (0+32768)))& (0+255)
  1760     0364  00F7               	movwf	Lcd_Write_String8@a
  1761     0365  3080               	movlw	128
  1762     0366  00F8               	movwf	Lcd_Write_String8@a+1
  1763     0367  120A  118A  27A1  120A  118A  	fcall	_Lcd_Write_String8
  1764     036C                     l2519:
  1765                           
  1766                           ;Master.c: 232:             Lcd_Set_Cursor8(1,10);
  1767     036C  300A               	movlw	10
  1768     036D  00F7               	movwf	Lcd_Set_Cursor8@b
  1769     036E  3001               	movlw	1
  1770     036F  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor8
  1771                           
  1772                           ;Master.c: 233:             Lcd_Write_String8(Hora);
  1773     0374  303E               	movlw	(low (_Hora| 0))& (0+255)
  1774     0375  00F7               	movwf	Lcd_Write_String8@a
  1775     0376  3000               	movlw	0
  1776     0377  00F8               	movwf	Lcd_Write_String8@a+1
  1777     0378  120A  118A  27A1  120A  118A  	fcall	_Lcd_Write_String8
  1778                           
  1779                           ;Master.c: 234:         }
  1780     037D  2B8F               	goto	l2525
  1781     037E                     l2521:
  1782                           
  1783                           ;Master.c: 236:             Lcd_Set_Cursor8(1,9);
  1784     037E  3009               	movlw	9
  1785     037F  00F7               	movwf	Lcd_Set_Cursor8@b
  1786     0380  3001               	movlw	1
  1787     0381  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor8
  1788     0386                     l2523:
  1789                           
  1790                           ;Master.c: 237:             Lcd_Write_String8(Hora);
  1791     0386  303E               	movlw	(low (_Hora| 0))& (0+255)
  1792     0387  00F7               	movwf	Lcd_Write_String8@a
  1793     0388  3000               	movlw	0
  1794     0389  00F8               	movwf	Lcd_Write_String8@a+1
  1795     038A  120A  118A  27A1  120A  118A  	fcall	_Lcd_Write_String8
  1796     038F                     l2525:
  1797                           
  1798                           ;Master.c: 241:         Lcd_Set_Cursor8(1,11);
  1799     038F  300B               	movlw	11
  1800     0390  00F7               	movwf	Lcd_Set_Cursor8@b
  1801     0391  3001               	movlw	1
  1802     0392  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor8
  1803                           
  1804                           ;Master.c: 242:         Lcd_Write_String8(":");
  1805     0397  301B               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  1806     0398  00F7               	movwf	Lcd_Write_String8@a
  1807     0399  3080               	movlw	128
  1808     039A  00F8               	movwf	Lcd_Write_String8@a+1
  1809     039B  120A  118A  27A1  120A  118A  	fcall	_Lcd_Write_String8
  1810     03A0                     l2527:
  1811                           
  1812                           ;Master.c: 245:         if(minutos_decimal <= 9){
  1813     03A0  300A               	movlw	10
  1814     03A1  1283               	bcf	3,5	;RP0=0, select bank0
  1815     03A2  1303               	bcf	3,6	;RP1=0, select bank0
  1816     03A3  022B               	subwf	_minutos_decimal,w
  1817     03A4  1803               	skipnc
  1818     03A5  2BA7               	goto	u2021
  1819     03A6  2BA8               	goto	u2020
  1820     03A7                     u2021:
  1821     03A7  2BCB               	goto	l2535
  1822     03A8                     u2020:
  1823     03A8                     l2529:
  1824                           
  1825                           ;Master.c: 246:             Lcd_Set_Cursor8(1,12);
  1826     03A8  300C               	movlw	12
  1827     03A9  00F7               	movwf	Lcd_Set_Cursor8@b
  1828     03AA  3001               	movlw	1
  1829     03AB  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor8
  1830     03B0                     l2531:
  1831                           
  1832                           ;Master.c: 247:             Lcd_Write_String8("0");
  1833     03B0  300D               	movlw	(low (((STR_9+2)-__stringbase)| (0+32768)))& (0+255)
  1834     03B1  00F7               	movwf	Lcd_Write_String8@a
  1835     03B2  3080               	movlw	128
  1836     03B3  00F8               	movwf	Lcd_Write_String8@a+1
  1837     03B4  120A  118A  27A1  120A  118A  	fcall	_Lcd_Write_String8
  1838     03B9                     l2533:
  1839                           
  1840                           ;Master.c: 248:             Lcd_Set_Cursor8(1,13);
  1841     03B9  300D               	movlw	13
  1842     03BA  00F7               	movwf	Lcd_Set_Cursor8@b
  1843     03BB  3001               	movlw	1
  1844     03BC  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor8
  1845                           
  1846                           ;Master.c: 249:             Lcd_Write_String8(Minuto);
  1847     03C1  3043               	movlw	(low (_Minuto| 0))& (0+255)
  1848     03C2  00F7               	movwf	Lcd_Write_String8@a
  1849     03C3  3000               	movlw	0
  1850     03C4  00F8               	movwf	Lcd_Write_String8@a+1
  1851     03C5  120A  118A  27A1  120A  118A  	fcall	_Lcd_Write_String8
  1852                           
  1853                           ;Master.c: 250:         }
  1854     03CA  2BDC               	goto	l2539
  1855     03CB                     l2535:
  1856                           
  1857                           ;Master.c: 252:             Lcd_Set_Cursor8(1,12);
  1858     03CB  300C               	movlw	12
  1859     03CC  00F7               	movwf	Lcd_Set_Cursor8@b
  1860     03CD  3001               	movlw	1
  1861     03CE  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor8
  1862     03D3                     l2537:
  1863                           
  1864                           ;Master.c: 253:             Lcd_Write_String8(Minuto);
  1865     03D3  3043               	movlw	(low (_Minuto| 0))& (0+255)
  1866     03D4  00F7               	movwf	Lcd_Write_String8@a
  1867     03D5  3000               	movlw	0
  1868     03D6  00F8               	movwf	Lcd_Write_String8@a+1
  1869     03D7  120A  118A  27A1  120A  118A  	fcall	_Lcd_Write_String8
  1870     03DC                     l2539:
  1871                           
  1872                           ;Master.c: 257:         Lcd_Set_Cursor8(1,14);
  1873     03DC  300E               	movlw	14
  1874     03DD  00F7               	movwf	Lcd_Set_Cursor8@b
  1875     03DE  3001               	movlw	1
  1876     03DF  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor8
  1877                           
  1878                           ;Master.c: 258:         Lcd_Write_String8(":");
  1879     03E4  301B               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  1880     03E5  00F7               	movwf	Lcd_Write_String8@a
  1881     03E6  3080               	movlw	128
  1882     03E7  00F8               	movwf	Lcd_Write_String8@a+1
  1883     03E8  120A  118A  27A1  120A  118A  	fcall	_Lcd_Write_String8
  1884     03ED                     l2541:
  1885                           
  1886                           ;Master.c: 261:         if(segundos_decimal <= 9){
  1887     03ED  300A               	movlw	10
  1888     03EE  1283               	bcf	3,5	;RP0=0, select bank0
  1889     03EF  1303               	bcf	3,6	;RP1=0, select bank0
  1890     03F0  022C               	subwf	_segundos_decimal,w
  1891     03F1  1803               	skipnc
  1892     03F2  2BF4               	goto	u2031
  1893     03F3  2BF5               	goto	u2030
  1894     03F4                     u2031:
  1895     03F4  2C18               	goto	l2549
  1896     03F5                     u2030:
  1897     03F5                     l2543:
  1898                           
  1899                           ;Master.c: 262:             Lcd_Set_Cursor8(1,15);
  1900     03F5  300F               	movlw	15
  1901     03F6  00F7               	movwf	Lcd_Set_Cursor8@b
  1902     03F7  3001               	movlw	1
  1903     03F8  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor8
  1904     03FD                     l2545:
  1905                           
  1906                           ;Master.c: 263:             Lcd_Write_String8("0");
  1907     03FD  300D               	movlw	(low (((STR_9+2)-__stringbase)| (0+32768)))& (0+255)
  1908     03FE  00F7               	movwf	Lcd_Write_String8@a
  1909     03FF  3080               	movlw	128
  1910     0400  00F8               	movwf	Lcd_Write_String8@a+1
  1911     0401  120A  118A  27A1  120A  118A  	fcall	_Lcd_Write_String8
  1912     0406                     l2547:
  1913                           
  1914                           ;Master.c: 264:             Lcd_Set_Cursor8(1,16);
  1915     0406  3010               	movlw	16
  1916     0407  00F7               	movwf	Lcd_Set_Cursor8@b
  1917     0408  3001               	movlw	1
  1918     0409  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor8
  1919                           
  1920                           ;Master.c: 265:             Lcd_Write_String8(Segundo);
  1921     040E  3048               	movlw	(low (_Segundo| 0))& (0+255)
  1922     040F  00F7               	movwf	Lcd_Write_String8@a
  1923     0410  3000               	movlw	0
  1924     0411  00F8               	movwf	Lcd_Write_String8@a+1
  1925     0412  120A  118A  27A1  120A  118A  	fcall	_Lcd_Write_String8
  1926                           
  1927                           ;Master.c: 266:         }
  1928     0417  2C29               	goto	l2553
  1929     0418                     l2549:
  1930                           
  1931                           ;Master.c: 268:             Lcd_Set_Cursor8(1,15);
  1932     0418  300F               	movlw	15
  1933     0419  00F7               	movwf	Lcd_Set_Cursor8@b
  1934     041A  3001               	movlw	1
  1935     041B  120A  158A  26AB  120A  118A  	fcall	_Lcd_Set_Cursor8
  1936     0420                     l2551:
  1937                           
  1938                           ;Master.c: 269:             Lcd_Write_String8(Segundo);
  1939     0420  3048               	movlw	(low (_Segundo| 0))& (0+255)
  1940     0421  00F7               	movwf	Lcd_Write_String8@a
  1941     0422  3000               	movlw	0
  1942     0423  00F8               	movwf	Lcd_Write_String8@a+1
  1943     0424  120A  118A  27A1  120A  118A  	fcall	_Lcd_Write_String8
  1944     0429                     l2553:
  1945                           
  1946                           ;Master.c: 272:         _delay((unsigned long)((100)*(8000000/4000.0)));
  1947     0429  3002               	movlw	2
  1948     042A  1283               	bcf	3,5	;RP0=0, select bank0
  1949     042B  1303               	bcf	3,6	;RP1=0, select bank0
  1950     042C  00E8               	movwf	??_main+2
  1951     042D  3004               	movlw	4
  1952     042E  00E7               	movwf	??_main+1
  1953     042F  30B9               	movlw	185
  1954     0430  00E6               	movwf	??_main
  1955     0431                     u2317:
  1956     0431  0BE6               	decfsz	??_main,f
  1957     0432  2C31               	goto	u2317
  1958     0433  0BE7               	decfsz	??_main+1,f
  1959     0434  2C31               	goto	u2317
  1960     0435  0BE8               	decfsz	??_main+2,f
  1961     0436  2C31               	goto	u2317
  1962     0437  2C38               	nop2
  1963     0438                     l2555:
  1964                           
  1965                           ;Master.c: 274:         if(minutos_decimal > 59){
  1966     0438  303C               	movlw	60
  1967     0439  1283               	bcf	3,5	;RP0=0, select bank0
  1968     043A  1303               	bcf	3,6	;RP1=0, select bank0
  1969     043B  022B               	subwf	_minutos_decimal,w
  1970     043C  1C03               	skipc
  1971     043D  2C3F               	goto	u2041
  1972     043E  2C40               	goto	u2040
  1973     043F                     u2041:
  1974     043F  2C41               	goto	l2559
  1975     0440                     u2040:
  1976     0440                     l2557:
  1977                           
  1978                           ;Master.c: 275:             minutos = 0;
  1979     0440  01A4               	clrf	_minutos
  1980     0441                     l2559:
  1981                           
  1982                           ;Master.c: 277:         if(horas_decimal > 24){
  1983     0441  3019               	movlw	25
  1984     0442  022A               	subwf	_horas_decimal,w
  1985     0443  1C03               	skipc
  1986     0444  2C46               	goto	u2051
  1987     0445  2C47               	goto	u2050
  1988     0446                     u2051:
  1989     0446  2C48               	goto	l2563
  1990     0447                     u2050:
  1991     0447                     l2561:
  1992                           
  1993                           ;Master.c: 278:             horas = 0;
  1994     0447  01A3               	clrf	_horas
  1995     0448                     l2563:
  1996                           
  1997                           ;Master.c: 280:         if(dia_decimal > 31){
  1998     0448  3020               	movlw	32
  1999     0449  0229               	subwf	_dia_decimal,w
  2000     044A  1C03               	skipc
  2001     044B  2C4D               	goto	u2061
  2002     044C  2C4E               	goto	u2060
  2003     044D                     u2061:
  2004     044D  2C4F               	goto	l2567
  2005     044E                     u2060:
  2006     044E                     l2565:
  2007                           
  2008                           ;Master.c: 281:             dias = 0;
  2009     044E  01A2               	clrf	_dias
  2010     044F                     l2567:
  2011                           
  2012                           ;Master.c: 283:         if(meses_decimal > 12){
  2013     044F  300D               	movlw	13
  2014     0450  0228               	subwf	_meses_decimal,w
  2015     0451  1C03               	skipc
  2016     0452  2C54               	goto	u2071
  2017     0453  2C55               	goto	u2070
  2018     0454                     u2071:
  2019     0454  2C56               	goto	l2571
  2020     0455                     u2070:
  2021     0455                     l2569:
  2022                           
  2023                           ;Master.c: 284:             meses = 0;
  2024     0455  01A1               	clrf	_meses
  2025     0456                     l2571:
  2026                           
  2027                           ;Master.c: 290:         if (segundos_decimal >= 59){
  2028     0456  303B               	movlw	59
  2029     0457  022C               	subwf	_segundos_decimal,w
  2030     0458  1C03               	skipc
  2031     0459  2C5B               	goto	u2081
  2032     045A  2C5C               	goto	u2080
  2033     045B                     u2081:
  2034     045B  2C60               	goto	l2575
  2035     045C                     u2080:
  2036     045C                     l2573:
  2037                           
  2038                           ;Master.c: 291:             minutos++;
  2039     045C  3001               	movlw	1
  2040     045D  00E6               	movwf	??_main
  2041     045E  0866               	movf	??_main,w
  2042     045F  07A4               	addwf	_minutos,f
  2043     0460                     l2575:
  2044                           
  2045                           ;Master.c: 293:         if (minutos_decimal >= 59 && segundos_decimal >= 59){
  2046     0460  303B               	movlw	59
  2047     0461  022B               	subwf	_minutos_decimal,w
  2048     0462  1C03               	skipc
  2049     0463  2C65               	goto	u2091
  2050     0464  2C66               	goto	u2090
  2051     0465                     u2091:
  2052     0465  2C71               	goto	l2583
  2053     0466                     u2090:
  2054     0466                     l2577:
  2055     0466  303B               	movlw	59
  2056     0467  022C               	subwf	_segundos_decimal,w
  2057     0468  1C03               	skipc
  2058     0469  2C6B               	goto	u2101
  2059     046A  2C6C               	goto	u2100
  2060     046B                     u2101:
  2061     046B  2C71               	goto	l2583
  2062     046C                     u2100:
  2063     046C                     l2579:
  2064                           
  2065                           ;Master.c: 294:             minutos = 0;
  2066     046C  01A4               	clrf	_minutos
  2067     046D                     l2581:
  2068                           
  2069                           ;Master.c: 295:             horas++;
  2070     046D  3001               	movlw	1
  2071     046E  00E6               	movwf	??_main
  2072     046F  0866               	movf	??_main,w
  2073     0470  07A3               	addwf	_horas,f
  2074     0471                     l2583:
  2075                           
  2076                           ;Master.c: 297:         if (horas_decimal >= 24 && minutos_decimal >= 59 && segundos_dec
      +                          imal >= 59){
  2077     0471  3018               	movlw	24
  2078     0472  022A               	subwf	_horas_decimal,w
  2079     0473  1C03               	skipc
  2080     0474  2C76               	goto	u2111
  2081     0475  2C77               	goto	u2110
  2082     0476                     u2111:
  2083     0476  2C89               	goto	l2593
  2084     0477                     u2110:
  2085     0477                     l2585:
  2086     0477  303B               	movlw	59
  2087     0478  022B               	subwf	_minutos_decimal,w
  2088     0479  1C03               	skipc
  2089     047A  2C7C               	goto	u2121
  2090     047B  2C7D               	goto	u2120
  2091     047C                     u2121:
  2092     047C  2C89               	goto	l2593
  2093     047D                     u2120:
  2094     047D                     l2587:
  2095     047D  303B               	movlw	59
  2096     047E  022C               	subwf	_segundos_decimal,w
  2097     047F  1C03               	skipc
  2098     0480  2C82               	goto	u2131
  2099     0481  2C83               	goto	u2130
  2100     0482                     u2131:
  2101     0482  2C89               	goto	l2593
  2102     0483                     u2130:
  2103     0483                     l2589:
  2104                           
  2105                           ;Master.c: 298:             minutos = 0;
  2106     0483  01A4               	clrf	_minutos
  2107                           
  2108                           ;Master.c: 299:             horas = 0;
  2109     0484  01A3               	clrf	_horas
  2110     0485                     l2591:
  2111                           
  2112                           ;Master.c: 300:             dias++;
  2113     0485  3001               	movlw	1
  2114     0486  00E6               	movwf	??_main
  2115     0487  0866               	movf	??_main,w
  2116     0488  07A2               	addwf	_dias,f
  2117     0489                     l2593:
  2118                           
  2119                           ;Master.c: 302:         if (dia_decimal >= 31 && horas_decimal >= 24 && minutos_decimal 
      +                          >= 59 && segundos_decimal >= 59){
  2120     0489  301F               	movlw	31
  2121     048A  0229               	subwf	_dia_decimal,w
  2122     048B  1C03               	skipc
  2123     048C  2C8E               	goto	u2141
  2124     048D  2C8F               	goto	u2140
  2125     048E                     u2141:
  2126     048E  2CA8               	goto	l2605
  2127     048F                     u2140:
  2128     048F                     l2595:
  2129     048F  3018               	movlw	24
  2130     0490  022A               	subwf	_horas_decimal,w
  2131     0491  1C03               	skipc
  2132     0492  2C94               	goto	u2151
  2133     0493  2C95               	goto	u2150
  2134     0494                     u2151:
  2135     0494  2CA8               	goto	l2605
  2136     0495                     u2150:
  2137     0495                     l2597:
  2138     0495  303B               	movlw	59
  2139     0496  022B               	subwf	_minutos_decimal,w
  2140     0497  1C03               	skipc
  2141     0498  2C9A               	goto	u2161
  2142     0499  2C9B               	goto	u2160
  2143     049A                     u2161:
  2144     049A  2CA8               	goto	l2605
  2145     049B                     u2160:
  2146     049B                     l2599:
  2147     049B  303B               	movlw	59
  2148     049C  022C               	subwf	_segundos_decimal,w
  2149     049D  1C03               	skipc
  2150     049E  2CA0               	goto	u2171
  2151     049F  2CA1               	goto	u2170
  2152     04A0                     u2171:
  2153     04A0  2CA8               	goto	l2605
  2154     04A1                     u2170:
  2155     04A1                     l2601:
  2156                           
  2157                           ;Master.c: 303:             minutos = 0;
  2158     04A1  01A4               	clrf	_minutos
  2159                           
  2160                           ;Master.c: 304:             horas = 0;
  2161     04A2  01A3               	clrf	_horas
  2162                           
  2163                           ;Master.c: 305:             dias = 0;
  2164     04A3  01A2               	clrf	_dias
  2165     04A4                     l2603:
  2166                           
  2167                           ;Master.c: 306:             meses++;
  2168     04A4  3001               	movlw	1
  2169     04A5  00E6               	movwf	??_main
  2170     04A6  0866               	movf	??_main,w
  2171     04A7  07A1               	addwf	_meses,f
  2172     04A8                     l2605:
  2173                           
  2174                           ;Master.c: 308:         if (meses_decimal >= 12 && dia_decimal >= 31 && horas_decimal >=
      +                           24 && minutos_decimal >= 59 && segundos_decimal >= 59){
  2175     04A8  300C               	movlw	12
  2176     04A9  0228               	subwf	_meses_decimal,w
  2177     04AA  1C03               	skipc
  2178     04AB  2CAD               	goto	u2181
  2179     04AC  2CAE               	goto	u2180
  2180     04AD                     u2181:
  2181     04AD  2CCE               	goto	l2619
  2182     04AE                     u2180:
  2183     04AE                     l2607:
  2184     04AE  301F               	movlw	31
  2185     04AF  0229               	subwf	_dia_decimal,w
  2186     04B0  1C03               	skipc
  2187     04B1  2CB3               	goto	u2191
  2188     04B2  2CB4               	goto	u2190
  2189     04B3                     u2191:
  2190     04B3  2CCE               	goto	l2619
  2191     04B4                     u2190:
  2192     04B4                     l2609:
  2193     04B4  3018               	movlw	24
  2194     04B5  022A               	subwf	_horas_decimal,w
  2195     04B6  1C03               	skipc
  2196     04B7  2CB9               	goto	u2201
  2197     04B8  2CBA               	goto	u2200
  2198     04B9                     u2201:
  2199     04B9  2CCE               	goto	l2619
  2200     04BA                     u2200:
  2201     04BA                     l2611:
  2202     04BA  303B               	movlw	59
  2203     04BB  022B               	subwf	_minutos_decimal,w
  2204     04BC  1C03               	skipc
  2205     04BD  2CBF               	goto	u2211
  2206     04BE  2CC0               	goto	u2210
  2207     04BF                     u2211:
  2208     04BF  2CCE               	goto	l2619
  2209     04C0                     u2210:
  2210     04C0                     l2613:
  2211     04C0  303B               	movlw	59
  2212     04C1  022C               	subwf	_segundos_decimal,w
  2213     04C2  1C03               	skipc
  2214     04C3  2CC5               	goto	u2221
  2215     04C4  2CC6               	goto	u2220
  2216     04C5                     u2221:
  2217     04C5  2CCE               	goto	l2619
  2218     04C6                     u2220:
  2219     04C6                     l2615:
  2220                           
  2221                           ;Master.c: 309:             minutos = 0;
  2222     04C6  01A4               	clrf	_minutos
  2223                           
  2224                           ;Master.c: 310:             horas = 0;
  2225     04C7  01A3               	clrf	_horas
  2226                           
  2227                           ;Master.c: 311:             dias = 0;
  2228     04C8  01A2               	clrf	_dias
  2229                           
  2230                           ;Master.c: 312:             meses = 0;
  2231     04C9  01A1               	clrf	_meses
  2232     04CA                     l2617:
  2233                           
  2234                           ;Master.c: 313:             biciestos++;
  2235     04CA  3001               	movlw	1
  2236     04CB  00E6               	movwf	??_main
  2237     04CC  0866               	movf	??_main,w
  2238     04CD  07A0               	addwf	_biciestos,f
  2239     04CE                     l2619:
  2240                           
  2241                           ;Master.c: 316:         contador++;
  2242     04CE  3001               	movlw	1
  2243     04CF  00E6               	movwf	??_main
  2244     04D0  0866               	movf	??_main,w
  2245     04D1  07A6               	addwf	_contador,f
  2246     04D2  2856               	goto	l212
  2247     04D3  120A  118A  280C   	ljmp	start
  2248     04D6                     __end_of_main:
  2249                           
  2250                           	psect	text1
  2251     04D6                     __ptext1:	
  2252 ;; *************** function _sprintf *****************
  2253 ;; Defined at:
  2254 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  sp              1    wreg     PTR unsigned char 
  2257 ;;		 -> Biciesto(5), Mes(5), Dia(5), Hora(5), 
  2258 ;;		 -> Minuto(5), Segundo(5), CadADC(5), 
  2259 ;;  f               1    7[BANK0 ] PTR const unsigned char 
  2260 ;;		 -> STR_7(3), STR_6(3), STR_5(3), STR_4(3), 
  2261 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;  sp              1   18[BANK0 ] PTR unsigned char 
  2264 ;;		 -> Biciesto(5), Mes(5), Dia(5), Hora(5), 
  2265 ;;		 -> Minuto(5), Segundo(5), CadADC(5), 
  2266 ;;  tmpval          4    0        struct .
  2267 ;;  val             2   16[BANK0 ] unsigned int 
  2268 ;;  cp              2    0        PTR const unsigned char 
  2269 ;;  len             2    0        unsigned int 
  2270 ;;  c               1   19[BANK0 ] unsigned char 
  2271 ;;  prec            1   15[BANK0 ] char 
  2272 ;;  flag            1   14[BANK0 ] unsigned char 
  2273 ;;  ap              1   13[BANK0 ] PTR void [1]
  2274 ;;		 -> ?_sprintf(2), 
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  2    7[BANK0 ] int 
  2277 ;; Registers used:
  2278 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2284 ;;      Params:         0       3       0       0       0
  2285 ;;      Locals:         0       7       0       0       0
  2286 ;;      Temps:          0       3       0       0       0
  2287 ;;      Totals:         0      13       0       0       0
  2288 ;;Total ram usage:       13 bytes
  2289 ;; Hardware stack levels used: 1
  2290 ;; Hardware stack levels required when called: 2
  2291 ;; This function calls:
  2292 ;;		___lwdiv
  2293 ;;		___lwmod
  2294 ;; This function is called by:
  2295 ;;		_main
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299     04D6                     _sprintf:	
  2300                           ;psect for function _sprintf
  2301                           
  2302                           
  2303                           ;incstack = 0
  2304                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2305                           ;sprintf@sp stored from wreg
  2306     04D6  1283               	bcf	3,5	;RP0=0, select bank0
  2307     04D7  1303               	bcf	3,6	;RP1=0, select bank0
  2308     04D8  00E4               	movwf	sprintf@sp
  2309     04D9                     l2331:
  2310                           
  2311                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2312     04D9  305A               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2313     04DA  00DF               	movwf	sprintf@ap
  2314                           
  2315                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2316     04DB  2D9D               	goto	l2383
  2317     04DC                     l2333:
  2318                           
  2319                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2320     04DC  3025               	movlw	37
  2321     04DD  0665               	xorwf	sprintf@c,w
  2322     04DE  1903               	btfsc	3,2
  2323     04DF  2CE1               	goto	u1861
  2324     04E0  2CE2               	goto	u1860
  2325     04E1                     u1861:
  2326     04E1  2CEC               	goto	l2339
  2327     04E2                     u1860:
  2328     04E2                     l2335:
  2329                           
  2330                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2331     04E2  0864               	movf	sprintf@sp,w
  2332     04E3  0084               	movwf	4
  2333     04E4  0865               	movf	sprintf@c,w
  2334     04E5  1383               	bcf	3,7	;select IRP bank0
  2335     04E6  0080               	movwf	0
  2336     04E7                     l2337:
  2337     04E7  3001               	movlw	1
  2338     04E8  00DC               	movwf	??_sprintf
  2339     04E9  085C               	movf	??_sprintf,w
  2340     04EA  07E4               	addwf	sprintf@sp,f
  2341                           
  2342                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  2343     04EB  2D9D               	goto	l2383
  2344     04EC                     l2339:
  2345                           
  2346                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2347     04EC  01E0               	clrf	sprintf@flag
  2348     04ED                     l2343:	
  2349                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2350                           
  2351     04ED  3001               	movlw	1
  2352     04EE  07D9               	addwf	sprintf@f,f
  2353     04EF  30FF               	movlw	-1
  2354     04F0  0759               	addwf	sprintf@f,w
  2355     04F1  0084               	movwf	4
  2356     04F2  120A  158A  200A  120A  118A  	fcall	stringdir
  2357     04F7  00E5               	movwf	sprintf@c
  2358     04F8  00DC               	movwf	??_sprintf
  2359     04F9  01DD               	clrf	??_sprintf+1
  2360                           
  2361                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2362                           ; Switch size 1, requested type "simple"
  2363                           ; Number of cases is 1, Range of values is 0 to 0
  2364                           ; switch strategies available:
  2365                           ; Name         Instructions Cycles
  2366                           ; simple_byte            4     3 (average)
  2367                           ; direct_byte           11     8 (fixed)
  2368                           ; jumptable            260     6 (fixed)
  2369                           ;	Chosen strategy is simple_byte
  2370     04FA  085D               	movf	??_sprintf+1,w
  2371     04FB  3A00               	xorlw	0	; case 0
  2372     04FC  1903               	skipnz
  2373     04FD  2CFF               	goto	l2645
  2374     04FE  2D9D               	goto	l2383
  2375     04FF                     l2645:
  2376                           
  2377                           ; Switch size 1, requested type "simple"
  2378                           ; Number of cases is 3, Range of values is 0 to 105
  2379                           ; switch strategies available:
  2380                           ; Name         Instructions Cycles
  2381                           ; simple_byte           10     6 (average)
  2382                           ; jumptable            260     6 (fixed)
  2383                           ;	Chosen strategy is simple_byte
  2384     04FF  085C               	movf	??_sprintf,w
  2385     0500  3A00               	xorlw	0	; case 0
  2386     0501  1903               	skipnz
  2387     0502  2DAD               	goto	l2385
  2388     0503  3A64               	xorlw	100	; case 100
  2389     0504  1903               	skipnz
  2390     0505  2D0A               	goto	l2345
  2391     0506  3A0D               	xorlw	13	; case 105
  2392     0507  1903               	skipnz
  2393     0508  2D0A               	goto	l2345
  2394     0509  2D9D               	goto	l2383
  2395     050A                     l2345:
  2396                           
  2397                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2398     050A  085F               	movf	sprintf@ap,w
  2399     050B  0084               	movwf	4
  2400     050C  1383               	bcf	3,7	;select IRP bank0
  2401     050D  0800               	movf	0,w
  2402     050E  00E2               	movwf	sprintf@val
  2403     050F  0A84               	incf	4,f
  2404     0510  0800               	movf	0,w
  2405     0511  00E3               	movwf	sprintf@val+1
  2406     0512                     l2347:
  2407     0512  3002               	movlw	2
  2408     0513  00DC               	movwf	??_sprintf
  2409     0514  085C               	movf	??_sprintf,w
  2410     0515  07DF               	addwf	sprintf@ap,f
  2411     0516                     l2349:
  2412                           
  2413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2414     0516  1FE3               	btfss	sprintf@val+1,7
  2415     0517  2D19               	goto	u1871
  2416     0518  2D1A               	goto	u1870
  2417     0519                     u1871:
  2418     0519  2D23               	goto	l2355
  2419     051A                     u1870:
  2420     051A                     l2351:
  2421                           
  2422                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2423     051A  3003               	movlw	3
  2424     051B  00DC               	movwf	??_sprintf
  2425     051C  085C               	movf	??_sprintf,w
  2426     051D  04E0               	iorwf	sprintf@flag,f
  2427     051E                     l2353:
  2428                           
  2429                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2430     051E  09E2               	comf	sprintf@val,f
  2431     051F  09E3               	comf	sprintf@val+1,f
  2432     0520  0AE2               	incf	sprintf@val,f
  2433     0521  1903               	skipnz
  2434     0522  0AE3               	incf	sprintf@val+1,f
  2435     0523                     l2355:
  2436                           
  2437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2438     0523  01E5               	clrf	sprintf@c
  2439     0524  0AE5               	incf	sprintf@c,f
  2440     0525                     l2361:
  2441                           
  2442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2443     0525  0865               	movf	sprintf@c,w
  2444     0526  00DC               	movwf	??_sprintf
  2445     0527  075C               	addwf	??_sprintf,w
  2446     0528  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2447     0529  0084               	movwf	4
  2448     052A  120A  158A  200A  120A  118A  	fcall	stringdir
  2449     052F  00DD               	movwf	??_sprintf+1
  2450     0530  120A  158A  200A  120A  118A  	fcall	stringdir
  2451     0535  00DE               	movwf	??_sprintf+2
  2452     0536  085E               	movf	??_sprintf+2,w
  2453     0537  0263               	subwf	sprintf@val+1,w
  2454     0538  1D03               	skipz
  2455     0539  2D3C               	goto	u1885
  2456     053A  085D               	movf	??_sprintf+1,w
  2457     053B  0262               	subwf	sprintf@val,w
  2458     053C                     u1885:
  2459     053C  1803               	skipnc
  2460     053D  2D3F               	goto	u1881
  2461     053E  2D40               	goto	u1880
  2462     053F                     u1881:
  2463     053F  2D41               	goto	l2365
  2464     0540                     u1880:
  2465     0540  2D4B               	goto	l2367
  2466     0541                     l2365:
  2467     0541  3001               	movlw	1
  2468     0542  00DC               	movwf	??_sprintf
  2469     0543  085C               	movf	??_sprintf,w
  2470     0544  07E5               	addwf	sprintf@c,f
  2471     0545  3005               	movlw	5
  2472     0546  0665               	xorwf	sprintf@c,w
  2473     0547  1D03               	btfss	3,2
  2474     0548  2D4A               	goto	u1891
  2475     0549  2D4B               	goto	u1890
  2476     054A                     u1891:
  2477     054A  2D25               	goto	l2361
  2478     054B                     u1890:
  2479     054B                     l2367:
  2480                           
  2481                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2482     054B  0860               	movf	sprintf@flag,w
  2483     054C  3903               	andlw	3
  2484     054D  1903               	btfsc	3,2
  2485     054E  2D50               	goto	u1901
  2486     054F  2D51               	goto	u1900
  2487     0550                     u1901:
  2488     0550  2D5A               	goto	l2373
  2489     0551                     u1900:
  2490     0551                     l2369:
  2491                           
  2492                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  2493     0551  0864               	movf	sprintf@sp,w
  2494     0552  0084               	movwf	4
  2495     0553  302D               	movlw	45
  2496     0554  1383               	bcf	3,7	;select IRP bank0
  2497     0555  0080               	movwf	0
  2498     0556                     l2371:
  2499     0556  3001               	movlw	1
  2500     0557  00DC               	movwf	??_sprintf
  2501     0558  085C               	movf	??_sprintf,w
  2502     0559  07E4               	addwf	sprintf@sp,f
  2503     055A                     l2373:
  2504                           
  2505                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2506     055A  0865               	movf	sprintf@c,w
  2507     055B  00E1               	movwf	sprintf@prec
  2508                           
  2509                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2510     055C  2D94               	goto	l2381
  2511     055D                     l2375:
  2512                           
  2513                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2514     055D  300A               	movlw	10
  2515     055E  00D5               	movwf	___lwmod@divisor
  2516     055F  3000               	movlw	0
  2517     0560  00D6               	movwf	___lwmod@divisor+1
  2518     0561  0861               	movf	sprintf@prec,w
  2519     0562  00DC               	movwf	??_sprintf
  2520     0563  075C               	addwf	??_sprintf,w
  2521     0564  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2522     0565  0084               	movwf	4
  2523     0566  120A  158A  200A  120A  118A  	fcall	stringdir
  2524     056B  00F3               	movwf	___lwdiv@divisor
  2525     056C  120A  158A  200A  120A  118A  	fcall	stringdir
  2526     0571  00F4               	movwf	___lwdiv@divisor+1
  2527     0572  0863               	movf	sprintf@val+1,w
  2528     0573  00F6               	movwf	___lwdiv@dividend+1
  2529     0574  0862               	movf	sprintf@val,w
  2530     0575  00F5               	movwf	___lwdiv@dividend
  2531     0576  120A  118A  275B  120A  118A  	fcall	___lwdiv
  2532     057B  0874               	movf	?___lwdiv+1,w
  2533     057C  1283               	bcf	3,5	;RP0=0, select bank0
  2534     057D  1303               	bcf	3,6	;RP1=0, select bank0
  2535     057E  00D8               	movwf	___lwmod@dividend+1
  2536     057F  0873               	movf	?___lwdiv,w
  2537     0580  00D7               	movwf	___lwmod@dividend
  2538     0581  120A  158A  2785  120A  118A  	fcall	___lwmod
  2539     0586  1283               	bcf	3,5	;RP0=0, select bank0
  2540     0587  1303               	bcf	3,6	;RP1=0, select bank0
  2541     0588  0855               	movf	?___lwmod,w
  2542     0589  3E30               	addlw	48
  2543     058A  00E5               	movwf	sprintf@c
  2544     058B                     l2377:
  2545                           
  2546                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2547     058B  0864               	movf	sprintf@sp,w
  2548     058C  0084               	movwf	4
  2549     058D  0865               	movf	sprintf@c,w
  2550     058E  1383               	bcf	3,7	;select IRP bank0
  2551     058F  0080               	movwf	0
  2552     0590                     l2379:
  2553     0590  3001               	movlw	1
  2554     0591  00DC               	movwf	??_sprintf
  2555     0592  085C               	movf	??_sprintf,w
  2556     0593  07E4               	addwf	sprintf@sp,f
  2557     0594                     l2381:
  2558                           
  2559                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2560     0594  30FF               	movlw	255
  2561     0595  00DC               	movwf	??_sprintf
  2562     0596  085C               	movf	??_sprintf,w
  2563     0597  07E1               	addwf	sprintf@prec,f
  2564     0598  0A61               	incf	sprintf@prec,w
  2565     0599  1D03               	btfss	3,2
  2566     059A  2D9C               	goto	u1911
  2567     059B  2D9D               	goto	u1910
  2568     059C                     u1911:
  2569     059C  2D5D               	goto	l2375
  2570     059D                     u1910:
  2571     059D                     l2383:
  2572                           
  2573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2574     059D  3001               	movlw	1
  2575     059E  07D9               	addwf	sprintf@f,f
  2576     059F  30FF               	movlw	-1
  2577     05A0  0759               	addwf	sprintf@f,w
  2578     05A1  0084               	movwf	4
  2579     05A2  120A  158A  200A  120A  118A  	fcall	stringdir
  2580     05A7  00E5               	movwf	sprintf@c
  2581     05A8  0865               	movf	sprintf@c,w
  2582     05A9  1D03               	btfss	3,2
  2583     05AA  2DAC               	goto	u1921
  2584     05AB  2DAD               	goto	u1920
  2585     05AC                     u1921:
  2586     05AC  2CDC               	goto	l2333
  2587     05AD                     u1920:
  2588     05AD                     l2385:
  2589                           
  2590                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2591     05AD  0864               	movf	sprintf@sp,w
  2592     05AE  0084               	movwf	4
  2593     05AF  1383               	bcf	3,7	;select IRP bank0
  2594     05B0  0180               	clrf	0
  2595     05B1                     l403:
  2596     05B1  0008               	return
  2597     05B2                     __end_of_sprintf:
  2598                           
  2599                           	psect	text2
  2600     0EF0                     __ptext2:	
  2601 ;; *************** function _setup *****************
  2602 ;; Defined at:
  2603 ;;		line 324 in file "Master.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;		None
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;		None
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  1    wreg      void 
  2610 ;; Registers used:
  2611 ;;		wreg, status,2, status,0, pclath, cstack
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2617 ;;      Params:         0       0       0       0       0
  2618 ;;      Locals:         0       0       0       0       0
  2619 ;;      Temps:          0       0       0       0       0
  2620 ;;      Totals:         0       0       0       0       0
  2621 ;;Total ram usage:        0 bytes
  2622 ;; Hardware stack levels used: 1
  2623 ;; Hardware stack levels required when called: 3
  2624 ;; This function calls:
  2625 ;;		_I2C_Master_Init
  2626 ;; This function is called by:
  2627 ;;		_main
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631     0EF0                     _setup:	
  2632                           ;psect for function _setup
  2633                           
  2634     0EF0                     l2247:	
  2635                           ;incstack = 0
  2636                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2637                           
  2638                           
  2639                           ;Master.c: 325:     ANSEL = 0;
  2640     0EF0  1683               	bsf	3,5	;RP0=1, select bank3
  2641     0EF1  1703               	bsf	3,6	;RP1=1, select bank3
  2642     0EF2  0188               	clrf	8	;volatile
  2643                           
  2644                           ;Master.c: 326:     ANSELH = 0;
  2645     0EF3  0189               	clrf	9	;volatile
  2646                           
  2647                           ;Master.c: 329:     TRISA = 0;
  2648     0EF4  1683               	bsf	3,5	;RP0=1, select bank1
  2649     0EF5  1303               	bcf	3,6	;RP1=0, select bank1
  2650     0EF6  0185               	clrf	5	;volatile
  2651     0EF7                     l2249:
  2652                           
  2653                           ;Master.c: 330:     TRISB = 0b11111111;
  2654     0EF7  30FF               	movlw	255
  2655     0EF8  0086               	movwf	6	;volatile
  2656     0EF9                     l2251:
  2657                           
  2658                           ;Master.c: 331:     TRISD = 0;
  2659     0EF9  0188               	clrf	8	;volatile
  2660     0EFA                     l2253:
  2661                           
  2662                           ;Master.c: 332:     TRISE = 0;
  2663     0EFA  0189               	clrf	9	;volatile
  2664     0EFB                     l2255:
  2665                           
  2666                           ;Master.c: 335:     PORTA = 0;
  2667     0EFB  1283               	bcf	3,5	;RP0=0, select bank0
  2668     0EFC  1303               	bcf	3,6	;RP1=0, select bank0
  2669     0EFD  0185               	clrf	5	;volatile
  2670     0EFE                     l2257:
  2671                           
  2672                           ;Master.c: 336:     PORTB = 0;
  2673     0EFE  0186               	clrf	6	;volatile
  2674     0EFF                     l2259:
  2675                           
  2676                           ;Master.c: 337:     PORTD = 0;
  2677     0EFF  0188               	clrf	8	;volatile
  2678     0F00                     l2261:
  2679                           
  2680                           ;Master.c: 338:     PORTE = 0;
  2681     0F00  0189               	clrf	9	;volatile
  2682     0F01                     l2263:
  2683                           
  2684                           ;Master.c: 340:     OPTION_REGbits.nRBPU = 0;
  2685     0F01  1683               	bsf	3,5	;RP0=1, select bank1
  2686     0F02  1303               	bcf	3,6	;RP1=0, select bank1
  2687     0F03  1381               	bcf	1,7	;volatile
  2688     0F04                     l2265:
  2689                           
  2690                           ;Master.c: 341:     IOCB = 0b11111111;
  2691     0F04  30FF               	movlw	255
  2692     0F05  0096               	movwf	22	;volatile
  2693     0F06                     l2267:
  2694                           
  2695                           ;Master.c: 343:     OSCCONbits.IRCF = 0b111;
  2696     0F06  3070               	movlw	112
  2697     0F07  048F               	iorwf	15,f	;volatile
  2698     0F08                     l2269:
  2699                           
  2700                           ;Master.c: 344:     OSCCONbits.SCS = 1;
  2701     0F08  140F               	bsf	15,0	;volatile
  2702     0F09                     l2271:
  2703                           
  2704                           ;Master.c: 346:     INTCONbits.RBIF = 0;
  2705     0F09  100B               	bcf	11,0	;volatile
  2706     0F0A                     l2273:
  2707                           
  2708                           ;Master.c: 347:     INTCONbits.RBIE = 1;
  2709     0F0A  158B               	bsf	11,3	;volatile
  2710     0F0B                     l2275:
  2711                           
  2712                           ;Master.c: 348:     INTCONbits.GIE = 1;
  2713     0F0B  178B               	bsf	11,7	;volatile
  2714     0F0C                     l2277:
  2715                           
  2716                           ;Master.c: 349:     INTCONbits.PEIE = 1;
  2717     0F0C  170B               	bsf	11,6	;volatile
  2718     0F0D                     l2279:
  2719                           
  2720                           ;Master.c: 351:     I2C_Master_Init(100000);
  2721     0F0D  3000               	movlw	0
  2722     0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  2723     0F0F  1303               	bcf	3,6	;RP1=0, select bank0
  2724     0F10  00DD               	movwf	I2C_Master_Init@c+3
  2725     0F11  3001               	movlw	1
  2726     0F12  00DC               	movwf	I2C_Master_Init@c+2
  2727     0F13  3086               	movlw	134
  2728     0F14  00DB               	movwf	I2C_Master_Init@c+1
  2729     0F15  30A0               	movlw	160
  2730     0F16  00DA               	movwf	I2C_Master_Init@c
  2731     0F17  120A  158A  274B  120A  158A  	fcall	_I2C_Master_Init
  2732     0F1C                     l239:
  2733     0F1C  0008               	return
  2734     0F1D                     __end_of_setup:
  2735                           
  2736                           	psect	text3
  2737     0F4B                     __ptext3:	
  2738 ;; *************** function _I2C_Master_Init *****************
  2739 ;; Defined at:
  2740 ;;		line 17 in file "I2C.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;  c               4    8[BANK0 ] const unsigned long 
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;		None
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  1    wreg      void 
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, status,0, pclath, cstack
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2754 ;;      Params:         0       4       0       0       0
  2755 ;;      Locals:         0       0       0       0       0
  2756 ;;      Temps:          0       4       0       0       0
  2757 ;;      Totals:         0       8       0       0       0
  2758 ;;Total ram usage:        8 bytes
  2759 ;; Hardware stack levels used: 1
  2760 ;; Hardware stack levels required when called: 2
  2761 ;; This function calls:
  2762 ;;		___lldiv
  2763 ;; This function is called by:
  2764 ;;		_setup
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768     0F4B                     _I2C_Master_Init:	
  2769                           ;psect for function _I2C_Master_Init
  2770                           
  2771     0F4B                     l2165:	
  2772                           ;incstack = 0
  2773                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2774                           
  2775                           
  2776                           ;I2C.c: 17: void I2C_Master_Init(const unsigned long c);I2C.c: 18: {;I2C.c: 19:     SSPC
      +                          ON = 0b00101000;
  2777     0F4B  3028               	movlw	40
  2778     0F4C  1283               	bcf	3,5	;RP0=0, select bank0
  2779     0F4D  1303               	bcf	3,6	;RP1=0, select bank0
  2780     0F4E  0094               	movwf	20	;volatile
  2781     0F4F                     l2167:
  2782                           
  2783                           ;I2C.c: 20:     SSPCON2 = 0;
  2784     0F4F  1683               	bsf	3,5	;RP0=1, select bank1
  2785     0F50  1303               	bcf	3,6	;RP1=0, select bank1
  2786     0F51  0191               	clrf	17	;volatile
  2787     0F52                     l2169:
  2788                           
  2789                           ;I2C.c: 21:     SSPADD = (8000000/(4*c))-1;
  2790     0F52  1283               	bcf	3,5	;RP0=0, select bank0
  2791     0F53  1303               	bcf	3,6	;RP1=0, select bank0
  2792     0F54  085A               	movf	I2C_Master_Init@c,w
  2793     0F55  00DE               	movwf	??_I2C_Master_Init
  2794     0F56  085B               	movf	I2C_Master_Init@c+1,w
  2795     0F57  00DF               	movwf	??_I2C_Master_Init+1
  2796     0F58  085C               	movf	I2C_Master_Init@c+2,w
  2797     0F59  00E0               	movwf	??_I2C_Master_Init+2
  2798     0F5A  085D               	movf	I2C_Master_Init@c+3,w
  2799     0F5B  00E1               	movwf	??_I2C_Master_Init+3
  2800     0F5C  3002               	movlw	2
  2801     0F5D                     u1705:
  2802     0F5D  1003               	clrc
  2803     0F5E  0DDE               	rlf	??_I2C_Master_Init,f
  2804     0F5F  0DDF               	rlf	??_I2C_Master_Init+1,f
  2805     0F60  0DE0               	rlf	??_I2C_Master_Init+2,f
  2806     0F61  0DE1               	rlf	??_I2C_Master_Init+3,f
  2807     0F62                     u1700:
  2808     0F62  3EFF               	addlw	-1
  2809     0F63  1D03               	skipz
  2810     0F64  2F5D               	goto	u1705
  2811     0F65  0861               	movf	??_I2C_Master_Init+3,w
  2812     0F66  00D5               	movwf	___lldiv@divisor+3
  2813     0F67  0860               	movf	??_I2C_Master_Init+2,w
  2814     0F68  00D4               	movwf	___lldiv@divisor+2
  2815     0F69  085F               	movf	??_I2C_Master_Init+1,w
  2816     0F6A  00D3               	movwf	___lldiv@divisor+1
  2817     0F6B  085E               	movf	??_I2C_Master_Init,w
  2818     0F6C  00D2               	movwf	___lldiv@divisor
  2819     0F6D  3000               	movlw	0
  2820     0F6E  00D9               	movwf	___lldiv@dividend+3
  2821     0F6F  307A               	movlw	122
  2822     0F70  00D8               	movwf	___lldiv@dividend+2
  2823     0F71  3012               	movlw	18
  2824     0F72  00D7               	movwf	___lldiv@dividend+1
  2825     0F73  3000               	movlw	0
  2826     0F74  00D6               	movwf	___lldiv@dividend
  2827     0F75  120A  118A  25B2  120A  158A  	fcall	___lldiv
  2828     0F7A  1283               	bcf	3,5	;RP0=0, select bank0
  2829     0F7B  1303               	bcf	3,6	;RP1=0, select bank0
  2830     0F7C  0852               	movf	?___lldiv,w
  2831     0F7D  3EFF               	addlw	255
  2832     0F7E  1683               	bsf	3,5	;RP0=1, select bank1
  2833     0F7F  1303               	bcf	3,6	;RP1=0, select bank1
  2834     0F80  0093               	movwf	19	;volatile
  2835     0F81                     l2171:
  2836                           
  2837                           ;I2C.c: 22:     SSPSTAT = 0;
  2838     0F81  0194               	clrf	20	;volatile
  2839     0F82                     l2173:
  2840                           
  2841                           ;I2C.c: 23:     TRISCbits.TRISC3 = 1;
  2842     0F82  1587               	bsf	7,3	;volatile
  2843     0F83                     l2175:
  2844                           
  2845                           ;I2C.c: 24:     TRISCbits.TRISC4 = 1;
  2846     0F83  1607               	bsf	7,4	;volatile
  2847     0F84                     l29:
  2848     0F84  0008               	return
  2849     0F85                     __end_of_I2C_Master_Init:
  2850                           
  2851                           	psect	text4
  2852     05B2                     __ptext4:	
  2853 ;; *************** function ___lldiv *****************
  2854 ;; Defined at:
  2855 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;  divisor         4    0[BANK0 ] unsigned long 
  2858 ;;  dividend        4    4[BANK0 ] unsigned long 
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;  quotient        4    4[COMMON] unsigned long 
  2861 ;;  counter         1    8[COMMON] unsigned char 
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  4    0[BANK0 ] unsigned long 
  2864 ;; Registers used:
  2865 ;;		wreg, status,2, status,0
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2871 ;;      Params:         0       8       0       0       0
  2872 ;;      Locals:         5       0       0       0       0
  2873 ;;      Temps:          1       0       0       0       0
  2874 ;;      Totals:         6       8       0       0       0
  2875 ;;Total ram usage:       14 bytes
  2876 ;; Hardware stack levels used: 1
  2877 ;; Hardware stack levels required when called: 1
  2878 ;; This function calls:
  2879 ;;		Nothing
  2880 ;; This function is called by:
  2881 ;;		_I2C_Master_Init
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885     05B2                     ___lldiv:	
  2886                           ;psect for function ___lldiv
  2887                           
  2888     05B2                     l2141:	
  2889                           ;incstack = 0
  2890                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2891                           
  2892     05B2  3000               	movlw	0
  2893     05B3  00F7               	movwf	___lldiv@quotient+3
  2894     05B4  3000               	movlw	0
  2895     05B5  00F6               	movwf	___lldiv@quotient+2
  2896     05B6  3000               	movlw	0
  2897     05B7  00F5               	movwf	___lldiv@quotient+1
  2898     05B8  3000               	movlw	0
  2899     05B9  00F4               	movwf	___lldiv@quotient
  2900     05BA  1283               	bcf	3,5	;RP0=0, select bank0
  2901     05BB  1303               	bcf	3,6	;RP1=0, select bank0
  2902     05BC  0855               	movf	___lldiv@divisor+3,w
  2903     05BD  0454               	iorwf	___lldiv@divisor+2,w
  2904     05BE  0453               	iorwf	___lldiv@divisor+1,w
  2905     05BF  0452               	iorwf	___lldiv@divisor,w
  2906     05C0  1903               	skipnz
  2907     05C1  2DC3               	goto	u1631
  2908     05C2  2DC4               	goto	u1630
  2909     05C3                     u1631:
  2910     05C3  2E11               	goto	l2161
  2911     05C4                     u1630:
  2912     05C4                     l2143:
  2913     05C4  01F8               	clrf	___lldiv@counter
  2914     05C5  0AF8               	incf	___lldiv@counter,f
  2915     05C6  2DD4               	goto	l2147
  2916     05C7                     l2145:
  2917     05C7  3001               	movlw	1
  2918     05C8  00F3               	movwf	??___lldiv
  2919     05C9                     u1645:
  2920     05C9  1003               	clrc
  2921     05CA  0DD2               	rlf	___lldiv@divisor,f
  2922     05CB  0DD3               	rlf	___lldiv@divisor+1,f
  2923     05CC  0DD4               	rlf	___lldiv@divisor+2,f
  2924     05CD  0DD5               	rlf	___lldiv@divisor+3,f
  2925     05CE  0BF3               	decfsz	??___lldiv,f
  2926     05CF  2DC9               	goto	u1645
  2927     05D0  3001               	movlw	1
  2928     05D1  00F3               	movwf	??___lldiv
  2929     05D2  0873               	movf	??___lldiv,w
  2930     05D3  07F8               	addwf	___lldiv@counter,f
  2931     05D4                     l2147:
  2932     05D4  1FD5               	btfss	___lldiv@divisor+3,7
  2933     05D5  2DD7               	goto	u1651
  2934     05D6  2DD8               	goto	u1650
  2935     05D7                     u1651:
  2936     05D7  2DC7               	goto	l2145
  2937     05D8                     u1650:
  2938     05D8                     l2149:
  2939     05D8  3001               	movlw	1
  2940     05D9  00F3               	movwf	??___lldiv
  2941     05DA                     u1665:
  2942     05DA  1003               	clrc
  2943     05DB  0DF4               	rlf	___lldiv@quotient,f
  2944     05DC  0DF5               	rlf	___lldiv@quotient+1,f
  2945     05DD  0DF6               	rlf	___lldiv@quotient+2,f
  2946     05DE  0DF7               	rlf	___lldiv@quotient+3,f
  2947     05DF  0BF3               	decfsz	??___lldiv,f
  2948     05E0  2DDA               	goto	u1665
  2949     05E1                     l2151:
  2950     05E1  0855               	movf	___lldiv@divisor+3,w
  2951     05E2  0259               	subwf	___lldiv@dividend+3,w
  2952     05E3  1D03               	skipz
  2953     05E4  2DEF               	goto	u1675
  2954     05E5  0854               	movf	___lldiv@divisor+2,w
  2955     05E6  0258               	subwf	___lldiv@dividend+2,w
  2956     05E7  1D03               	skipz
  2957     05E8  2DEF               	goto	u1675
  2958     05E9  0853               	movf	___lldiv@divisor+1,w
  2959     05EA  0257               	subwf	___lldiv@dividend+1,w
  2960     05EB  1D03               	skipz
  2961     05EC  2DEF               	goto	u1675
  2962     05ED  0852               	movf	___lldiv@divisor,w
  2963     05EE  0256               	subwf	___lldiv@dividend,w
  2964     05EF                     u1675:
  2965     05EF  1C03               	skipc
  2966     05F0  2DF2               	goto	u1671
  2967     05F1  2DF3               	goto	u1670
  2968     05F2                     u1671:
  2969     05F2  2E02               	goto	l2157
  2970     05F3                     u1670:
  2971     05F3                     l2153:
  2972     05F3  0852               	movf	___lldiv@divisor,w
  2973     05F4  02D6               	subwf	___lldiv@dividend,f
  2974     05F5  0853               	movf	___lldiv@divisor+1,w
  2975     05F6  1C03               	skipc
  2976     05F7  0F53               	incfsz	___lldiv@divisor+1,w
  2977     05F8  02D7               	subwf	___lldiv@dividend+1,f
  2978     05F9  0854               	movf	___lldiv@divisor+2,w
  2979     05FA  1C03               	skipc
  2980     05FB  0F54               	incfsz	___lldiv@divisor+2,w
  2981     05FC  02D8               	subwf	___lldiv@dividend+2,f
  2982     05FD  0855               	movf	___lldiv@divisor+3,w
  2983     05FE  1C03               	skipc
  2984     05FF  0F55               	incfsz	___lldiv@divisor+3,w
  2985     0600  02D9               	subwf	___lldiv@dividend+3,f
  2986     0601                     l2155:
  2987     0601  1474               	bsf	___lldiv@quotient,0
  2988     0602                     l2157:
  2989     0602  3001               	movlw	1
  2990     0603                     u1685:
  2991     0603  1003               	clrc
  2992     0604  0CD5               	rrf	___lldiv@divisor+3,f
  2993     0605  0CD4               	rrf	___lldiv@divisor+2,f
  2994     0606  0CD3               	rrf	___lldiv@divisor+1,f
  2995     0607  0CD2               	rrf	___lldiv@divisor,f
  2996     0608  3EFF               	addlw	-1
  2997     0609  1D03               	skipz
  2998     060A  2E03               	goto	u1685
  2999     060B                     l2159:
  3000     060B  3001               	movlw	1
  3001     060C  02F8               	subwf	___lldiv@counter,f
  3002     060D  1D03               	btfss	3,2
  3003     060E  2E10               	goto	u1691
  3004     060F  2E11               	goto	u1690
  3005     0610                     u1691:
  3006     0610  2DD8               	goto	l2149
  3007     0611                     u1690:
  3008     0611                     l2161:
  3009     0611  0877               	movf	___lldiv@quotient+3,w
  3010     0612  00D5               	movwf	?___lldiv+3
  3011     0613  0876               	movf	___lldiv@quotient+2,w
  3012     0614  00D4               	movwf	?___lldiv+2
  3013     0615  0875               	movf	___lldiv@quotient+1,w
  3014     0616  00D3               	movwf	?___lldiv+1
  3015     0617  0874               	movf	___lldiv@quotient,w
  3016     0618  00D2               	movwf	?___lldiv
  3017     0619                     l443:
  3018     0619  0008               	return
  3019     061A                     __end_of___lldiv:
  3020                           
  3021                           	psect	text5
  3022     0670                     __ptext5:	
  3023 ;; *************** function _leer_reloj *****************
  3024 ;; Defined at:
  3025 ;;		line 382 in file "Master.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;  direccion       1    wreg     unsigned char 
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;  direccion       1    4[BANK0 ] unsigned char 
  3030 ;;  bcd             2    5[BANK0 ] unsigned int 
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  2    0[BANK0 ] unsigned int 
  3033 ;; Registers used:
  3034 ;;		wreg, status,2, status,0, pclath, cstack
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3040 ;;      Params:         0       2       0       0       0
  3041 ;;      Locals:         0       3       0       0       0
  3042 ;;      Temps:          0       2       0       0       0
  3043 ;;      Totals:         0       7       0       0       0
  3044 ;;Total ram usage:        7 bytes
  3045 ;; Hardware stack levels used: 1
  3046 ;; Hardware stack levels required when called: 3
  3047 ;; This function calls:
  3048 ;;		_I2C_Master_Read
  3049 ;;		_I2C_Master_RepeatedStart
  3050 ;;		_I2C_Master_Start
  3051 ;;		_I2C_Master_Stop
  3052 ;;		_I2C_Master_Write
  3053 ;; This function is called by:
  3054 ;;		_main
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058     0670                     _leer_reloj:	
  3059                           ;psect for function _leer_reloj
  3060                           
  3061                           
  3062                           ;incstack = 0
  3063                           ; Regs used in _leer_reloj: [wreg+status,2+status,0+pclath+cstack]
  3064                           ;leer_reloj@direccion stored from wreg
  3065     0670  1283               	bcf	3,5	;RP0=0, select bank0
  3066     0671  1303               	bcf	3,6	;RP1=0, select bank0
  3067     0672  00D6               	movwf	leer_reloj@direccion
  3068     0673                     l2311:
  3069     0673                     l2313:
  3070                           
  3071                           ;Master.c: 384:     I2C_Master_Start();
  3072     0673  120A  158A  2627  120A  118A  	fcall	_I2C_Master_Start
  3073     0678                     l2315:
  3074                           
  3075                           ;Master.c: 385:     I2C_Master_Write(ds3231_escribir);
  3076     0678  1283               	bcf	3,5	;RP0=0, select bank0
  3077     0679  1303               	bcf	3,6	;RP1=0, select bank0
  3078     067A  082E               	movf	_ds3231_escribir,w
  3079     067B  00D4               	movwf	??_leer_reloj
  3080     067C  01D5               	clrf	??_leer_reloj+1
  3081     067D  0854               	movf	??_leer_reloj,w
  3082     067E  00F3               	movwf	I2C_Master_Write@d
  3083     067F  0855               	movf	??_leer_reloj+1,w
  3084     0680  00F4               	movwf	I2C_Master_Write@d+1
  3085     0681  120A  158A  2642  120A  118A  	fcall	_I2C_Master_Write
  3086     0686                     l2317:
  3087                           
  3088                           ;Master.c: 386:     I2C_Master_Write(direccion);
  3089     0686  1283               	bcf	3,5	;RP0=0, select bank0
  3090     0687  1303               	bcf	3,6	;RP1=0, select bank0
  3091     0688  0856               	movf	leer_reloj@direccion,w
  3092     0689  00D4               	movwf	??_leer_reloj
  3093     068A  01D5               	clrf	??_leer_reloj+1
  3094     068B  0854               	movf	??_leer_reloj,w
  3095     068C  00F3               	movwf	I2C_Master_Write@d
  3096     068D  0855               	movf	??_leer_reloj+1,w
  3097     068E  00F4               	movwf	I2C_Master_Write@d+1
  3098     068F  120A  158A  2642  120A  118A  	fcall	_I2C_Master_Write
  3099     0694                     l2319:
  3100                           
  3101                           ;Master.c: 387:     I2C_Master_RepeatedStart();
  3102     0694  120A  158A  2639  120A  118A  	fcall	_I2C_Master_RepeatedStart
  3103     0699                     l2321:
  3104                           
  3105                           ;Master.c: 388:     I2C_Master_Write(ds3231_leer);
  3106     0699  087A               	movf	_ds3231_leer,w
  3107     069A  1283               	bcf	3,5	;RP0=0, select bank0
  3108     069B  1303               	bcf	3,6	;RP1=0, select bank0
  3109     069C  00D4               	movwf	??_leer_reloj
  3110     069D  01D5               	clrf	??_leer_reloj+1
  3111     069E  0854               	movf	??_leer_reloj,w
  3112     069F  00F3               	movwf	I2C_Master_Write@d
  3113     06A0  0855               	movf	??_leer_reloj+1,w
  3114     06A1  00F4               	movwf	I2C_Master_Write@d+1
  3115     06A2  120A  158A  2642  120A  118A  	fcall	_I2C_Master_Write
  3116     06A7                     l2323:
  3117                           
  3118                           ;Master.c: 389:     bcd = I2C_Master_Read(0);
  3119     06A7  3000               	movlw	0
  3120     06A8  00F3               	movwf	I2C_Master_Read@a
  3121     06A9  00F4               	movwf	I2C_Master_Read@a+1
  3122     06AA  120A  158A  271D  120A  118A  	fcall	_I2C_Master_Read
  3123     06AF  0874               	movf	?_I2C_Master_Read+1,w
  3124     06B0  1283               	bcf	3,5	;RP0=0, select bank0
  3125     06B1  1303               	bcf	3,6	;RP1=0, select bank0
  3126     06B2  00D8               	movwf	leer_reloj@bcd+1
  3127     06B3  0873               	movf	?_I2C_Master_Read,w
  3128     06B4  00D7               	movwf	leer_reloj@bcd
  3129     06B5                     l2325:
  3130                           
  3131                           ;Master.c: 390:     I2C_Master_Stop();
  3132     06B5  120A  158A  2630  120A  118A  	fcall	_I2C_Master_Stop
  3133     06BA                     l2327:
  3134                           
  3135                           ;Master.c: 392:     return bcd;
  3136     06BA  1283               	bcf	3,5	;RP0=0, select bank0
  3137     06BB  1303               	bcf	3,6	;RP1=0, select bank0
  3138     06BC  0858               	movf	leer_reloj@bcd+1,w
  3139     06BD  00D3               	movwf	?_leer_reloj+1
  3140     06BE  0857               	movf	leer_reloj@bcd,w
  3141     06BF  00D2               	movwf	?_leer_reloj
  3142     06C0                     l254:
  3143     06C0  0008               	return
  3144     06C1                     __end_of_leer_reloj:
  3145                           
  3146                           	psect	text6
  3147     0E39                     __ptext6:	
  3148 ;; *************** function _I2C_Master_RepeatedStart *****************
  3149 ;; Defined at:
  3150 ;;		line 48 in file "I2C.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;		None
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;		None
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  1    wreg      void 
  3157 ;; Registers used:
  3158 ;;		wreg, status,2, status,0, pclath, cstack
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3164 ;;      Params:         0       0       0       0       0
  3165 ;;      Locals:         0       0       0       0       0
  3166 ;;      Temps:          0       0       0       0       0
  3167 ;;      Totals:         0       0       0       0       0
  3168 ;;Total ram usage:        0 bytes
  3169 ;; Hardware stack levels used: 1
  3170 ;; Hardware stack levels required when called: 2
  3171 ;; This function calls:
  3172 ;;		_I2C_Master_Wait
  3173 ;; This function is called by:
  3174 ;;		_leer_reloj
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178     0E39                     _I2C_Master_RepeatedStart:	
  3179                           ;psect for function _I2C_Master_RepeatedStart
  3180                           
  3181     0E39                     l1579:	
  3182                           ;incstack = 0
  3183                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3184                           
  3185                           
  3186                           ;I2C.c: 50:     I2C_Master_Wait();
  3187     0E39  120A  158A  2659  120A  158A  	fcall	_I2C_Master_Wait
  3188     0E3E                     l1581:
  3189                           
  3190                           ;I2C.c: 51:     SSPCON2bits.RSEN = 1;
  3191     0E3E  1683               	bsf	3,5	;RP0=1, select bank1
  3192     0E3F  1303               	bcf	3,6	;RP1=0, select bank1
  3193     0E40  1491               	bsf	17,1	;volatile
  3194     0E41                     l41:
  3195     0E41  0008               	return
  3196     0E42                     __end_of_I2C_Master_RepeatedStart:
  3197                           
  3198                           	psect	text7
  3199     0F1D                     __ptext7:	
  3200 ;; *************** function _I2C_Master_Read *****************
  3201 ;; Defined at:
  3202 ;;		line 75 in file "I2C.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;  a               2    3[COMMON] unsigned short 
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;  temp            2    7[COMMON] unsigned short 
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  2    3[COMMON] unsigned short 
  3209 ;; Registers used:
  3210 ;;		wreg, status,2, status,0, pclath, cstack
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3216 ;;      Params:         2       0       0       0       0
  3217 ;;      Locals:         2       0       0       0       0
  3218 ;;      Temps:          2       0       0       0       0
  3219 ;;      Totals:         6       0       0       0       0
  3220 ;;Total ram usage:        6 bytes
  3221 ;; Hardware stack levels used: 1
  3222 ;; Hardware stack levels required when called: 2
  3223 ;; This function calls:
  3224 ;;		_I2C_Master_Wait
  3225 ;; This function is called by:
  3226 ;;		_main
  3227 ;;		_leer_reloj
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231     0F1D                     _I2C_Master_Read:	
  3232                           ;psect for function _I2C_Master_Read
  3233                           
  3234     0F1D                     l1591:	
  3235                           ;incstack = 0
  3236                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3237                           
  3238                           
  3239                           ;I2C.c: 75: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 76: {;I2C.c: 77:    
      +                           unsigned short temp;;I2C.c: 78:     I2C_Master_Wait();
  3240     0F1D  120A  158A  2659  120A  158A  	fcall	_I2C_Master_Wait
  3241     0F22                     l1593:
  3242                           
  3243                           ;I2C.c: 79:     SSPCON2bits.RCEN = 1;
  3244     0F22  1683               	bsf	3,5	;RP0=1, select bank1
  3245     0F23  1303               	bcf	3,6	;RP1=0, select bank1
  3246     0F24  1591               	bsf	17,3	;volatile
  3247                           
  3248                           ;I2C.c: 80:     I2C_Master_Wait();
  3249     0F25  120A  158A  2659  120A  158A  	fcall	_I2C_Master_Wait
  3250     0F2A                     l1595:
  3251                           
  3252                           ;I2C.c: 81:     temp = SSPBUF;
  3253     0F2A  1283               	bcf	3,5	;RP0=0, select bank0
  3254     0F2B  1303               	bcf	3,6	;RP1=0, select bank0
  3255     0F2C  0813               	movf	19,w	;volatile
  3256     0F2D  00F5               	movwf	??_I2C_Master_Read
  3257     0F2E  01F6               	clrf	??_I2C_Master_Read+1
  3258     0F2F  0875               	movf	??_I2C_Master_Read,w
  3259     0F30  00F7               	movwf	I2C_Master_Read@temp
  3260     0F31  0876               	movf	??_I2C_Master_Read+1,w
  3261     0F32  00F8               	movwf	I2C_Master_Read@temp+1
  3262     0F33                     l1597:
  3263                           
  3264                           ;I2C.c: 82:     I2C_Master_Wait();
  3265     0F33  120A  158A  2659  120A  158A  	fcall	_I2C_Master_Wait
  3266     0F38                     l1599:
  3267                           
  3268                           ;I2C.c: 83:     if(a == 1){
  3269     0F38  0373               	decf	I2C_Master_Read@a,w
  3270     0F39  0474               	iorwf	I2C_Master_Read@a+1,w
  3271     0F3A  1D03               	btfss	3,2
  3272     0F3B  2F3D               	goto	u921
  3273     0F3C  2F3E               	goto	u920
  3274     0F3D                     u921:
  3275     0F3D  2F42               	goto	l50
  3276     0F3E                     u920:
  3277     0F3E                     l1601:
  3278                           
  3279                           ;I2C.c: 84:         SSPCON2bits.ACKDT = 0;
  3280     0F3E  1683               	bsf	3,5	;RP0=1, select bank1
  3281     0F3F  1303               	bcf	3,6	;RP1=0, select bank1
  3282     0F40  1291               	bcf	17,5	;volatile
  3283                           
  3284                           ;I2C.c: 85:     }else{
  3285     0F41  2F45               	goto	l51
  3286     0F42                     l50:
  3287                           
  3288                           ;I2C.c: 86:         SSPCON2bits.ACKDT = 1;
  3289     0F42  1683               	bsf	3,5	;RP0=1, select bank1
  3290     0F43  1303               	bcf	3,6	;RP1=0, select bank1
  3291     0F44  1691               	bsf	17,5	;volatile
  3292     0F45                     l51:	
  3293                           ;I2C.c: 87:     }
  3294                           
  3295                           
  3296                           ;I2C.c: 88:     SSPCON2bits.ACKEN = 1;
  3297     0F45  1611               	bsf	17,4	;volatile
  3298     0F46                     l1603:
  3299                           
  3300                           ;I2C.c: 89:     return temp;
  3301     0F46  0878               	movf	I2C_Master_Read@temp+1,w
  3302     0F47  00F4               	movwf	?_I2C_Master_Read+1
  3303     0F48  0877               	movf	I2C_Master_Read@temp,w
  3304     0F49  00F3               	movwf	?_I2C_Master_Read
  3305     0F4A                     l52:
  3306     0F4A  0008               	return
  3307     0F4B                     __end_of_I2C_Master_Read:
  3308                           
  3309                           	psect	text8
  3310     061A                     __ptext8:	
  3311 ;; *************** function _int_a_bcd *****************
  3312 ;; Defined at:
  3313 ;;		line 359 in file "Master.c"
  3314 ;; Parameters:    Size  Location     Type
  3315 ;;  value           2    7[BANK0 ] unsigned int 
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;  digit           2    9[BANK0 ] unsigned int 
  3318 ;;  multiplier      2   13[BANK0 ] unsigned int 
  3319 ;;  bcd             2   11[BANK0 ] unsigned int 
  3320 ;; Return value:  Size  Location     Type
  3321 ;;                  2    7[BANK0 ] unsigned int 
  3322 ;; Registers used:
  3323 ;;		wreg, status,2, status,0, pclath, cstack
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3329 ;;      Params:         0       2       0       0       0
  3330 ;;      Locals:         0       6       0       0       0
  3331 ;;      Temps:          0       0       0       0       0
  3332 ;;      Totals:         0       8       0       0       0
  3333 ;;Total ram usage:        8 bytes
  3334 ;; Hardware stack levels used: 1
  3335 ;; Hardware stack levels required when called: 2
  3336 ;; This function calls:
  3337 ;;		___lwdiv
  3338 ;;		___lwmod
  3339 ;;		___wmul
  3340 ;; This function is called by:
  3341 ;;		_main
  3342 ;; This function uses a non-reentrant model
  3343 ;;
  3344                           
  3345     061A                     _int_a_bcd:	
  3346                           ;psect for function _int_a_bcd
  3347                           
  3348     061A                     l2295:	
  3349                           ;incstack = 0
  3350                           ; Regs used in _int_a_bcd: [wreg+status,2+status,0+pclath+cstack]
  3351                           
  3352                           
  3353                           ;Master.c: 360:     unsigned int bcd = 0;
  3354     061A  1283               	bcf	3,5	;RP0=0, select bank0
  3355     061B  1303               	bcf	3,6	;RP1=0, select bank0
  3356     061C  01DD               	clrf	int_a_bcd@bcd
  3357     061D  01DE               	clrf	int_a_bcd@bcd+1
  3358     061E                     l2297:
  3359                           
  3360                           ;Master.c: 361:     unsigned int multiplier = 1;
  3361     061E  3001               	movlw	1
  3362     061F  00DF               	movwf	int_a_bcd@multiplier
  3363     0620  3000               	movlw	0
  3364     0621  00E0               	movwf	int_a_bcd@multiplier+1
  3365                           
  3366                           ;Master.c: 363:     while (value > 0) {
  3367     0622  2E65               	goto	l2305
  3368     0623                     l2299:
  3369                           
  3370                           ;Master.c: 364:         unsigned int digit = value % 10;
  3371     0623  300A               	movlw	10
  3372     0624  00D5               	movwf	___lwmod@divisor
  3373     0625  3000               	movlw	0
  3374     0626  00D6               	movwf	___lwmod@divisor+1
  3375     0627  085A               	movf	int_a_bcd@value+1,w
  3376     0628  00D8               	movwf	___lwmod@dividend+1
  3377     0629  0859               	movf	int_a_bcd@value,w
  3378     062A  00D7               	movwf	___lwmod@dividend
  3379     062B  120A  158A  2785  120A  118A  	fcall	___lwmod
  3380     0630  1283               	bcf	3,5	;RP0=0, select bank0
  3381     0631  1303               	bcf	3,6	;RP1=0, select bank0
  3382     0632  0856               	movf	?___lwmod+1,w
  3383     0633  00DC               	movwf	int_a_bcd@digit+1
  3384     0634  0855               	movf	?___lwmod,w
  3385     0635  00DB               	movwf	int_a_bcd@digit
  3386                           
  3387                           ;Master.c: 365:         bcd += digit * multiplier;
  3388     0636  085C               	movf	int_a_bcd@digit+1,w
  3389     0637  00F4               	movwf	___wmul@multiplier+1
  3390     0638  085B               	movf	int_a_bcd@digit,w
  3391     0639  00F3               	movwf	___wmul@multiplier
  3392     063A  0860               	movf	int_a_bcd@multiplier+1,w
  3393     063B  00F6               	movwf	___wmul@multiplicand+1
  3394     063C  085F               	movf	int_a_bcd@multiplier,w
  3395     063D  00F5               	movwf	___wmul@multiplicand
  3396     063E  120A  158A  26CB  120A  118A  	fcall	___wmul
  3397     0643  0873               	movf	?___wmul,w
  3398     0644  1283               	bcf	3,5	;RP0=0, select bank0
  3399     0645  1303               	bcf	3,6	;RP1=0, select bank0
  3400     0646  07DD               	addwf	int_a_bcd@bcd,f
  3401     0647  1803               	skipnc
  3402     0648  0ADE               	incf	int_a_bcd@bcd+1,f
  3403     0649  0874               	movf	?___wmul+1,w
  3404     064A  07DE               	addwf	int_a_bcd@bcd+1,f
  3405     064B                     l2301:
  3406                           
  3407                           ;Master.c: 366:         multiplier *= 16;
  3408     064B  3004               	movlw	4
  3409     064C                     u1845:
  3410     064C  1003               	clrc
  3411     064D  0DDF               	rlf	int_a_bcd@multiplier,f
  3412     064E  0DE0               	rlf	int_a_bcd@multiplier+1,f
  3413     064F  3EFF               	addlw	-1
  3414     0650  1D03               	skipz
  3415     0651  2E4C               	goto	u1845
  3416     0652                     l2303:
  3417                           
  3418                           ;Master.c: 367:         value /= 10;
  3419     0652  300A               	movlw	10
  3420     0653  00F3               	movwf	___lwdiv@divisor
  3421     0654  3000               	movlw	0
  3422     0655  00F4               	movwf	___lwdiv@divisor+1
  3423     0656  085A               	movf	int_a_bcd@value+1,w
  3424     0657  00F6               	movwf	___lwdiv@dividend+1
  3425     0658  0859               	movf	int_a_bcd@value,w
  3426     0659  00F5               	movwf	___lwdiv@dividend
  3427     065A  120A  118A  275B  120A  118A  	fcall	___lwdiv
  3428     065F  0874               	movf	?___lwdiv+1,w
  3429     0660  1283               	bcf	3,5	;RP0=0, select bank0
  3430     0661  1303               	bcf	3,6	;RP1=0, select bank0
  3431     0662  00DA               	movwf	int_a_bcd@value+1
  3432     0663  0873               	movf	?___lwdiv,w
  3433     0664  00D9               	movwf	int_a_bcd@value
  3434     0665                     l2305:
  3435                           
  3436                           ;Master.c: 363:     while (value > 0) {
  3437     0665  0859               	movf	int_a_bcd@value,w
  3438     0666  045A               	iorwf	int_a_bcd@value+1,w
  3439     0667  1D03               	btfss	3,2
  3440     0668  2E6A               	goto	u1851
  3441     0669  2E6B               	goto	u1850
  3442     066A                     u1851:
  3443     066A  2E23               	goto	l2299
  3444     066B                     u1850:
  3445     066B                     l2307:
  3446                           
  3447                           ;Master.c: 370:     return bcd;
  3448     066B  085E               	movf	int_a_bcd@bcd+1,w
  3449     066C  00DA               	movwf	?_int_a_bcd+1
  3450     066D  085D               	movf	int_a_bcd@bcd,w
  3451     066E  00D9               	movwf	?_int_a_bcd
  3452     066F                     l248:
  3453     066F  0008               	return
  3454     0670                     __end_of_int_a_bcd:
  3455                           
  3456                           	psect	text9
  3457     0ECB                     __ptext9:	
  3458 ;; *************** function ___wmul *****************
  3459 ;; Defined at:
  3460 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;  multiplier      2    3[COMMON] unsigned int 
  3463 ;;  multiplicand    2    5[COMMON] unsigned int 
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;  product         2    7[COMMON] unsigned int 
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  2    3[COMMON] unsigned int 
  3468 ;; Registers used:
  3469 ;;		wreg, status,2, status,0
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3475 ;;      Params:         4       0       0       0       0
  3476 ;;      Locals:         2       0       0       0       0
  3477 ;;      Temps:          0       0       0       0       0
  3478 ;;      Totals:         6       0       0       0       0
  3479 ;;Total ram usage:        6 bytes
  3480 ;; Hardware stack levels used: 1
  3481 ;; Hardware stack levels required when called: 1
  3482 ;; This function calls:
  3483 ;;		Nothing
  3484 ;; This function is called by:
  3485 ;;		_int_a_bcd
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489     0ECB                     ___wmul:	
  3490                           ;psect for function ___wmul
  3491                           
  3492     0ECB                     l1629:	
  3493                           ;incstack = 0
  3494                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3495                           
  3496     0ECB  01F7               	clrf	___wmul@product
  3497     0ECC  01F8               	clrf	___wmul@product+1
  3498     0ECD                     l1631:
  3499     0ECD  1C73               	btfss	___wmul@multiplier,0
  3500     0ECE  2ED0               	goto	u931
  3501     0ECF  2ED1               	goto	u930
  3502     0ED0                     u931:
  3503     0ED0  2ED7               	goto	l407
  3504     0ED1                     u930:
  3505     0ED1                     l1633:
  3506     0ED1  0875               	movf	___wmul@multiplicand,w
  3507     0ED2  07F7               	addwf	___wmul@product,f
  3508     0ED3  1803               	skipnc
  3509     0ED4  0AF8               	incf	___wmul@product+1,f
  3510     0ED5  0876               	movf	___wmul@multiplicand+1,w
  3511     0ED6  07F8               	addwf	___wmul@product+1,f
  3512     0ED7                     l407:
  3513     0ED7  3001               	movlw	1
  3514     0ED8                     u945:
  3515     0ED8  1003               	clrc
  3516     0ED9  0DF5               	rlf	___wmul@multiplicand,f
  3517     0EDA  0DF6               	rlf	___wmul@multiplicand+1,f
  3518     0EDB  3EFF               	addlw	-1
  3519     0EDC  1D03               	skipz
  3520     0EDD  2ED8               	goto	u945
  3521     0EDE                     l1635:
  3522     0EDE  3001               	movlw	1
  3523     0EDF                     u955:
  3524     0EDF  1003               	clrc
  3525     0EE0  0CF4               	rrf	___wmul@multiplier+1,f
  3526     0EE1  0CF3               	rrf	___wmul@multiplier,f
  3527     0EE2  3EFF               	addlw	-1
  3528     0EE3  1D03               	skipz
  3529     0EE4  2EDF               	goto	u955
  3530     0EE5                     l1637:
  3531     0EE5  0873               	movf	___wmul@multiplier,w
  3532     0EE6  0474               	iorwf	___wmul@multiplier+1,w
  3533     0EE7  1D03               	btfss	3,2
  3534     0EE8  2EEA               	goto	u961
  3535     0EE9  2EEB               	goto	u960
  3536     0EEA                     u961:
  3537     0EEA  2ECD               	goto	l1631
  3538     0EEB                     u960:
  3539     0EEB                     l1639:
  3540     0EEB  0878               	movf	___wmul@product+1,w
  3541     0EEC  00F4               	movwf	?___wmul+1
  3542     0EED  0877               	movf	___wmul@product,w
  3543     0EEE  00F3               	movwf	?___wmul
  3544     0EEF                     l409:
  3545     0EEF  0008               	return
  3546     0EF0                     __end_of___wmul:
  3547                           
  3548                           	psect	text10
  3549     0F85                     __ptext10:	
  3550 ;; *************** function ___lwmod *****************
  3551 ;; Defined at:
  3552 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;  divisor         2    3[BANK0 ] unsigned int 
  3555 ;;  dividend        2    5[BANK0 ] unsigned int 
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;  counter         1    9[COMMON] unsigned char 
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  2    3[BANK0 ] unsigned int 
  3560 ;; Registers used:
  3561 ;;		wreg, status,2, status,0
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3567 ;;      Params:         0       4       0       0       0
  3568 ;;      Locals:         1       0       0       0       0
  3569 ;;      Temps:          1       0       0       0       0
  3570 ;;      Totals:         2       4       0       0       0
  3571 ;;Total ram usage:        6 bytes
  3572 ;; Hardware stack levels used: 1
  3573 ;; Hardware stack levels required when called: 1
  3574 ;; This function calls:
  3575 ;;		Nothing
  3576 ;; This function is called by:
  3577 ;;		_int_a_bcd
  3578 ;;		_sprintf
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582     0F85                     ___lwmod:	
  3583                           ;psect for function ___lwmod
  3584                           
  3585     0F85                     l2225:	
  3586                           ;incstack = 0
  3587                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3588                           
  3589     0F85  1283               	bcf	3,5	;RP0=0, select bank0
  3590     0F86  1303               	bcf	3,6	;RP1=0, select bank0
  3591     0F87  0855               	movf	___lwmod@divisor,w
  3592     0F88  0456               	iorwf	___lwmod@divisor+1,w
  3593     0F89  1903               	btfsc	3,2
  3594     0F8A  2F8C               	goto	u1781
  3595     0F8B  2F8D               	goto	u1780
  3596     0F8C                     u1781:
  3597     0F8C  2FBC               	goto	l2243
  3598     0F8D                     u1780:
  3599     0F8D                     l2227:
  3600     0F8D  01F9               	clrf	___lwmod@counter
  3601     0F8E  0AF9               	incf	___lwmod@counter,f
  3602     0F8F  2F9B               	goto	l2233
  3603     0F90                     l2229:
  3604     0F90  3001               	movlw	1
  3605     0F91                     u1795:
  3606     0F91  1003               	clrc
  3607     0F92  0DD5               	rlf	___lwmod@divisor,f
  3608     0F93  0DD6               	rlf	___lwmod@divisor+1,f
  3609     0F94  3EFF               	addlw	-1
  3610     0F95  1D03               	skipz
  3611     0F96  2F91               	goto	u1795
  3612     0F97                     l2231:
  3613     0F97  3001               	movlw	1
  3614     0F98  00F8               	movwf	??___lwmod
  3615     0F99  0878               	movf	??___lwmod,w
  3616     0F9A  07F9               	addwf	___lwmod@counter,f
  3617     0F9B                     l2233:
  3618     0F9B  1FD6               	btfss	___lwmod@divisor+1,7
  3619     0F9C  2F9E               	goto	u1801
  3620     0F9D  2F9F               	goto	u1800
  3621     0F9E                     u1801:
  3622     0F9E  2F90               	goto	l2229
  3623     0F9F                     u1800:
  3624     0F9F                     l2235:
  3625     0F9F  0856               	movf	___lwmod@divisor+1,w
  3626     0FA0  0258               	subwf	___lwmod@dividend+1,w
  3627     0FA1  1D03               	skipz
  3628     0FA2  2FA5               	goto	u1815
  3629     0FA3  0855               	movf	___lwmod@divisor,w
  3630     0FA4  0257               	subwf	___lwmod@dividend,w
  3631     0FA5                     u1815:
  3632     0FA5  1C03               	skipc
  3633     0FA6  2FA8               	goto	u1811
  3634     0FA7  2FA9               	goto	u1810
  3635     0FA8                     u1811:
  3636     0FA8  2FAF               	goto	l2239
  3637     0FA9                     u1810:
  3638     0FA9                     l2237:
  3639     0FA9  0855               	movf	___lwmod@divisor,w
  3640     0FAA  02D7               	subwf	___lwmod@dividend,f
  3641     0FAB  0856               	movf	___lwmod@divisor+1,w
  3642     0FAC  1C03               	skipc
  3643     0FAD  03D8               	decf	___lwmod@dividend+1,f
  3644     0FAE  02D8               	subwf	___lwmod@dividend+1,f
  3645     0FAF                     l2239:
  3646     0FAF  3001               	movlw	1
  3647     0FB0                     u1825:
  3648     0FB0  1003               	clrc
  3649     0FB1  0CD6               	rrf	___lwmod@divisor+1,f
  3650     0FB2  0CD5               	rrf	___lwmod@divisor,f
  3651     0FB3  3EFF               	addlw	-1
  3652     0FB4  1D03               	skipz
  3653     0FB5  2FB0               	goto	u1825
  3654     0FB6                     l2241:
  3655     0FB6  3001               	movlw	1
  3656     0FB7  02F9               	subwf	___lwmod@counter,f
  3657     0FB8  1D03               	btfss	3,2
  3658     0FB9  2FBB               	goto	u1831
  3659     0FBA  2FBC               	goto	u1830
  3660     0FBB                     u1831:
  3661     0FBB  2F9F               	goto	l2235
  3662     0FBC                     u1830:
  3663     0FBC                     l2243:
  3664     0FBC  0858               	movf	___lwmod@dividend+1,w
  3665     0FBD  00D6               	movwf	?___lwmod+1
  3666     0FBE  0857               	movf	___lwmod@dividend,w
  3667     0FBF  00D5               	movwf	?___lwmod
  3668     0FC0                     l689:
  3669     0FC0  0008               	return
  3670     0FC1                     __end_of___lwmod:
  3671                           
  3672                           	psect	text11
  3673     075B                     __ptext11:	
  3674 ;; *************** function ___lwdiv *****************
  3675 ;; Defined at:
  3676 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;  divisor         2    3[COMMON] unsigned int 
  3679 ;;  dividend        2    5[COMMON] unsigned int 
  3680 ;; Auto vars:     Size  Location     Type
  3681 ;;  quotient        2    1[BANK0 ] unsigned int 
  3682 ;;  counter         1    0[BANK0 ] unsigned char 
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  2    3[COMMON] unsigned int 
  3685 ;; Registers used:
  3686 ;;		wreg, status,2, status,0
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3692 ;;      Params:         4       0       0       0       0
  3693 ;;      Locals:         0       3       0       0       0
  3694 ;;      Temps:          1       0       0       0       0
  3695 ;;      Totals:         5       3       0       0       0
  3696 ;;Total ram usage:        8 bytes
  3697 ;; Hardware stack levels used: 1
  3698 ;; Hardware stack levels required when called: 1
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		_int_a_bcd
  3703 ;;		_sprintf
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707     075B                     ___lwdiv:	
  3708                           ;psect for function ___lwdiv
  3709                           
  3710     075B                     l2199:	
  3711                           ;incstack = 0
  3712                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3713                           
  3714     075B  1283               	bcf	3,5	;RP0=0, select bank0
  3715     075C  1303               	bcf	3,6	;RP1=0, select bank0
  3716     075D  01D3               	clrf	___lwdiv@quotient
  3717     075E  01D4               	clrf	___lwdiv@quotient+1
  3718     075F                     l2201:
  3719     075F  0873               	movf	___lwdiv@divisor,w
  3720     0760  0474               	iorwf	___lwdiv@divisor+1,w
  3721     0761  1903               	btfsc	3,2
  3722     0762  2F64               	goto	u1711
  3723     0763  2F65               	goto	u1710
  3724     0764                     u1711:
  3725     0764  2F9C               	goto	l2221
  3726     0765                     u1710:
  3727     0765                     l2203:
  3728     0765  01D2               	clrf	___lwdiv@counter
  3729     0766  0AD2               	incf	___lwdiv@counter,f
  3730     0767  2F73               	goto	l2209
  3731     0768                     l2205:
  3732     0768  3001               	movlw	1
  3733     0769                     u1725:
  3734     0769  1003               	clrc
  3735     076A  0DF3               	rlf	___lwdiv@divisor,f
  3736     076B  0DF4               	rlf	___lwdiv@divisor+1,f
  3737     076C  3EFF               	addlw	-1
  3738     076D  1D03               	skipz
  3739     076E  2F69               	goto	u1725
  3740     076F                     l2207:
  3741     076F  3001               	movlw	1
  3742     0770  00F7               	movwf	??___lwdiv
  3743     0771  0877               	movf	??___lwdiv,w
  3744     0772  07D2               	addwf	___lwdiv@counter,f
  3745     0773                     l2209:
  3746     0773  1FF4               	btfss	___lwdiv@divisor+1,7
  3747     0774  2F76               	goto	u1731
  3748     0775  2F77               	goto	u1730
  3749     0776                     u1731:
  3750     0776  2F68               	goto	l2205
  3751     0777                     u1730:
  3752     0777                     l2211:
  3753     0777  3001               	movlw	1
  3754     0778                     u1745:
  3755     0778  1003               	clrc
  3756     0779  0DD3               	rlf	___lwdiv@quotient,f
  3757     077A  0DD4               	rlf	___lwdiv@quotient+1,f
  3758     077B  3EFF               	addlw	-1
  3759     077C  1D03               	skipz
  3760     077D  2F78               	goto	u1745
  3761     077E  0874               	movf	___lwdiv@divisor+1,w
  3762     077F  0276               	subwf	___lwdiv@dividend+1,w
  3763     0780  1D03               	skipz
  3764     0781  2F84               	goto	u1755
  3765     0782  0873               	movf	___lwdiv@divisor,w
  3766     0783  0275               	subwf	___lwdiv@dividend,w
  3767     0784                     u1755:
  3768     0784  1C03               	skipc
  3769     0785  2F87               	goto	u1751
  3770     0786  2F88               	goto	u1750
  3771     0787                     u1751:
  3772     0787  2F8F               	goto	l2217
  3773     0788                     u1750:
  3774     0788                     l2213:
  3775     0788  0873               	movf	___lwdiv@divisor,w
  3776     0789  02F5               	subwf	___lwdiv@dividend,f
  3777     078A  0874               	movf	___lwdiv@divisor+1,w
  3778     078B  1C03               	skipc
  3779     078C  03F6               	decf	___lwdiv@dividend+1,f
  3780     078D  02F6               	subwf	___lwdiv@dividend+1,f
  3781     078E                     l2215:
  3782     078E  1453               	bsf	___lwdiv@quotient,0
  3783     078F                     l2217:
  3784     078F  3001               	movlw	1
  3785     0790                     u1765:
  3786     0790  1003               	clrc
  3787     0791  0CF4               	rrf	___lwdiv@divisor+1,f
  3788     0792  0CF3               	rrf	___lwdiv@divisor,f
  3789     0793  3EFF               	addlw	-1
  3790     0794  1D03               	skipz
  3791     0795  2F90               	goto	u1765
  3792     0796                     l2219:
  3793     0796  3001               	movlw	1
  3794     0797  02D2               	subwf	___lwdiv@counter,f
  3795     0798  1D03               	btfss	3,2
  3796     0799  2F9B               	goto	u1771
  3797     079A  2F9C               	goto	u1770
  3798     079B                     u1771:
  3799     079B  2F77               	goto	l2211
  3800     079C                     u1770:
  3801     079C                     l2221:
  3802     079C  0854               	movf	___lwdiv@quotient+1,w
  3803     079D  00F4               	movwf	?___lwdiv+1
  3804     079E  0853               	movf	___lwdiv@quotient,w
  3805     079F  00F3               	movwf	?___lwdiv
  3806     07A0                     l679:
  3807     07A0  0008               	return
  3808     07A1                     __end_of___lwdiv:
  3809                           
  3810                           	psect	text12
  3811     0FC1                     __ptext12:	
  3812 ;; *************** function _escribir_reloj *****************
  3813 ;; Defined at:
  3814 ;;		line 373 in file "Master.c"
  3815 ;; Parameters:    Size  Location     Type
  3816 ;;  direccion       1    wreg     unsigned char 
  3817 ;;  valor           2   15[BANK0 ] unsigned int 
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;  direccion       1   19[BANK0 ] unsigned char 
  3820 ;; Return value:  Size  Location     Type
  3821 ;;                  1    wreg      void 
  3822 ;; Registers used:
  3823 ;;		wreg, status,2, status,0, pclath, cstack
  3824 ;; Tracked objects:
  3825 ;;		On entry : 0/0
  3826 ;;		On exit  : 0/0
  3827 ;;		Unchanged: 0/0
  3828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3829 ;;      Params:         0       2       0       0       0
  3830 ;;      Locals:         0       1       0       0       0
  3831 ;;      Temps:          0       2       0       0       0
  3832 ;;      Totals:         0       5       0       0       0
  3833 ;;Total ram usage:        5 bytes
  3834 ;; Hardware stack levels used: 1
  3835 ;; Hardware stack levels required when called: 3
  3836 ;; This function calls:
  3837 ;;		_I2C_Master_Start
  3838 ;;		_I2C_Master_Stop
  3839 ;;		_I2C_Master_Write
  3840 ;; This function is called by:
  3841 ;;		_main
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845     0FC1                     _escribir_reloj:	
  3846                           ;psect for function _escribir_reloj
  3847                           
  3848                           
  3849                           ;incstack = 0
  3850                           ; Regs used in _escribir_reloj: [wreg+status,2+status,0+pclath+cstack]
  3851                           ;escribir_reloj@direccion stored from wreg
  3852     0FC1  1283               	bcf	3,5	;RP0=0, select bank0
  3853     0FC2  1303               	bcf	3,6	;RP1=0, select bank0
  3854     0FC3  00E5               	movwf	escribir_reloj@direccion
  3855     0FC4                     l1769:
  3856                           
  3857                           ;Master.c: 374:     I2C_Master_Start();
  3858     0FC4  120A  158A  2627  120A  158A  	fcall	_I2C_Master_Start
  3859                           
  3860                           ;Master.c: 375:     I2C_Master_Write(ds3231_escribir);
  3861     0FC9  1283               	bcf	3,5	;RP0=0, select bank0
  3862     0FCA  1303               	bcf	3,6	;RP1=0, select bank0
  3863     0FCB  082E               	movf	_ds3231_escribir,w
  3864     0FCC  00E3               	movwf	??_escribir_reloj
  3865     0FCD  01E4               	clrf	??_escribir_reloj+1
  3866     0FCE  0863               	movf	??_escribir_reloj,w
  3867     0FCF  00F3               	movwf	I2C_Master_Write@d
  3868     0FD0  0864               	movf	??_escribir_reloj+1,w
  3869     0FD1  00F4               	movwf	I2C_Master_Write@d+1
  3870     0FD2  120A  158A  2642  120A  158A  	fcall	_I2C_Master_Write
  3871                           
  3872                           ;Master.c: 376:     I2C_Master_Write(direccion);
  3873     0FD7  1283               	bcf	3,5	;RP0=0, select bank0
  3874     0FD8  1303               	bcf	3,6	;RP1=0, select bank0
  3875     0FD9  0865               	movf	escribir_reloj@direccion,w
  3876     0FDA  00E3               	movwf	??_escribir_reloj
  3877     0FDB  01E4               	clrf	??_escribir_reloj+1
  3878     0FDC  0863               	movf	??_escribir_reloj,w
  3879     0FDD  00F3               	movwf	I2C_Master_Write@d
  3880     0FDE  0864               	movf	??_escribir_reloj+1,w
  3881     0FDF  00F4               	movwf	I2C_Master_Write@d+1
  3882     0FE0  120A  158A  2642  120A  158A  	fcall	_I2C_Master_Write
  3883                           
  3884                           ;Master.c: 377:     I2C_Master_Write(valor);
  3885     0FE5  1283               	bcf	3,5	;RP0=0, select bank0
  3886     0FE6  1303               	bcf	3,6	;RP1=0, select bank0
  3887     0FE7  0862               	movf	escribir_reloj@valor+1,w
  3888     0FE8  00F4               	movwf	I2C_Master_Write@d+1
  3889     0FE9  0861               	movf	escribir_reloj@valor,w
  3890     0FEA  00F3               	movwf	I2C_Master_Write@d
  3891     0FEB  120A  158A  2642  120A  158A  	fcall	_I2C_Master_Write
  3892                           
  3893                           ;Master.c: 378:     I2C_Master_Stop();
  3894     0FF0  120A  158A  2630  120A  158A  	fcall	_I2C_Master_Stop
  3895     0FF5                     l1771:
  3896                           
  3897                           ;Master.c: 379:     _delay((unsigned long)((50)*(8000000/4000.0)));
  3898     0FF5  3082               	movlw	130
  3899     0FF6  1283               	bcf	3,5	;RP0=0, select bank0
  3900     0FF7  1303               	bcf	3,6	;RP1=0, select bank0
  3901     0FF8  00E4               	movwf	??_escribir_reloj+1
  3902     0FF9  30DD               	movlw	221
  3903     0FFA  00E3               	movwf	??_escribir_reloj
  3904     0FFB                     u2327:
  3905     0FFB  0BE3               	decfsz	??_escribir_reloj,f
  3906     0FFC  2FFB               	goto	u2327
  3907     0FFD  0BE4               	decfsz	??_escribir_reloj+1,f
  3908     0FFE  2FFB               	goto	u2327
  3909     0FFF                     l251:
  3910     0FFF  0008               	return
  3911     1000                     __end_of_escribir_reloj:
  3912                           
  3913                           	psect	text13
  3914     0E42                     __ptext13:	
  3915 ;; *************** function _I2C_Master_Write *****************
  3916 ;; Defined at:
  3917 ;;		line 66 in file "I2C.c"
  3918 ;; Parameters:    Size  Location     Type
  3919 ;;  d               2    3[COMMON] unsigned int 
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;		None
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  1    wreg      void 
  3924 ;; Registers used:
  3925 ;;		wreg, status,2, status,0, pclath, cstack
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3931 ;;      Params:         2       0       0       0       0
  3932 ;;      Locals:         0       0       0       0       0
  3933 ;;      Temps:          0       0       0       0       0
  3934 ;;      Totals:         2       0       0       0       0
  3935 ;;Total ram usage:        2 bytes
  3936 ;; Hardware stack levels used: 1
  3937 ;; Hardware stack levels required when called: 2
  3938 ;; This function calls:
  3939 ;;		_I2C_Master_Wait
  3940 ;; This function is called by:
  3941 ;;		_main
  3942 ;;		_escribir_reloj
  3943 ;;		_leer_reloj
  3944 ;; This function uses a non-reentrant model
  3945 ;;
  3946                           
  3947     0E42                     _I2C_Master_Write:	
  3948                           ;psect for function _I2C_Master_Write
  3949                           
  3950     0E42                     l1587:	
  3951                           ;incstack = 0
  3952                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3953                           
  3954                           
  3955                           ;I2C.c: 66: void I2C_Master_Write(unsigned d);I2C.c: 67: {;I2C.c: 68:     I2C_Master_Wai
      +                          t();
  3956     0E42  120A  158A  2659  120A  158A  	fcall	_I2C_Master_Wait
  3957     0E47                     l1589:
  3958                           
  3959                           ;I2C.c: 69:     SSPBUF = d;
  3960     0E47  0873               	movf	I2C_Master_Write@d,w
  3961     0E48  1283               	bcf	3,5	;RP0=0, select bank0
  3962     0E49  1303               	bcf	3,6	;RP1=0, select bank0
  3963     0E4A  0093               	movwf	19	;volatile
  3964     0E4B                     l47:
  3965     0E4B  0008               	return
  3966     0E4C                     __end_of_I2C_Master_Write:
  3967                           
  3968                           	psect	text14
  3969     0E30                     __ptext14:	
  3970 ;; *************** function _I2C_Master_Stop *****************
  3971 ;; Defined at:
  3972 ;;		line 56 in file "I2C.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;		None
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;		None
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  1    wreg      void 
  3979 ;; Registers used:
  3980 ;;		wreg, status,2, status,0, pclath, cstack
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3986 ;;      Params:         0       0       0       0       0
  3987 ;;      Locals:         0       0       0       0       0
  3988 ;;      Temps:          0       0       0       0       0
  3989 ;;      Totals:         0       0       0       0       0
  3990 ;;Total ram usage:        0 bytes
  3991 ;; Hardware stack levels used: 1
  3992 ;; Hardware stack levels required when called: 2
  3993 ;; This function calls:
  3994 ;;		_I2C_Master_Wait
  3995 ;; This function is called by:
  3996 ;;		_main
  3997 ;;		_escribir_reloj
  3998 ;;		_leer_reloj
  3999 ;; This function uses a non-reentrant model
  4000 ;;
  4001                           
  4002     0E30                     _I2C_Master_Stop:	
  4003                           ;psect for function _I2C_Master_Stop
  4004                           
  4005     0E30                     l1583:	
  4006                           ;incstack = 0
  4007                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4008                           
  4009                           
  4010                           ;I2C.c: 58:     I2C_Master_Wait();
  4011     0E30  120A  158A  2659  120A  158A  	fcall	_I2C_Master_Wait
  4012     0E35                     l1585:
  4013                           
  4014                           ;I2C.c: 59:     SSPCON2bits.PEN = 1;
  4015     0E35  1683               	bsf	3,5	;RP0=1, select bank1
  4016     0E36  1303               	bcf	3,6	;RP1=0, select bank1
  4017     0E37  1511               	bsf	17,2	;volatile
  4018     0E38                     l44:
  4019     0E38  0008               	return
  4020     0E39                     __end_of_I2C_Master_Stop:
  4021                           
  4022                           	psect	text15
  4023     0E27                     __ptext15:	
  4024 ;; *************** function _I2C_Master_Start *****************
  4025 ;; Defined at:
  4026 ;;		line 40 in file "I2C.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;		None
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;		None
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  1    wreg      void 
  4033 ;; Registers used:
  4034 ;;		wreg, status,2, status,0, pclath, cstack
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4040 ;;      Params:         0       0       0       0       0
  4041 ;;      Locals:         0       0       0       0       0
  4042 ;;      Temps:          0       0       0       0       0
  4043 ;;      Totals:         0       0       0       0       0
  4044 ;;Total ram usage:        0 bytes
  4045 ;; Hardware stack levels used: 1
  4046 ;; Hardware stack levels required when called: 2
  4047 ;; This function calls:
  4048 ;;		_I2C_Master_Wait
  4049 ;; This function is called by:
  4050 ;;		_main
  4051 ;;		_escribir_reloj
  4052 ;;		_leer_reloj
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056     0E27                     _I2C_Master_Start:	
  4057                           ;psect for function _I2C_Master_Start
  4058                           
  4059     0E27                     l1575:	
  4060                           ;incstack = 0
  4061                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4062                           
  4063                           
  4064                           ;I2C.c: 42:     I2C_Master_Wait();
  4065     0E27  120A  158A  2659  120A  158A  	fcall	_I2C_Master_Wait
  4066     0E2C                     l1577:
  4067                           
  4068                           ;I2C.c: 43:     SSPCON2bits.SEN = 1;
  4069     0E2C  1683               	bsf	3,5	;RP0=1, select bank1
  4070     0E2D  1303               	bcf	3,6	;RP1=0, select bank1
  4071     0E2E  1411               	bsf	17,0	;volatile
  4072     0E2F                     l38:
  4073     0E2F  0008               	return
  4074     0E30                     __end_of_I2C_Master_Start:
  4075                           
  4076                           	psect	text16
  4077     0E59                     __ptext16:	
  4078 ;; *************** function _I2C_Master_Wait *****************
  4079 ;; Defined at:
  4080 ;;		line 33 in file "I2C.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;		None
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;		None
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  1    wreg      void 
  4087 ;; Registers used:
  4088 ;;		wreg, status,2
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4094 ;;      Params:         0       0       0       0       0
  4095 ;;      Locals:         0       0       0       0       0
  4096 ;;      Temps:          0       0       0       0       0
  4097 ;;      Totals:         0       0       0       0       0
  4098 ;;Total ram usage:        0 bytes
  4099 ;; Hardware stack levels used: 1
  4100 ;; Hardware stack levels required when called: 1
  4101 ;; This function calls:
  4102 ;;		Nothing
  4103 ;; This function is called by:
  4104 ;;		_I2C_Master_Start
  4105 ;;		_I2C_Master_RepeatedStart
  4106 ;;		_I2C_Master_Stop
  4107 ;;		_I2C_Master_Write
  4108 ;;		_I2C_Master_Read
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112     0E59                     _I2C_Master_Wait:	
  4113                           ;psect for function _I2C_Master_Wait
  4114                           
  4115     0E59                     l1533:	
  4116                           ;incstack = 0
  4117                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4118                           
  4119     0E59                     l32:	
  4120                           ;I2C.c: 35:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4121                           
  4122     0E59  1683               	bsf	3,5	;RP0=1, select bank1
  4123     0E5A  1303               	bcf	3,6	;RP1=0, select bank1
  4124     0E5B  1914               	btfsc	20,2	;volatile
  4125     0E5C  2E5E               	goto	u821
  4126     0E5D  2E5F               	goto	u820
  4127     0E5E                     u821:
  4128     0E5E  2E59               	goto	l32
  4129     0E5F                     u820:
  4130     0E5F                     l1535:
  4131     0E5F  0811               	movf	17,w	;volatile
  4132     0E60  391F               	andlw	31
  4133     0E61  1D03               	btfss	3,2
  4134     0E62  2E64               	goto	u831
  4135     0E63  2E65               	goto	u830
  4136     0E64                     u831:
  4137     0E64  2E59               	goto	l32
  4138     0E65                     u830:
  4139     0E65                     l35:
  4140     0E65  0008               	return
  4141     0E66                     __end_of_I2C_Master_Wait:
  4142                           
  4143                           	psect	text17
  4144     0E7B                     __ptext17:	
  4145 ;; *************** function _bcd_a_decimal *****************
  4146 ;; Defined at:
  4147 ;;		line 355 in file "Master.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;  bcd             1    wreg     unsigned char 
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;  bcd             1    9[COMMON] unsigned char 
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  1    wreg      unsigned char 
  4154 ;; Registers used:
  4155 ;;		wreg, status,2, status,0, pclath, cstack
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4161 ;;      Params:         0       0       0       0       0
  4162 ;;      Locals:         1       0       0       0       0
  4163 ;;      Temps:          2       0       0       0       0
  4164 ;;      Totals:         3       0       0       0       0
  4165 ;;Total ram usage:        3 bytes
  4166 ;; Hardware stack levels used: 1
  4167 ;; Hardware stack levels required when called: 2
  4168 ;; This function calls:
  4169 ;;		___bmul
  4170 ;; This function is called by:
  4171 ;;		_main
  4172 ;; This function uses a non-reentrant model
  4173 ;;
  4174                           
  4175     0E7B                     _bcd_a_decimal:	
  4176                           ;psect for function _bcd_a_decimal
  4177                           
  4178                           
  4179                           ;incstack = 0
  4180                           ; Regs used in _bcd_a_decimal: [wreg+status,2+status,0+pclath+cstack]
  4181                           ;bcd_a_decimal@bcd stored from wreg
  4182     0E7B  00F9               	movwf	bcd_a_decimal@bcd
  4183     0E7C                     l1793:
  4184                           
  4185                           ;Master.c: 356:     return ((bcd>>4)*10)+(bcd & 0x0F);
  4186     0E7C  300F               	movlw	15
  4187     0E7D  0579               	andwf	bcd_a_decimal@bcd,w
  4188     0E7E  00F7               	movwf	??_bcd_a_decimal
  4189     0E7F  300A               	movlw	10
  4190     0E80  00F3               	movwf	___bmul@multiplicand
  4191     0E81  0879               	movf	bcd_a_decimal@bcd,w
  4192     0E82  00F8               	movwf	??_bcd_a_decimal+1
  4193     0E83  3004               	movlw	4
  4194     0E84                     u1145:
  4195     0E84  1003               	clrc
  4196     0E85  0CF8               	rrf	??_bcd_a_decimal+1,f
  4197     0E86  3EFF               	addlw	-1
  4198     0E87  1D03               	skipz
  4199     0E88  2E84               	goto	u1145
  4200     0E89  0878               	movf	??_bcd_a_decimal+1,w
  4201     0E8A  120A  158A  2666  120A  158A  	fcall	___bmul
  4202     0E8F  0777               	addwf	??_bcd_a_decimal,w
  4203     0E90                     l242:
  4204     0E90  0008               	return
  4205     0E91                     __end_of_bcd_a_decimal:
  4206                           
  4207                           	psect	text18
  4208     0E66                     __ptext18:	
  4209 ;; *************** function ___bmul *****************
  4210 ;; Defined at:
  4211 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  multiplier      1    wreg     unsigned char 
  4214 ;;  multiplicand    1    3[COMMON] unsigned char 
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;  multiplier      1    6[COMMON] unsigned char 
  4217 ;;  product         1    5[COMMON] unsigned char 
  4218 ;; Return value:  Size  Location     Type
  4219 ;;                  1    wreg      unsigned char 
  4220 ;; Registers used:
  4221 ;;		wreg, status,2, status,0
  4222 ;; Tracked objects:
  4223 ;;		On entry : 0/0
  4224 ;;		On exit  : 0/0
  4225 ;;		Unchanged: 0/0
  4226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4227 ;;      Params:         1       0       0       0       0
  4228 ;;      Locals:         2       0       0       0       0
  4229 ;;      Temps:          1       0       0       0       0
  4230 ;;      Totals:         4       0       0       0       0
  4231 ;;Total ram usage:        4 bytes
  4232 ;; Hardware stack levels used: 1
  4233 ;; Hardware stack levels required when called: 1
  4234 ;; This function calls:
  4235 ;;		Nothing
  4236 ;; This function is called by:
  4237 ;;		_bcd_a_decimal
  4238 ;; This function uses a non-reentrant model
  4239 ;;
  4240                           
  4241     0E66                     ___bmul:	
  4242                           ;psect for function ___bmul
  4243                           
  4244                           
  4245                           ;incstack = 0
  4246                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4247                           ;___bmul@multiplier stored from wreg
  4248     0E66  00F6               	movwf	___bmul@multiplier
  4249     0E67                     l1643:
  4250     0E67  01F5               	clrf	___bmul@product
  4251     0E68                     l1645:
  4252     0E68  1C76               	btfss	___bmul@multiplier,0
  4253     0E69  2E6B               	goto	u971
  4254     0E6A  2E6C               	goto	u970
  4255     0E6B                     u971:
  4256     0E6B  2E70               	goto	l1649
  4257     0E6C                     u970:
  4258     0E6C                     l1647:
  4259     0E6C  0873               	movf	___bmul@multiplicand,w
  4260     0E6D  00F4               	movwf	??___bmul
  4261     0E6E  0874               	movf	??___bmul,w
  4262     0E6F  07F5               	addwf	___bmul@product,f
  4263     0E70                     l1649:
  4264     0E70  1003               	clrc
  4265     0E71  0DF3               	rlf	___bmul@multiplicand,f
  4266     0E72                     l1651:
  4267     0E72  1003               	clrc
  4268     0E73  0CF6               	rrf	___bmul@multiplier,f
  4269     0E74  0876               	movf	___bmul@multiplier,w
  4270     0E75  1D03               	btfss	3,2
  4271     0E76  2E78               	goto	u981
  4272     0E77  2E79               	goto	u980
  4273     0E78                     u981:
  4274     0E78  2E68               	goto	l1645
  4275     0E79                     u980:
  4276     0E79                     l1653:
  4277     0E79  0875               	movf	___bmul@product,w
  4278     0E7A                     l433:
  4279     0E7A  0008               	return
  4280     0E7B                     __end_of___bmul:
  4281                           
  4282                           	psect	text19
  4283     07A1                     __ptext19:	
  4284 ;; *************** function _Lcd_Write_String8 *****************
  4285 ;; Defined at:
  4286 ;;		line 75 in file "LCD8bits.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;  a               2    7[COMMON] PTR unsigned char 
  4289 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
  4290 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
  4291 ;;		 -> STR_11(2), STR_10(3), STR_9(4), STR_8(4), 
  4292 ;;		 -> Biciesto(5), Mes(5), Dia(5), Hora(5), 
  4293 ;;		 -> Minuto(5), Segundo(5), CadADC(5), 
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;  i               2    3[BANK0 ] int 
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  1    wreg      void 
  4298 ;; Registers used:
  4299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4305 ;;      Params:         2       0       0       0       0
  4306 ;;      Locals:         0       2       0       0       0
  4307 ;;      Temps:          0       3       0       0       0
  4308 ;;      Totals:         2       5       0       0       0
  4309 ;;Total ram usage:        7 bytes
  4310 ;; Hardware stack levels used: 1
  4311 ;; Hardware stack levels required when called: 3
  4312 ;; This function calls:
  4313 ;;		_Lcd_Write_Char8
  4314 ;; This function is called by:
  4315 ;;		_main
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319     07A1                     _Lcd_Write_String8:	
  4320                           ;psect for function _Lcd_Write_String8
  4321                           
  4322     07A1                     l2405:	
  4323                           ;incstack = 0
  4324                           ; Regs used in _Lcd_Write_String8: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4325                           
  4326                           
  4327                           ;LCD8bits.c: 76:     int i;;LCD8bits.c: 77:     for (i = 0; a[i] != '\0'; i++)
  4328     07A1  1283               	bcf	3,5	;RP0=0, select bank0
  4329     07A2  1303               	bcf	3,6	;RP1=0, select bank0
  4330     07A3  01D5               	clrf	Lcd_Write_String8@i
  4331     07A4  01D6               	clrf	Lcd_Write_String8@i+1
  4332     07A5  2FCA               	goto	l2411
  4333     07A6                     l2407:
  4334                           
  4335                           ;LCD8bits.c: 78:         Lcd_Write_Char8(a[i]);
  4336     07A6  0855               	movf	Lcd_Write_String8@i,w
  4337     07A7  0777               	addwf	Lcd_Write_String8@a,w
  4338     07A8  00D3               	movwf	??_Lcd_Write_String8+1
  4339     07A9  0878               	movf	Lcd_Write_String8@a+1,w
  4340     07AA  00D2               	movwf	??_Lcd_Write_String8
  4341     07AB  1803               	skipnc
  4342     07AC  0AD2               	incf	??_Lcd_Write_String8,f
  4343     07AD  1FD5               	btfss	Lcd_Write_String8@i,7
  4344     07AE  2FB0               	goto	u1950
  4345     07AF  03D2               	decf	??_Lcd_Write_String8,f
  4346     07B0                     u1950:
  4347     07B0  1283               	bcf	3,5	;RP0=0, select bank0
  4348     07B1  1303               	bcf	3,6	;RP1=0, select bank0
  4349     07B2  0852               	movf	??_Lcd_Write_String8,w
  4350     07B3  00D4               	movwf	??_Lcd_Write_String8+2
  4351     07B4  0854               	movf	??_Lcd_Write_String8+2,w
  4352     07B5  00FF               	movwf	btemp+1
  4353     07B6  0853               	movf	??_Lcd_Write_String8+1,w
  4354     07B7  0084               	movwf	4
  4355     07B8  120A  158A  2000  120A  118A  	fcall	stringtab
  4356     07BD  120A  118A  27E7  120A  118A  	fcall	_Lcd_Write_Char8
  4357     07C2                     l2409:
  4358     07C2  3001               	movlw	1
  4359     07C3  1283               	bcf	3,5	;RP0=0, select bank0
  4360     07C4  1303               	bcf	3,6	;RP1=0, select bank0
  4361     07C5  07D5               	addwf	Lcd_Write_String8@i,f
  4362     07C6  1803               	skipnc
  4363     07C7  0AD6               	incf	Lcd_Write_String8@i+1,f
  4364     07C8  3000               	movlw	0
  4365     07C9  07D6               	addwf	Lcd_Write_String8@i+1,f
  4366     07CA                     l2411:
  4367     07CA  0855               	movf	Lcd_Write_String8@i,w
  4368     07CB  0777               	addwf	Lcd_Write_String8@a,w
  4369     07CC  00D3               	movwf	??_Lcd_Write_String8+1
  4370     07CD  0878               	movf	Lcd_Write_String8@a+1,w
  4371     07CE  00D2               	movwf	??_Lcd_Write_String8
  4372     07CF  1803               	skipnc
  4373     07D0  0AD2               	incf	??_Lcd_Write_String8,f
  4374     07D1  1FD5               	btfss	Lcd_Write_String8@i,7
  4375     07D2  2FD4               	goto	u1960
  4376     07D3  03D2               	decf	??_Lcd_Write_String8,f
  4377     07D4                     u1960:
  4378     07D4  1283               	bcf	3,5	;RP0=0, select bank0
  4379     07D5  1303               	bcf	3,6	;RP1=0, select bank0
  4380     07D6  0852               	movf	??_Lcd_Write_String8,w
  4381     07D7  00D4               	movwf	??_Lcd_Write_String8+2
  4382     07D8  0854               	movf	??_Lcd_Write_String8+2,w
  4383     07D9  00FF               	movwf	btemp+1
  4384     07DA  0853               	movf	??_Lcd_Write_String8+1,w
  4385     07DB  0084               	movwf	4
  4386     07DC  120A  158A  2000  120A  118A  	fcall	stringtab
  4387     07E1  3A00               	xorlw	0
  4388     07E2  1D03               	skipz
  4389     07E3  2FE5               	goto	u1971
  4390     07E4  2FE6               	goto	u1970
  4391     07E5                     u1971:
  4392     07E5  2FA6               	goto	l2407
  4393     07E6                     u1970:
  4394     07E6                     l287:
  4395     07E6  0008               	return
  4396     07E7                     __end_of_Lcd_Write_String8:
  4397                           
  4398                           	psect	text20
  4399     07E7                     __ptext20:	
  4400 ;; *************** function _Lcd_Write_Char8 *****************
  4401 ;; Defined at:
  4402 ;;		line 63 in file "LCD8bits.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;  a               1    wreg     unsigned char 
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;  a               1    6[COMMON] unsigned char 
  4407 ;;  y               1    5[COMMON] unsigned char 
  4408 ;;  temp            1    0        unsigned char 
  4409 ;; Return value:  Size  Location     Type
  4410 ;;                  1    wreg      void 
  4411 ;; Registers used:
  4412 ;;		wreg, status,2, status,0, pclath, cstack
  4413 ;; Tracked objects:
  4414 ;;		On entry : 0/0
  4415 ;;		On exit  : 0/0
  4416 ;;		Unchanged: 0/0
  4417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4418 ;;      Params:         0       0       0       0       0
  4419 ;;      Locals:         2       0       0       0       0
  4420 ;;      Temps:          1       0       0       0       0
  4421 ;;      Totals:         3       0       0       0       0
  4422 ;;Total ram usage:        3 bytes
  4423 ;; Hardware stack levels used: 1
  4424 ;; Hardware stack levels required when called: 2
  4425 ;; This function calls:
  4426 ;;		_Lcd_Port8
  4427 ;; This function is called by:
  4428 ;;		_Lcd_Write_String8
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432     07E7                     _Lcd_Write_Char8:	
  4433                           ;psect for function _Lcd_Write_Char8
  4434                           
  4435                           
  4436                           ;incstack = 0
  4437                           ; Regs used in _Lcd_Write_Char8: [wreg+status,2+status,0+pclath+cstack]
  4438                           ;Lcd_Write_Char8@a stored from wreg
  4439     07E7  00F6               	movwf	Lcd_Write_Char8@a
  4440     07E8                     l2187:
  4441                           
  4442                           ;LCD8bits.c: 66:     y = a;
  4443     07E8  0876               	movf	Lcd_Write_Char8@a,w
  4444     07E9  00F5               	movwf	Lcd_Write_Char8@y
  4445     07EA                     l2189:
  4446                           
  4447                           ;LCD8bits.c: 67:     PORTEbits.RE0 = 1;
  4448     07EA  1283               	bcf	3,5	;RP0=0, select bank0
  4449     07EB  1303               	bcf	3,6	;RP1=0, select bank0
  4450     07EC  1409               	bsf	9,0	;volatile
  4451     07ED                     l2191:
  4452                           
  4453                           ;LCD8bits.c: 68:     Lcd_Port8(y);
  4454     07ED  0875               	movf	Lcd_Write_Char8@y,w
  4455     07EE  120A  158A  2613  120A  118A  	fcall	_Lcd_Port8
  4456     07F3                     l2193:
  4457                           
  4458                           ;LCD8bits.c: 69:     PORTEbits.RE1 = 1;
  4459     07F3  1283               	bcf	3,5	;RP0=0, select bank0
  4460     07F4  1303               	bcf	3,6	;RP1=0, select bank0
  4461     07F5  1489               	bsf	9,1	;volatile
  4462     07F6                     l2195:
  4463                           
  4464                           ;LCD8bits.c: 70:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4465     07F6  301A               	movlw	26
  4466     07F7  00F4               	movwf	??_Lcd_Write_Char8
  4467     07F8                     u2337:
  4468     07F8  0BF4               	decfsz	??_Lcd_Write_Char8,f
  4469     07F9  2FF8               	goto	u2337
  4470     07FA  0000               	nop
  4471     07FB                     l2197:
  4472                           
  4473                           ;LCD8bits.c: 71:     PORTEbits.RE1 = 0;
  4474     07FB  1283               	bcf	3,5	;RP0=0, select bank0
  4475     07FC  1303               	bcf	3,6	;RP1=0, select bank0
  4476     07FD  1089               	bcf	9,1	;volatile
  4477     07FE                     l281:
  4478     07FE  0008               	return
  4479     07FF                     __end_of_Lcd_Write_Char8:
  4480                           
  4481                           	psect	text21
  4482     0EAB                     __ptext21:	
  4483 ;; *************** function _Lcd_Set_Cursor8 *****************
  4484 ;; Defined at:
  4485 ;;		line 33 in file "LCD8bits.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  a               1    wreg     unsigned char 
  4488 ;;  b               1    7[COMMON] unsigned char 
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;  a               1    8[COMMON] unsigned char 
  4491 ;;  temp            1    9[COMMON] unsigned char 
  4492 ;;  y               1    0        unsigned char 
  4493 ;;  z               1    0        unsigned char 
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  1    wreg      void 
  4496 ;; Registers used:
  4497 ;;		wreg, status,2, status,0, pclath, cstack
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4503 ;;      Params:         1       0       0       0       0
  4504 ;;      Locals:         2       0       0       0       0
  4505 ;;      Temps:          0       0       0       0       0
  4506 ;;      Totals:         3       0       0       0       0
  4507 ;;Total ram usage:        3 bytes
  4508 ;; Hardware stack levels used: 1
  4509 ;; Hardware stack levels required when called: 3
  4510 ;; This function calls:
  4511 ;;		_Lcd_Cmd8
  4512 ;; This function is called by:
  4513 ;;		_main
  4514 ;; This function uses a non-reentrant model
  4515 ;;
  4516                           
  4517     0EAB                     _Lcd_Set_Cursor8:	
  4518                           ;psect for function _Lcd_Set_Cursor8
  4519                           
  4520                           
  4521                           ;incstack = 0
  4522                           ; Regs used in _Lcd_Set_Cursor8: [wreg+status,2+status,0+pclath+cstack]
  4523                           ;Lcd_Set_Cursor8@a stored from wreg
  4524     0EAB  00F8               	movwf	Lcd_Set_Cursor8@a
  4525     0EAC                     l2393:
  4526                           
  4527                           ;LCD8bits.c: 34:     char temp, z, y;;LCD8bits.c: 35:     if (a == 1) {
  4528     0EAC  0378               	decf	Lcd_Set_Cursor8@a,w
  4529     0EAD  1D03               	btfss	3,2
  4530     0EAE  2EB0               	goto	u1931
  4531     0EAF  2EB1               	goto	u1930
  4532     0EB0                     u1931:
  4533     0EB0  2EBB               	goto	l2399
  4534     0EB1                     u1930:
  4535     0EB1                     l2395:
  4536                           
  4537                           ;LCD8bits.c: 36:         temp = 0x80 + b - 1;
  4538     0EB1  0877               	movf	Lcd_Set_Cursor8@b,w
  4539     0EB2  3E7F               	addlw	127
  4540     0EB3  00F9               	movwf	Lcd_Set_Cursor8@temp
  4541     0EB4                     l2397:
  4542                           
  4543                           ;LCD8bits.c: 37:         Lcd_Cmd8(temp);
  4544     0EB4  0879               	movf	Lcd_Set_Cursor8@temp,w
  4545     0EB5  120A  158A  2691  120A  158A  	fcall	_Lcd_Cmd8
  4546                           
  4547                           ;LCD8bits.c: 38:     } else if (a == 2) {
  4548     0EBA  2ECA               	goto	l275
  4549     0EBB                     l2399:
  4550     0EBB  3002               	movlw	2
  4551     0EBC  0678               	xorwf	Lcd_Set_Cursor8@a,w
  4552     0EBD  1D03               	btfss	3,2
  4553     0EBE  2EC0               	goto	u1941
  4554     0EBF  2EC1               	goto	u1940
  4555     0EC0                     u1941:
  4556     0EC0  2ECA               	goto	l275
  4557     0EC1                     u1940:
  4558     0EC1                     l2401:
  4559                           
  4560                           ;LCD8bits.c: 39:         temp = 0xC0 + b - 1;
  4561     0EC1  0877               	movf	Lcd_Set_Cursor8@b,w
  4562     0EC2  3EBF               	addlw	191
  4563     0EC3  00F9               	movwf	Lcd_Set_Cursor8@temp
  4564     0EC4                     l2403:
  4565                           
  4566                           ;LCD8bits.c: 40:         Lcd_Cmd8(temp);
  4567     0EC4  0879               	movf	Lcd_Set_Cursor8@temp,w
  4568     0EC5  120A  158A  2691  120A  158A  	fcall	_Lcd_Cmd8
  4569     0ECA                     l275:
  4570     0ECA  0008               	return
  4571     0ECB                     __end_of_Lcd_Set_Cursor8:
  4572                           
  4573                           	psect	text22
  4574     0710                     __ptext22:	
  4575 ;; *************** function _Lcd_Init8 *****************
  4576 ;; Defined at:
  4577 ;;		line 44 in file "LCD8bits.c"
  4578 ;; Parameters:    Size  Location     Type
  4579 ;;		None
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;		None
  4582 ;; Return value:  Size  Location     Type
  4583 ;;                  1    wreg      void 
  4584 ;; Registers used:
  4585 ;;		wreg, status,2, status,0, pclath, cstack
  4586 ;; Tracked objects:
  4587 ;;		On entry : 0/0
  4588 ;;		On exit  : 0/0
  4589 ;;		Unchanged: 0/0
  4590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4591 ;;      Params:         0       0       0       0       0
  4592 ;;      Locals:         0       0       0       0       0
  4593 ;;      Temps:          2       0       0       0       0
  4594 ;;      Totals:         2       0       0       0       0
  4595 ;;Total ram usage:        2 bytes
  4596 ;; Hardware stack levels used: 1
  4597 ;; Hardware stack levels required when called: 3
  4598 ;; This function calls:
  4599 ;;		_Lcd_Cmd8
  4600 ;;		_Lcd_Port8
  4601 ;; This function is called by:
  4602 ;;		_main
  4603 ;; This function uses a non-reentrant model
  4604 ;;
  4605                           
  4606     0710                     _Lcd_Init8:	
  4607                           ;psect for function _Lcd_Init8
  4608                           
  4609     0710                     l2283:	
  4610                           ;incstack = 0
  4611                           ; Regs used in _Lcd_Init8: [wreg+status,2+status,0+pclath+cstack]
  4612                           
  4613                           
  4614                           ;LCD8bits.c: 45:     Lcd_Port8(0x00);
  4615     0710  3000               	movlw	0
  4616     0711  120A  158A  2613  120A  118A  	fcall	_Lcd_Port8
  4617     0716                     l2285:
  4618                           
  4619                           ;LCD8bits.c: 46:     _delay((unsigned long)((20)*(8000000/4000.0)));
  4620     0716  3034               	movlw	52
  4621     0717  00F8               	movwf	??_Lcd_Init8+1
  4622     0718  30F1               	movlw	241
  4623     0719  00F7               	movwf	??_Lcd_Init8
  4624     071A                     u2347:
  4625     071A  0BF7               	decfsz	??_Lcd_Init8,f
  4626     071B  2F1A               	goto	u2347
  4627     071C  0BF8               	decfsz	??_Lcd_Init8+1,f
  4628     071D  2F1A               	goto	u2347
  4629     071E  2F1F               	nop2
  4630     071F                     l2287:
  4631                           
  4632                           ;LCD8bits.c: 47:     Lcd_Cmd8(0x30);
  4633     071F  3030               	movlw	48
  4634     0720  120A  158A  2691  120A  118A  	fcall	_Lcd_Cmd8
  4635                           
  4636                           ;LCD8bits.c: 48:     _delay((unsigned long)((5)*(8000000/4000.0)));
  4637     0725  300D               	movlw	13
  4638     0726  00F8               	movwf	??_Lcd_Init8+1
  4639     0727  30FB               	movlw	251
  4640     0728  00F7               	movwf	??_Lcd_Init8
  4641     0729                     u2357:
  4642     0729  0BF7               	decfsz	??_Lcd_Init8,f
  4643     072A  2F29               	goto	u2357
  4644     072B  0BF8               	decfsz	??_Lcd_Init8+1,f
  4645     072C  2F29               	goto	u2357
  4646     072D  2F2E               	nop2
  4647     072E                     l2289:
  4648                           
  4649                           ;LCD8bits.c: 49:     Lcd_Cmd8(0x30);
  4650     072E  3030               	movlw	48
  4651     072F  120A  158A  2691  120A  118A  	fcall	_Lcd_Cmd8
  4652     0734                     l2291:
  4653                           
  4654                           ;LCD8bits.c: 50:     _delay((unsigned long)((11)*(8000000/4000.0)));
  4655     0734  301D               	movlw	29
  4656     0735  00F8               	movwf	??_Lcd_Init8+1
  4657     0736  3091               	movlw	145
  4658     0737  00F7               	movwf	??_Lcd_Init8
  4659     0738                     u2367:
  4660     0738  0BF7               	decfsz	??_Lcd_Init8,f
  4661     0739  2F38               	goto	u2367
  4662     073A  0BF8               	decfsz	??_Lcd_Init8+1,f
  4663     073B  2F38               	goto	u2367
  4664                           
  4665                           ;LCD8bits.c: 51:     Lcd_Cmd8(0x30);
  4666     073C  3030               	movlw	48
  4667     073D  120A  158A  2691  120A  118A  	fcall	_Lcd_Cmd8
  4668                           
  4669                           ;LCD8bits.c: 53:     Lcd_Cmd8(0x3C);
  4670     0742  303C               	movlw	60
  4671     0743  120A  158A  2691  120A  118A  	fcall	_Lcd_Cmd8
  4672                           
  4673                           ;LCD8bits.c: 57:     Lcd_Cmd8(0x0C);
  4674     0748  300C               	movlw	12
  4675     0749  120A  158A  2691  120A  118A  	fcall	_Lcd_Cmd8
  4676                           
  4677                           ;LCD8bits.c: 58:     Lcd_Cmd8(0x01);
  4678     074E  3001               	movlw	1
  4679     074F  120A  158A  2691  120A  118A  	fcall	_Lcd_Cmd8
  4680                           
  4681                           ;LCD8bits.c: 60:     Lcd_Cmd8(0x06);
  4682     0754  3006               	movlw	6
  4683     0755  120A  158A  2691  120A  118A  	fcall	_Lcd_Cmd8
  4684     075A                     l278:
  4685     075A  0008               	return
  4686     075B                     __end_of_Lcd_Init8:
  4687                           
  4688                           	psect	text23
  4689     0E4C                     __ptext23:	
  4690 ;; *************** function _Lcd_Clear8 *****************
  4691 ;; Defined at:
  4692 ;;		line 28 in file "LCD8bits.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;		None
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;		None
  4697 ;; Return value:  Size  Location     Type
  4698 ;;                  1    wreg      void 
  4699 ;; Registers used:
  4700 ;;		wreg, status,2, status,0, pclath, cstack
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4706 ;;      Params:         0       0       0       0       0
  4707 ;;      Locals:         0       0       0       0       0
  4708 ;;      Temps:          0       0       0       0       0
  4709 ;;      Totals:         0       0       0       0       0
  4710 ;;Total ram usage:        0 bytes
  4711 ;; Hardware stack levels used: 1
  4712 ;; Hardware stack levels required when called: 3
  4713 ;; This function calls:
  4714 ;;		_Lcd_Cmd8
  4715 ;; This function is called by:
  4716 ;;		_main
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720     0E4C                     _Lcd_Clear8:	
  4721                           ;psect for function _Lcd_Clear8
  4722                           
  4723     0E4C                     l2293:	
  4724                           ;incstack = 0
  4725                           ; Regs used in _Lcd_Clear8: [wreg+status,2+status,0+pclath+cstack]
  4726                           
  4727                           
  4728                           ;LCD8bits.c: 29:     Lcd_Cmd8(0);
  4729     0E4C  3000               	movlw	0
  4730     0E4D  120A  158A  2691  120A  158A  	fcall	_Lcd_Cmd8
  4731                           
  4732                           ;LCD8bits.c: 30:     Lcd_Cmd8(1);
  4733     0E52  3001               	movlw	1
  4734     0E53  120A  158A  2691  120A  158A  	fcall	_Lcd_Cmd8
  4735     0E58                     l269:
  4736     0E58  0008               	return
  4737     0E59                     __end_of_Lcd_Clear8:
  4738                           
  4739                           	psect	text24
  4740     0E91                     __ptext24:	
  4741 ;; *************** function _Lcd_Cmd8 *****************
  4742 ;; Defined at:
  4743 ;;		line 20 in file "LCD8bits.c"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;  a               1    wreg     unsigned char 
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;  a               1    6[COMMON] unsigned char 
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  1    wreg      void 
  4750 ;; Registers used:
  4751 ;;		wreg, status,2, status,0, pclath, cstack
  4752 ;; Tracked objects:
  4753 ;;		On entry : 0/0
  4754 ;;		On exit  : 0/0
  4755 ;;		Unchanged: 0/0
  4756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4757 ;;      Params:         0       0       0       0       0
  4758 ;;      Locals:         1       0       0       0       0
  4759 ;;      Temps:          2       0       0       0       0
  4760 ;;      Totals:         3       0       0       0       0
  4761 ;;Total ram usage:        3 bytes
  4762 ;; Hardware stack levels used: 1
  4763 ;; Hardware stack levels required when called: 2
  4764 ;; This function calls:
  4765 ;;		_Lcd_Port8
  4766 ;; This function is called by:
  4767 ;;		_Lcd_Clear8
  4768 ;;		_Lcd_Set_Cursor8
  4769 ;;		_Lcd_Init8
  4770 ;;		_Lcd_Shift_Right8
  4771 ;;		_Lcd_Shift_Left8
  4772 ;; This function uses a non-reentrant model
  4773 ;;
  4774                           
  4775     0E91                     _Lcd_Cmd8:	
  4776                           ;psect for function _Lcd_Cmd8
  4777                           
  4778                           
  4779                           ;incstack = 0
  4780                           ; Regs used in _Lcd_Cmd8: [wreg+status,2+status,0+pclath+cstack]
  4781                           ;Lcd_Cmd8@a stored from wreg
  4782     0E91  00F6               	movwf	Lcd_Cmd8@a
  4783     0E92                     l2177:
  4784                           
  4785                           ;LCD8bits.c: 21:     PORTEbits.RE0 = 0;
  4786     0E92  1283               	bcf	3,5	;RP0=0, select bank0
  4787     0E93  1303               	bcf	3,6	;RP1=0, select bank0
  4788     0E94  1009               	bcf	9,0	;volatile
  4789     0E95                     l2179:
  4790                           
  4791                           ;LCD8bits.c: 22:     Lcd_Port8(a);
  4792     0E95  0876               	movf	Lcd_Cmd8@a,w
  4793     0E96  120A  158A  2613  120A  158A  	fcall	_Lcd_Port8
  4794     0E9B                     l2181:
  4795                           
  4796                           ;LCD8bits.c: 23:     PORTEbits.RE1 = 1;
  4797     0E9B  1283               	bcf	3,5	;RP0=0, select bank0
  4798     0E9C  1303               	bcf	3,6	;RP1=0, select bank0
  4799     0E9D  1489               	bsf	9,1	;volatile
  4800     0E9E                     l2183:
  4801                           
  4802                           ;LCD8bits.c: 24:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4803     0E9E  300B               	movlw	11
  4804     0E9F  00F5               	movwf	??_Lcd_Cmd8+1
  4805     0EA0  3062               	movlw	98
  4806     0EA1  00F4               	movwf	??_Lcd_Cmd8
  4807     0EA2                     u2377:
  4808     0EA2  0BF4               	decfsz	??_Lcd_Cmd8,f
  4809     0EA3  2EA2               	goto	u2377
  4810     0EA4  0BF5               	decfsz	??_Lcd_Cmd8+1,f
  4811     0EA5  2EA2               	goto	u2377
  4812     0EA6  0000               	nop
  4813     0EA7                     l2185:
  4814                           
  4815                           ;LCD8bits.c: 25:     PORTEbits.RE1 = 0;
  4816     0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  4817     0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  4818     0EA9  1089               	bcf	9,1	;volatile
  4819     0EAA                     l266:
  4820     0EAA  0008               	return
  4821     0EAB                     __end_of_Lcd_Cmd8:
  4822                           
  4823                           	psect	text25
  4824     0E13                     __ptext25:	
  4825 ;; *************** function _Lcd_Port8 *****************
  4826 ;; Defined at:
  4827 ;;		line 16 in file "LCD8bits.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;  a               1    wreg     unsigned char 
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;  a               1    3[COMMON] unsigned char 
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  1    wreg      void 
  4834 ;; Registers used:
  4835 ;;		wreg
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4841 ;;      Params:         0       0       0       0       0
  4842 ;;      Locals:         1       0       0       0       0
  4843 ;;      Temps:          0       0       0       0       0
  4844 ;;      Totals:         1       0       0       0       0
  4845 ;;Total ram usage:        1 bytes
  4846 ;; Hardware stack levels used: 1
  4847 ;; Hardware stack levels required when called: 1
  4848 ;; This function calls:
  4849 ;;		Nothing
  4850 ;; This function is called by:
  4851 ;;		_Lcd_Cmd8
  4852 ;;		_Lcd_Init8
  4853 ;;		_Lcd_Write_Char8
  4854 ;; This function uses a non-reentrant model
  4855 ;;
  4856                           
  4857     0E13                     _Lcd_Port8:	
  4858                           ;psect for function _Lcd_Port8
  4859                           
  4860                           
  4861                           ;incstack = 0
  4862                           ; Regs used in _Lcd_Port8: [wreg]
  4863                           ;Lcd_Port8@a stored from wreg
  4864     0E13  00F3               	movwf	Lcd_Port8@a
  4865     0E14                     l2139:
  4866                           
  4867                           ;LCD8bits.c: 17:     PORTD = a;
  4868     0E14  0873               	movf	Lcd_Port8@a,w
  4869     0E15  1283               	bcf	3,5	;RP0=0, select bank0
  4870     0E16  1303               	bcf	3,6	;RP1=0, select bank0
  4871     0E17  0088               	movwf	8	;volatile
  4872     0E18                     l263:
  4873     0E18  0008               	return
  4874     0E19                     __end_of_Lcd_Port8:
  4875                           
  4876                           	psect	text26
  4877     06C1                     __ptext26:	
  4878 ;; *************** function _isr *****************
  4879 ;; Defined at:
  4880 ;;		line 98 in file "Master.c"
  4881 ;; Parameters:    Size  Location     Type
  4882 ;;		None
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;		None
  4885 ;; Return value:  Size  Location     Type
  4886 ;;                  1    wreg      void 
  4887 ;; Registers used:
  4888 ;;		wreg, status,2, status,0
  4889 ;; Tracked objects:
  4890 ;;		On entry : 0/0
  4891 ;;		On exit  : 0/0
  4892 ;;		Unchanged: 0/0
  4893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4894 ;;      Params:         0       0       0       0       0
  4895 ;;      Locals:         0       0       0       0       0
  4896 ;;      Temps:          3       0       0       0       0
  4897 ;;      Totals:         3       0       0       0       0
  4898 ;;Total ram usage:        3 bytes
  4899 ;; Hardware stack levels used: 1
  4900 ;; This function calls:
  4901 ;;		Nothing
  4902 ;; This function is called by:
  4903 ;;		Interrupt level 1
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906                           
  4907     06C1                     _isr:	
  4908                           ;psect for function _isr
  4909                           
  4910     06C1                     i1l1879:
  4911                           
  4912                           ;Master.c: 99:     if(INTCONbits.RBIF){
  4913     06C1  1C0B               	btfss	11,0	;volatile
  4914     06C2  2EC4               	goto	u127_21
  4915     06C3  2EC5               	goto	u127_20
  4916     06C4                     u127_21:
  4917     06C4  2F09               	goto	i1l207
  4918     06C5                     u127_20:
  4919     06C5                     i1l1881:
  4920                           
  4921                           ;Master.c: 100:         if(PORTBbits.RB0 == 0){
  4922     06C5  1283               	bcf	3,5	;RP0=0, select bank0
  4923     06C6  1303               	bcf	3,6	;RP1=0, select bank0
  4924     06C7  1806               	btfsc	6,0	;volatile
  4925     06C8  2ECA               	goto	u128_21
  4926     06C9  2ECB               	goto	u128_20
  4927     06CA                     u128_21:
  4928     06CA  2ED4               	goto	i1l183
  4929     06CB                     u128_20:
  4930     06CB                     i1l184:
  4931     06CB  1C06               	btfss	6,0	;volatile
  4932     06CC  2ECE               	goto	u129_21
  4933     06CD  2ECF               	goto	u129_20
  4934     06CE                     u129_21:
  4935     06CE  2ECB               	goto	i1l184
  4936     06CF                     u129_20:
  4937     06CF                     i1l1885:
  4938                           
  4939                           ;Master.c: 102:             minutos++;
  4940     06CF  3001               	movlw	1
  4941     06D0  00F0               	movwf	??_isr
  4942     06D1  0870               	movf	??_isr,w
  4943     06D2  07A4               	addwf	_minutos,f
  4944                           
  4945                           ;Master.c: 103:         }
  4946     06D3  2F08               	goto	i1l1903
  4947     06D4                     i1l183:	
  4948                           ;Master.c: 104:         else if(PORTBbits.RB1 == 0){
  4949                           
  4950     06D4  1886               	btfsc	6,1	;volatile
  4951     06D5  2ED7               	goto	u130_21
  4952     06D6  2ED8               	goto	u130_20
  4953     06D7                     u130_21:
  4954     06D7  2EE1               	goto	i1l188
  4955     06D8                     u130_20:
  4956     06D8                     i1l189:
  4957     06D8  1C86               	btfss	6,1	;volatile
  4958     06D9  2EDB               	goto	u131_21
  4959     06DA  2EDC               	goto	u131_20
  4960     06DB                     u131_21:
  4961     06DB  2ED8               	goto	i1l189
  4962     06DC                     u131_20:
  4963     06DC                     i1l1889:
  4964                           
  4965                           ;Master.c: 106:             horas++;
  4966     06DC  3001               	movlw	1
  4967     06DD  00F0               	movwf	??_isr
  4968     06DE  0870               	movf	??_isr,w
  4969     06DF  07A3               	addwf	_horas,f
  4970                           
  4971                           ;Master.c: 107:         }
  4972     06E0  2F08               	goto	i1l1903
  4973     06E1                     i1l188:	
  4974                           ;Master.c: 108:         else if(PORTBbits.RB2 == 0){
  4975                           
  4976     06E1  1906               	btfsc	6,2	;volatile
  4977     06E2  2EE4               	goto	u132_21
  4978     06E3  2EE5               	goto	u132_20
  4979     06E4                     u132_21:
  4980     06E4  2EEE               	goto	i1l193
  4981     06E5                     u132_20:
  4982     06E5                     i1l194:
  4983     06E5  1D06               	btfss	6,2	;volatile
  4984     06E6  2EE8               	goto	u133_21
  4985     06E7  2EE9               	goto	u133_20
  4986     06E8                     u133_21:
  4987     06E8  2EE5               	goto	i1l194
  4988     06E9                     u133_20:
  4989     06E9                     i1l1893:
  4990                           
  4991                           ;Master.c: 110:             dias++;
  4992     06E9  3001               	movlw	1
  4993     06EA  00F0               	movwf	??_isr
  4994     06EB  0870               	movf	??_isr,w
  4995     06EC  07A2               	addwf	_dias,f
  4996                           
  4997                           ;Master.c: 111:         }
  4998     06ED  2F08               	goto	i1l1903
  4999     06EE                     i1l193:	
  5000                           ;Master.c: 112:         else if(PORTBbits.RB3 == 0){
  5001                           
  5002     06EE  1986               	btfsc	6,3	;volatile
  5003     06EF  2EF1               	goto	u134_21
  5004     06F0  2EF2               	goto	u134_20
  5005     06F1                     u134_21:
  5006     06F1  2EFB               	goto	i1l198
  5007     06F2                     u134_20:
  5008     06F2                     i1l199:
  5009     06F2  1D86               	btfss	6,3	;volatile
  5010     06F3  2EF5               	goto	u135_21
  5011     06F4  2EF6               	goto	u135_20
  5012     06F5                     u135_21:
  5013     06F5  2EF2               	goto	i1l199
  5014     06F6                     u135_20:
  5015     06F6                     i1l1897:
  5016                           
  5017                           ;Master.c: 114:             meses++;
  5018     06F6  3001               	movlw	1
  5019     06F7  00F0               	movwf	??_isr
  5020     06F8  0870               	movf	??_isr,w
  5021     06F9  07A1               	addwf	_meses,f
  5022                           
  5023                           ;Master.c: 115:         }
  5024     06FA  2F08               	goto	i1l1903
  5025     06FB                     i1l198:	
  5026                           ;Master.c: 116:         else if(PORTBbits.RB4 == 0){
  5027                           
  5028     06FB  1A06               	btfsc	6,4	;volatile
  5029     06FC  2EFE               	goto	u136_21
  5030     06FD  2EFF               	goto	u136_20
  5031     06FE                     u136_21:
  5032     06FE  2F08               	goto	i1l192
  5033     06FF                     u136_20:
  5034     06FF                     i1l204:
  5035     06FF  1E06               	btfss	6,4	;volatile
  5036     0700  2F02               	goto	u137_21
  5037     0701  2F03               	goto	u137_20
  5038     0702                     u137_21:
  5039     0702  2EFF               	goto	i1l204
  5040     0703                     u137_20:
  5041     0703                     i1l1901:
  5042                           
  5043                           ;Master.c: 118:             biciestos++;
  5044     0703  3001               	movlw	1
  5045     0704  00F0               	movwf	??_isr
  5046     0705  0870               	movf	??_isr,w
  5047     0706  07A0               	addwf	_biciestos,f
  5048     0707  2F08               	goto	i1l1903
  5049     0708                     i1l192:
  5050     0708                     i1l1903:
  5051                           
  5052                           ;Master.c: 120:         INTCONbits.RBIF = 0;
  5053     0708  100B               	bcf	11,0	;volatile
  5054     0709                     i1l207:
  5055     0709  0872               	movf	??_isr+2,w
  5056     070A  008A               	movwf	10
  5057     070B  0E71               	swapf	??_isr+1,w
  5058     070C  0083               	movwf	3
  5059     070D  0EFE               	swapf	btemp,f
  5060     070E  0E7E               	swapf	btemp,w
  5061     070F  0009               	retfie
  5062     0710                     __end_of_isr:
  5063     007E                     btemp	set	126	;btemp
  5064     007E                     wtemp0	set	126
  5065                           
  5066                           	psect	intentry
  5067     0004                     __pintentry:	
  5068                           ;incstack = 0
  5069                           ; Regs used in _isr: [wreg+status,2+status,0]
  5070                           
  5071     0004                     interrupt_function:
  5072     007E                     saved_w	set	btemp
  5073     0004  00FE               	movwf	btemp
  5074     0005  0E03               	swapf	3,w
  5075     0006  00F1               	movwf	??_isr+1
  5076     0007  080A               	movf	10,w
  5077     0008  00F2               	movwf	??_isr+2
  5078     0009  120A  118A  2EC1   	ljmp	_isr
  5079                           
  5080                           	psect	idloc
  5081                           
  5082                           ;Config register IDLOC0 @ 0x2000
  5083                           ;	unspecified, using default values
  5084     2000                     	org	8192
  5085     2000  3FFF               	dw	16383
  5086                           
  5087                           ;Config register IDLOC1 @ 0x2001
  5088                           ;	unspecified, using default values
  5089     2001                     	org	8193
  5090     2001  3FFF               	dw	16383
  5091                           
  5092                           ;Config register IDLOC2 @ 0x2002
  5093                           ;	unspecified, using default values
  5094     2002                     	org	8194
  5095     2002  3FFF               	dw	16383
  5096                           
  5097                           ;Config register IDLOC3 @ 0x2003
  5098                           ;	unspecified, using default values
  5099     2003                     	org	8195
  5100     2003  3FFF               	dw	16383
  5101                           
  5102                           	psect	config
  5103                           
  5104                           ;Config register CONFIG1 @ 0x2007
  5105                           ;	Oscillator Selection bits
  5106                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5107                           ;	Watchdog Timer Enable bit
  5108                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5109                           ;	Power-up Timer Enable bit
  5110                           ;	PWRTE = OFF, PWRT disabled
  5111                           ;	RE3/MCLR pin function select bit
  5112                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5113                           ;	Code Protection bit
  5114                           ;	CP = OFF, Program memory code protection is disabled
  5115                           ;	Data Code Protection bit
  5116                           ;	CPD = OFF, Data memory code protection is disabled
  5117                           ;	Brown Out Reset Selection bits
  5118                           ;	BOREN = OFF, BOR disabled
  5119                           ;	Internal External Switchover bit
  5120                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5121                           ;	Fail-Safe Clock Monitor Enabled bit
  5122                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5123                           ;	Low Voltage Programming Enable bit
  5124                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5125                           ;	In-Circuit Debugger Mode bit
  5126                           ;	DEBUG = 0x1, unprogramme  5127     2007                     	org	8199
  5128     2007  20D4               	dw	8404
  5129                           
  5130                           ;Config register CONFIG2 @ 0x2008
  5131                           ;	Brown-out Reset Selection bit
  5132                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5133                           ;	Flash Program Memory Self Write Enable bits
  5134                           ;	WRT = OFF, Write protection off
  5135     2008                     	org	8200
  5136     2008  3FFF               	dw	16383

Data Sizes:
    Strings     18
    Constant    10
    Data        6
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     23      79
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
		 -> Biciesto(BANK0[5]), Mes(BANK0[5]), Dia(BANK0[5]), Hora(BANK0[5]), 
		 -> Minuto(BANK0[5]), Segundo(BANK0[5]), CadADC(BANK0[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String8@a	PTR unsigned char  size(2) Largest target is 5
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[3]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> Biciesto(BANK0[5]), Mes(BANK0[5]), Dia(BANK0[5]), Hora(BANK0[5]), 
		 -> Minuto(BANK0[5]), Segundo(BANK0[5]), CadADC(BANK0[5]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor8
    _main->_bcd_a_decimal
    _sprintf->___lwmod
    _I2C_Master_Init->___lldiv
    _leer_reloj->_I2C_Master_Read
    _int_a_bcd->___lwmod
    ___lwmod->___lwdiv
    _bcd_a_decimal->___bmul
    _Lcd_Write_String8->_Lcd_Write_Char8
    _Lcd_Write_Char8->_Lcd_Port8
    _Lcd_Set_Cursor8->_Lcd_Cmd8
    _Lcd_Init8->_Lcd_Cmd8
    _Lcd_Clear8->_Lcd_Cmd8
    _Lcd_Cmd8->_Lcd_Port8

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_escribir_reloj
    _main->_sprintf
    _sprintf->___lwmod
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _int_a_bcd->___lwmod
    ___lwmod->___lwdiv
    _escribir_reloj->_int_a_bcd

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   13789
                                             20 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _Lcd_Clear8
                          _Lcd_Init8
                    _Lcd_Set_Cursor8
                  _Lcd_Write_String8
                      _bcd_a_decimal
                     _escribir_reloj
                          _int_a_bcd
                         _leer_reloj
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    2771
                                              7 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     542
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              8 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _leer_reloj                                           7     5      2     971
                                              0 BANK0      7     5      2
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     197
                                              3 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _int_a_bcd                                            8     6      2    2091
                                              7 BANK0      8     6      2
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     592
                                              8 COMMON     2     2      0
                                              3 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     601
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _escribir_reloj                                       5     3      2    1130
                                             15 BANK0      5     3      2
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _int_a_bcd (ARG)
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     706
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bcd_a_decimal                                        3     3      0     212
                                              7 COMMON     3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String8                                    7     5      2    2510
                                              7 COMMON     2     0      2
                                              0 BANK0      5     5      0
                    _Lcd_Write_Char8
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char8                                      4     4      0     130
                                              4 COMMON     3     3      0
                          _Lcd_Port8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor8                                      5     4      1    2504
                                              7 COMMON     3     2      1
                           _Lcd_Cmd8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init8                                            2     2      0      93
                                              7 COMMON     2     2      0
                           _Lcd_Cmd8
                          _Lcd_Port8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear8                                           0     0      0      62
                           _Lcd_Cmd8
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd8                                             3     3      0      62
                                              4 COMMON     3     3      0
                          _Lcd_Port8
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port8                                            1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear8
     _Lcd_Cmd8
       _Lcd_Port8
   _Lcd_Init8
     _Lcd_Cmd8
     _Lcd_Port8
   _Lcd_Set_Cursor8
     _Lcd_Cmd8
   _Lcd_Write_String8
     _Lcd_Write_Char8
       _Lcd_Port8
   _bcd_a_decimal
     ___bmul
   _escribir_reloj
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _int_a_bcd (ARG)
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
   _int_a_bcd
   _leer_reloj
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _setup
     _I2C_Master_Init
       ___lldiv
   _sprintf
     ___lwdiv
     ___lwmod

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     17      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5A      12        0.0%
ABS                  0      0      5A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Aug 11 09:25:26 2023

                               pc 0002                    ___bmul@product 0075                                l32 0E59  
                              l41 0E41                                l50 0F42                                l35 0E65  
                              l51 0F45                                l44 0E38                                l52 0F4A  
                              l29 0F84                                l38 0E2F                                l47 0E4B  
                              fsr 0004               ___wmul@multiplicand 0075                  ?_Lcd_Write_Char8 0070  
                             l212 0056                               l242 0E90                               l251 0FFF  
                             l403 05B1                               l254 06C0                               l263 0E18  
                             l407 0ED7                               l239 0F1C                               _ADC 0025  
                             l248 066F                Lcd_Write_String8@a 0077                               l281 07FE  
                             l433 0E7A                               l409 0EEF                               l266 0EAA  
                             l275 0ECA                               l443 0619                               l269 0E58  
                             l278 075A                               l287 07E6                Lcd_Write_String8@i 0055  
                             l679 07A0                               l689 0FC0                               _GIE 005F  
                             u820 0E5F                               u821 0E5E                               u830 0E65  
                             u831 0E64                               u920 0F3E                               u921 0F3D  
                             u930 0ED1                               u931 0ED0                               u960 0EEB  
                             u961 0EEA                               u945 0ED8                               u970 0E6C  
                             u971 0E6B                               u955 0EDF                               u980 0E79  
                             u981 0E78                               _Dia 0039                               _Mes 0034  
                             _isr 06C1                               fsr0 0004                               indf 0000  
                            l2201 075F                              l2211 0777                              l2203 0765  
                            l2213 0788                              l2205 0768                              l2221 079C  
                            l2301 064B                              l2141 05B2                              l2215 078E  
                            l2207 076F                              l2231 0F97                              l2303 0652  
                            l2311 0673                              l2151 05E1                              l2143 05C4  
                            l2401 0EC1                              l2217 078F                              l2209 0773  
                            l2241 0FB6                              l2233 0F9B                              l2225 0F85  
                            l2305 0665                              l1601 0F3E                              l2321 0699  
                            l2313 0673                              l2153 05F3                              l2145 05C7  
                            l2161 0611                              l2139 0E14                              l2403 0EC4  
                            l2411 07CA                              l2219 0796                              l2235 0F9F  
                            l2227 0F8D                              l2243 0FBC                              l2307 066B  
                            l1603 0F46                              l2323 06A7                              l2315 0678  
                            l2155 0601                              l2147 05D4                              l2171 0F81  
                            l2251 0EF9                              l2331 04D9                              l2181 0E9B  
                            l2405 07A1                              l1533 0E59                              l2237 0FA9  
                            l2229 0F90                              l2325 06B5                              l2317 0686  
                            l2157 0602                              l2149 05D8                              l2173 0F82  
                            l2165 0F4B                              l2261 0F00                              l2253 0EFA  
                            l2333 04DC                              l2501 0317                              l2421 0081  
                            l2413 0041                              l2183 0E9E                              l2191 07ED  
                            l2407 07A6                              l1535 0E5F                              l2239 0FAF  
                            l1631 0ECD                              l2327 06BA                              l2319 0694  
                            l2159 060B                              l2175 0F83                              l2167 0F4F  
                            l2271 0F09                              l2263 0F01                              l2255 0EFB  
                            l2247 0EF0                              l2351 051A                              l2343 04ED  
                            l2335 04E2                              l2511 034A                              l2503 031F  
                            l2431 013D                              l2423 0086                              l2415 0050  
                            l2185 0EA7                              l2177 0E92                              l2193 07F3  
                            l2409 07C2                              l1633 0ED1                              l2169 0F52  
                            l2273 0F0A                              l2265 0F04                              l2257 0EFE  
                            l2249 0EF7                              l2361 0525                              l2353 051E  
                            l2345 050A                              l2337 04E7                              l2601 04A1  
                            l2521 037E                              l2513 0353                              l2505 0327  
                            l2441 0198                              l2433 0147                              l2425 008F  
                            l2417 0054                              l2179 0E95                              l2291 0734  
                            l2283 0710                              l2195 07F6                              l2187 07E8  
                            l1651 0E72                              l1643 0E67                              l1635 0EDE  
                            l2275 0F0B                              l2267 0F06                              l2259 0EFF  
                            l2371 0556                              l2355 0523                              l2347 0512  
                            l2339 04EC                              l2611 04BA                              l2603 04A4  
                            l2531 03B0                              l2523 0386                              l2515 035B  
                            l2507 0330                              l2451 01F0                              l2443 01B3  
                            l2435 0162                              l2427 009B                              l2419 0077  
                            l2293 0E4C                              l2285 0716                              l2197 07FB  
                            l2189 07EA                              l1653 0E79                              l1645 0E68  
                            l1637 0EE5                              l1629 0ECB                              l1581 0E3E  
                            l2277 0F0C                              l2269 0F08                              l2381 0594  
                            l2373 055A                              l2365 0541                              l2349 0516  
                            l2613 04C0                              l2605 04A8                              l2541 03ED  
                            l2533 03B9                              l2525 038F                              l2517 0363  
                            l2509 0342                              l2461 0245                              l2453 0201  
                            l2445 01C4                              l2437 0173                              l2429 00A0  
                            l2287 071F                              l1647 0E6C                              l1575 0E27  
                            l1583 0E30                              l2199 075B                              l1639 0EEB  
                            l2295 061A                              l1591 0F1D                              l2279 0F0D  
                            l2375 055D                              l2367 054B                              l2383 059D  
                            l2615 04C6                              l2607 04AE                              l2551 0420  
                            l2543 03F5                              l2535 03CB                              l2527 03A0  
                            l2519 036C                              l2471 0274                              l2463 024A  
                            l2455 0212                              l2447 01CE                              l2439 018E  
                            l2289 072E                              l2393 0EAC                              l1649 0E70  
                            l1577 0E2C                              l1585 0E35                              l2297 061E  
                            l1593 0F22                              l2377 058B                              l2369 0551  
                            l2385 05AD                              l2617 04CA                              l2609 04B4  
                            l2561 0447                              l2553 0429                              l2545 03FD  
                            l2537 03D3                              l2529 03A8                              l2481 02A8  
                            l2473 027C                              l2465 0252                              l2457 0223  
                            l2449 01DF                              l2395 0EB1                              l1587 0E42  
                            l1771 0FF5                              l2299 0623                              l1595 0F2A  
                            l1579 0E39                              l2379 0590                              l2619 04CE  
                            l2571 0456                              l2563 0448                              l2555 0438  
                            l2547 0406                              l2539 03DC                              l2491 02DA  
                            l2483 02B9                              l2475 0285                              l2467 0263  
                            l2459 0234                              l2397 0EB4                              l1589 0E47  
                            l1597 0F33                              l2645 04FF                              l2581 046D  
                            l2573 045C                              l2565 044E                              l2557 0440  
                            l2549 0418                              l2493 02E3                              l2485 02C1  
                            l2477 0297                              l2469 026C                              l2399 0EBB  
                            l1599 0F38                              l2591 0485                              l2583 0471  
                            l2575 0460                              l2567 044F                              l2559 0441  
                            l2495 02F5                              l2487 02CA                              l2479 029F  
                            l1793 0E7C                              l1769 0FC4                              l2585 0477  
                            l2593 0489                              l2577 0466                              l2569 0455  
                            l2497 02FD                              l2489 02D2                              l2595 048F  
                            l2587 047D                              l2579 046C                              l2499 0306  
                            l2597 0495                              l2589 0483                              l2599 049B  
                            ?_isr 0070                              STR_1 0825                              STR_2 0825  
                            STR_3 0825                              STR_4 0825                              STR_5 0825  
                            STR_6 0825                              STR_7 0825                              STR_8 081E  
                            STR_9 081A                              u2000 031F                              u2001 031E  
                            u2010 035B                              u2011 035A                              u2100 046C  
                            u2020 03A8                              u2101 046B                              u2021 03A7  
                            u2110 0477                              u2030 03F5                              u2111 0476  
                            u2031 03F4                              u2200 04BA                              u2120 047D  
                            u2040 0440                              u1145 0E84                              u2201 04B9  
                            u2121 047C                              u2041 043F                              u2210 04C0  
                            u2130 0483                              u2050 0447                              u2211 04BF  
                            u2131 0482                              u2051 0446                              u2220 04C6  
                            u2140 048F                              u2060 044E                              _IOCB 0096  
                            u2221 04C5                              u2141 048E                              u2061 044D  
                            u2150 0495                              u2070 0455                              u2151 0494  
                            u2071 0454                              u2160 049B                              u2080 045C  
                            u2161 049A                              u2081 045B                              u2170 04A1  
                            u2090 0466                              u2171 04A0                              u2091 0465  
                            u2307 01CA                              u1700 0F62                              u2180 04AE  
                            u2181 04AD                              u2317 0431                              u2237 007D  
                            u1710 0765                              u1630 05C4                              u2190 04B4  
                            u2327 0FFB                              u1711 0764                              u1631 05C3  
                            u2191 04B3                              u2247 00A6                              u1800 0F9F  
                            u2337 07F8                              u1801 0F9E                              u1705 0F5D  
                            u2257 0143                              u1730 0777                              u1810 0FA9  
                            u1650 05D8                              u2347 071A                              u1731 0776  
                            u1811 0FA8                              u1651 05D7                              u2267 015E  
                            u1900 0551                              u2357 0729                              u1725 0769  
                            u1645 05C9                              u1901 0550                              u2277 0179  
                            u1750 0788                              u1830 0FBC                              u1670 05F3  
                            u1910 059D                              u2367 0738                              u1751 0787  
                            u1831 0FBB                              u1815 0FA5                              u1671 05F2  
                            u1911 059C                              u2287 0194                              u1920 05AD  
                            u2377 0EA2                              u1745 0778                              u1825 0FB0  
                            u1665 05DA                              u1921 05AC                              u2297 01AF  
                            u1930 0EB1                              u1770 079C                              u1850 066B  
                            u1690 0611                              u1931 0EB0                              u1771 079B  
                            u1755 0784                              u1851 066A                              u1691 0610  
                            u1675 05EF                              u1940 0EC1                              u1780 0F8D  
                            u1860 04E2                              u1941 0EC0                              u1765 0790  
                            u1781 0F8C                              u1845 064C                              u1685 0603  
                            u1861 04E1                              u1950 07B0                              u1870 051A  
                            u1871 0519                              u1960 07D4                              u1880 0540  
                            u1881 053F                              u1970 07E6                              u1890 054B  
                            u1971 07E5                              u1795 0F91                              u1891 054A  
                            _PEIE 005E                              u1980 0274                              u1885 053C  
                            u1981 0273                              u1990 02D2                              u1991 02D1  
                            _Hora 003E                              _dias 0022  __end_of_I2C_Master_RepeatedStart 0E42  
                            _main 0041                              btemp 007E                              start 000C  
               ___bmul@multiplier 0076                        _Lcd_Clear8 0E4C                             ??_isr 0070  
                ?_I2C_Master_Init 005A                  ?_I2C_Master_Read 0073                  ?_I2C_Master_Wait 0070  
                ?_I2C_Master_Stop 0070                             ?_main 0070                             STR_10 0822  
                           STR_11 0828                             STR_12 081C                             STR_13 0828  
                           STR_14 081C                             STR_15 081C                             STR_16 082A  
                           STR_17 081C                             STR_18 082A                             STR_19 081C  
                           _ANSEL 0188                   __end_of___lldiv 061A                   __end_of___lwdiv 07A1  
                           i1l204 06FF                             i1l207 0709                             i1l183 06D4  
                           i1l192 0708                             i1l184 06CB                             i1l193 06EE  
                 __end_of___lwmod 0FC1                             i1l194 06E5                             i1l188 06E1  
                           i1l189 06D8                             i1l198 06FB                             i1l199 06F2  
                           _PORTA 0005                             _PORTB 0006                             _PORTD 0008  
                           _PORTE 0009                             _TRISA 0085                             _TRISB 0086  
                           _TRISD 0088                             _SSPIE 0463                             _TRISE 0089  
                           _SSPIF 0063                 _Lcd_Write_String8 07A1                ?_Lcd_Write_String8 0077  
                 __end_of_dpowers 081A                             _horas 0023                             _meses 0021  
                           _setup 0EF0                             pclath 000A               ??_Lcd_Write_String8 0052  
                           status 0003                             wtemp0 007E                   __end_of_sprintf 05B2  
                __end_of_Lcd_Cmd8 0EAB                   __initialization 000F                      __end_of_main 04D6  
                          ??_main 0066         __end_of_Lcd_Write_String8 07E7                 ?_I2C_Master_Start 0070  
               ?_I2C_Master_Write 0073                ??_I2C_Master_Start 0073                ??_I2C_Master_Write 0075  
                   _bcd_a_decimal 0E7B                            ?_setup 0070                            _ANSELH 0189  
                          i1l1901 0703                            i1l1903 0708                            u130_20 06D8  
                          u130_21 06D7                            u131_20 06DC                            u131_21 06DB  
                          i1l1881 06C5                            i1l1893 06E9                            i1l1885 06CF  
                          i1l1879 06C1                            u132_20 06E5                            i1l1897 06F6  
                          u132_21 06E4                            i1l1889 06DC                            u133_20 06E9  
                          u133_21 06E8                            u134_20 06F2                            u134_21 06F1  
                          u135_20 06F6                            u127_20 06C5                            u135_21 06F5  
                          u127_21 06C4                            u136_20 06FF                            u128_20 06CB  
                          u136_21 06FE                            u128_21 06CA                            u137_20 0703  
                          u129_20 06CF                            u137_21 0702                            u129_21 06CE  
                          _CadADC 004D                            _SSPADD 0093                            _TRISC3 043B  
                          _TRISC4 043C                            _SSPCON 0014                            _SSPBUF 0013  
                _biciesto_decimal 0027                            _Minuto 0043          _I2C_Master_RepeatedStart 0E39  
                          ___bmul 0E66                       ?_Lcd_Clear8 0070                            ___wmul 0ECB  
                       ??___lldiv 0073                         ??___lwdiv 0077                         ??___lwmod 0078  
                Lcd_Write_Char8@a 0076                  Lcd_Write_Char8@y 0075                    _escribir_reloj 0FC1  
                          saved_w 007E                    ?_bcd_a_decimal 0070                         ??_sprintf 005C  
         __end_of__initialization 003D                 __end_of_Lcd_Init8 075B                 __end_of_Lcd_Port8 0E19  
             ___bmul@multiplicand 0073                    __pcstackCOMMON 0070                      __pidataBANK0 0E19  
                   __end_of_setup 0F1D            __end_of_escribir_reloj 1000                    _OPTION_REGbits 0081  
                       ?_Lcd_Cmd8 0070             _ds3231_direccion_dias 006B                           ??_setup 0079  
                      __pbssBANK0 0020                     _horas_decimal 002A                        __pmaintext 0041  
                         ?___bmul 0073                       _ds3231_leer 007A                 ??_Lcd_Set_Cursor8 0078  
                         ?___wmul 0073                        __pintentry 0004               leer_reloj@direccion 0056  
                 ?_escribir_reloj 0061                   ??_bcd_a_decimal 0077                     _meses_decimal 0028  
                      ??_Lcd_Cmd8 0074                           _SSPCON2 0091                           _SSPSTAT 0094  
                      __stringtab 0800                   _ds3231_escribir 002E                        _leer_reloj 0670  
                         _Segundo 0048                           ___lldiv 05B2                           ___lwdiv 075B  
                         ___lwmod 0F85                   _minutos_decimal 002B                      int_a_bcd@bcd 005D  
                         __ptext1 04D6                           __ptext2 0EF0                           __ptext3 0F4B  
                         __ptext4 05B2                           __ptext5 0670                           __ptext6 0E39  
                         __ptext7 0F1D                           __ptext8 061A                           __ptext9 0ECB  
                         _dpowers 0810                 __end_of_int_a_bcd 0670                           _minutos 0024  
                         _sprintf 04D6                           clrloop0 0E20              end_of_initialization 003D  
      ??_I2C_Master_RepeatedStart 0073          _ds3231_direccion_minutos 006D                         Lcd_Cmd8@a 0076  
                 ___lldiv@divisor 0052                   ___lldiv@counter 0078                  I2C_Master_Init@c 005A  
                    ??_Lcd_Clear8 0077                  I2C_Master_Read@a 0073           escribir_reloj@direccion 0065  
                Lcd_Set_Cursor8@a 0078                  Lcd_Set_Cursor8@b 0077                         _PORTBbits 0006  
                       _PORTEbits 0009         _ds3231_direccion_segundos 002D                         _TRISCbits 0087  
              __end_of_Lcd_Clear8 0E59                 ??_Lcd_Write_Char8 0074                       ?_leer_reloj 0052  
                   leer_reloj@bcd 0057                         _Lcd_Init8 0710                         _Lcd_Port8 0E13  
                  __end_of___bmul 0E7B                    __end_of___wmul 0EF0               start_initialization 000F  
             int_a_bcd@multiplier 005F                       __end_of_isr 0710                   _Lcd_Set_Cursor8 0EAB  
               ??_I2C_Master_Init 005E                 ??_I2C_Master_Read 0075                 ??_I2C_Master_Wait 0073  
               ??_I2C_Master_Stop 0073                          ??___bmul 0074                        ?_Lcd_Init8 0070  
                        ??___wmul 0077                        ?_Lcd_Port8 0070                  ??_escribir_reloj 0063  
          _ds3231_direccion_horas 006C            _ds3231_direccion_meses 006A                       __pdataBANK0 0069  
                     _dia_decimal 0029                       __pbssCOMMON 007A                         ___latbits 0002  
                   __pcstackBANK0 0052                       sprintf@flag 0060                       sprintf@prec 0061  
                       _biciestos 0020                  _I2C_Master_Start 0E27                  _I2C_Master_Write 0E42  
                ___lwdiv@dividend 0075                    int_a_bcd@digit 005B                    int_a_bcd@value 0059  
                        ?___lldiv 0052                          ?___lwdiv 0073                          ?___lwmod 0055  
                       __pstrings 0800                  _segundos_decimal 002C           __end_of_Lcd_Set_Cursor8 0ECB  
           __end_of_bcd_a_decimal 0E91                  ___lwdiv@quotient 0053                         _int_a_bcd 061A  
                        ?_sprintf 0059                 interrupt_function 0004                    ___wmul@product 0077  
                       clear_ram0 0E1F                       ??_Lcd_Init8 0077                       ??_Lcd_Port8 0073  
                     __stringbase 080F                 ___wmul@multiplier 0073                  _ds3231_direccion 006E  
                        _Biciesto 002F                   _Lcd_Write_Char8 07E7                          _Lcd_Cmd8 0E91  
                      ?_int_a_bcd 0059               I2C_Master_Read@temp 0077                      ??_leer_reloj 0054  
       ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 0810                        sprintf@val 0062  
                 _I2C_Master_Init 0F4B                   _I2C_Master_Read 0F1D                   _I2C_Master_Wait 0E59  
                 _I2C_Master_Stop 0E30                __end_of_leer_reloj 06C1                  ?_Lcd_Set_Cursor8 0077  
                 ___lwdiv@divisor 0073                   ___lwdiv@counter 0052                          __ptext10 0F85  
                        __ptext11 075B                          __ptext20 07E7                          __ptext12 0FC1  
                        __ptext21 0EAB                          __ptext13 0E42                          __ptext22 0710  
                        __ptext14 0E30                          __ptext23 0E4C                          __ptext15 0E27  
                        __ptext24 0E91                          __ptext16 0E59                          __ptext25 0E13  
                        __ptext17 0E7B                          __ptext26 06C1                          __ptext18 0E66  
                        __ptext19 07A1                          _contador 0026               Lcd_Set_Cursor8@temp 0079  
         __end_of_Lcd_Write_Char8 07FF          __end_of_I2C_Master_Start 0E30          __end_of_I2C_Master_Write 0E4C  
                      _INTCONbits 000B        _ds3231_direccion_biciestos 0069                       ??_int_a_bcd 007A  
                        intlevel1 0000                         sprintf@ap 005F                         sprintf@sp 0064  
                ___lwmod@dividend 0057                  ___lldiv@dividend 0056                         stringcode 080A  
                      _OSCCONbits 008F                  bcd_a_decimal@bcd 0079           __end_of_I2C_Master_Init 0F85  
         __end_of_I2C_Master_Read 0F4B           __end_of_I2C_Master_Wait 0E66                        Lcd_Port8@a 0073  
         __end_of_I2C_Master_Stop 0E39                          sprintf@c 0065                          sprintf@f 0059  
                ___lldiv@quotient 0074                 I2C_Master_Write@d 0073                   ___lwmod@divisor 0055  
                 ___lwmod@counter 0079                          stringdir 080A                          stringtab 0800  
                     _SSPCON2bits 0091               escribir_reloj@valor 0061  
